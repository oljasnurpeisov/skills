(function(){let a=function(a){let b=a.querySelector(".skills-select"),c=b.value?+b.value:-1,d=new ajaxSelect($(`[name="${b.name}"]`).not(".selectized")),f=a.querySelector(".professions-select"),g=f.dataset.maxitems,h=new ajaxSelect2($(`[name="${f.name}"]`).not(".selectized"),!0,c,g?g:null),i=a.querySelector(".icon-close");setTimeout(function(){b.addEventListener("change",function(a){a.target.value?(h.update(a.target.value),showEl(f.closest(".form-group"))):(hideEl(f.closest(".form-group")),h.clear(),h.clearOptions())})},600),i&&i.addEventListener("click",function(){a.remove()})};document.querySelectorAll(".professions-group").forEach(function(b){new a(b)});let b={skillsLabel:document.querySelector("#skillsLabel").innerHTML,skillsPlaceholder:document.querySelector("#skillsSelect").getAttribute("placeholder"),professionsLabel:document.querySelector("#professionsLabel").innerHTML,professionsPlaceholder:document.querySelector("#professionsSelect").getAttribute("placeholder")},c=`<div class="professions-group">
                                                    <div class="form-group">
                                                        <label class="form-group__label" id="skillsLabel">${b.skillsLabel}</label>
                                                        <div class="input-addon">
                                                            <select name="$skillName" placeholder="${b.skillsPlaceholder}"
                                                                    data-method="getSkills"  class="skills-select" required>
                                                            </select>
                                                            <div class="addon">
                                                                <div class="btn-icon icon-close small"></div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="form-group" style="display: none">
                                                        <label class="form-group__label">${b.professionsLabel}</label>
                                                        <select name="$professionsName" placeholder="${b.professionsPlaceholder}"
                                                                data-method="getProfessionsBySkills" data-maxitems="7"  class="professions-select" multiple required>
                                                        </select>
                                                    </div>
                                                </div>`,d=document.querySelector("#professionsContainer"),f=document.querySelector("#addProfessionGroup"),g=f.dataset.maxitems;f.addEventListener("click",function(b){b.preventDefault();let e=d.lastElementChild.querySelector(".skills-select"),h=+e.name.replace(/(^.*\[|\].*$)/g,"")+1,i=document.createElement("div");i.innerHTML=c.replace(`$skillName`,`skills[${h}]`).replace("$professionsName",`professions[${h}][]`);let j=i.querySelector(".icon-close"),k=i.firstChild;j.addEventListener("click",function(a){a.preventDefault(),k.remove(),f.style.display="inline-flex"}),d.append(k);new a(k);g&&d.children.length>=g&&(f.style.display="none")})})();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
