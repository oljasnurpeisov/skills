let ajaxSelect=function(a,b=null,c=!0){function d(a){let b=[];a.forEach(function(a){b.push({value:a.id,text:a["name"+(c?"_"+j:"")]})}),m.addOption(b)}function e(){let a=[];Object.values(m.options).forEach(b=>{a.push(b.value)}),m.setValue(a)}function f(a){m.setTextboxValue(a),m.focus()}function g(){m.addOption({$order:0,value:"",text:a.data("default")})}function h(b=null,c="",h=!1){$.ajax({type:"POST",url:k,data:{...b,name:c},success:function(b){m.clearOptions(),e(),a.data("default")&&g(),d(b),h&&f(c)},error:function(a){console.log(a)}})}const i=a.data("method"),j=window.Laravel.lang,k="/"+j+"/"+i;let l=a.selectize({plugins:a[0].hasAttribute("multiple")?["remove_button","silent_remove","stop_backspace_delete"]:null,allowEmptyOption:!0,onInitialize:function(){let a=b?b.val()?{professions:toArray(b.val())}:null:null;h(a)}}),m=l[0].selectize;m.on("type",delay(function(a){let c=b?b.val()?{professions:toArray(b.val())}:null:null;h(c,a,!0)},600)),m.on("change",function(){m.$control_input[0].placeholder=a[0].attributes.placeholder.value}),a[0].hasAttribute("multiple")||m.on("focus",function(){m.clear()}),this.update=function(a){h(a)}};function delay(a,b){let c=0;return function(){let d=this,e=arguments;clearTimeout(c),c=setTimeout(function(){a.apply(d,e)},b||0)}}Selectize.define("silent_remove",function(){let a=this;this.on("item_remove",function(){this.plugin_silent_remove_in_remove=!0}),this.search=function(){let b=a.search;return function(){return"undefined"==typeof this.plugin_silent_remove_in_remove?b.apply(this,arguments):(delete this.plugin_silent_remove_in_remove,{items:{},query:[],tokens:[]})}}()}),Selectize.define("stop_backspace_delete",function(){let a=this;this.deleteSelection=function(){let b=a.deleteSelection;return function(a){return!(a&&8===a.keyCode)&&b.apply(this,arguments)}}()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
