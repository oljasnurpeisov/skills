let ajaxSelect=function(a,b=null,c=!0){function d(a=null,b="",c=!1,d=!0){$.ajax({type:"GET",url:e.url,data:{...a,name:b},success:function(a){d&&e.controls.clearOptions(),0===a.data.length?(e.controls.$control[0].classList.add("no-results"),e.addMessage()):(e.saveOldOptions(),e.el.data("default")&&e.addDefaultOption(),e.renderNewOptions(a.data),c&&e.focusOnSearchField(b),e.removeMessage()),e.pageCounter=1,e.lastPage=a.current_page===a.last_page},error:function(a){console.log(a)}})}let e=this;this.el=a,this.parentEl=b,this.multiLang=c,this.method=this.el.data("method"),this.domainName=document.location.origin,this.lang=window.Laravel.lang,this.url=this.domainName+"/"+this.lang+"/"+this.method,this.pageCounter=1,this.lastPage=!1,this.loadEnable=!0,this.select=this.el.selectize({plugins:this.el[0].hasAttribute("multiple")?["remove_button","silent_remove","stop_backspace_delete"]:null,allowEmptyOption:!0,maxOptions:1e4,onInitialize:function(){let a=e.parentEl?e.parentEl.val()?{professions:toArray(e.parentEl.val())}:null:null;d(a)},onChange:function(){this.$input[0].dispatchEvent(changeEvent)}}),this.controls=this.select[0].selectize,this.dropdownContent=this.controls.$dropdown_content,this.noResultsDefaultMsg={en:"No results",ru:"\u041D\u0438\u0447\u0435\u0433\u043E \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D\u043E",kk:"\u0415\u0448\u0442\u0435\u043D\u0435 \u0442\u0430\u0431\u044B\u043B\u0433\u0430\u043D \u0436\u043E\u043A"},this.noResultsMsg=this.controls.$input[0].dataset.noresults?this.controls.$input[0].dataset.noresults:this.noResultsDefaultMsg[this.lang],this.controls.on("type",delay(function(a){let b=e.parentEl?e.parentEl.val()?{professions:toArray(e.parentEl.val())}:null:null;d(b,a,!0)},1e3)),this.controls.on("change",function(){e.controls.$control_input[0].placeholder=e.el[0].attributes.placeholder.value,e.loadEnable=!1,setTimeout(function(){e.loadEnable=!0},150)}),this.controls.on("blur",function(){e.controls.$control[0].classList.remove("no-results"),e.removeMessage()}),this.controls.on("focus",function(){e.el[0].hasAttribute("multiple")||e.controls.clear()}),this.dropdownContent.on("scroll",function(){let a=e.parentEl?e.parentEl.val()?{professions:toArray(e.parentEl.val())}:null:null,b=e.dropdownContent[0].scrollHeight-e.dropdownContent[0].scrollTop-e.dropdownContent[0].clientHeight;if(1e3>b&&e.loadEnable&&!e.lastPage){e.loadEnable=!1,e.controls.$dropdown[0].classList.add("loading");let b=e.dropdownContent[0].scrollTop;e.getNextPage(a,b)}}),this.renderNewOptions=function(a){let b=[];a.forEach(function(a){b.push({value:a.id,text:a["name"+(e.multiLang?"_"+e.lang:"")]})}),e.controls.addOption(b)},this.saveOldOptions=function(){let a=[];Object.values(e.controls.options).forEach(b=>{a.push(b.value)}),e.controls.setValue(a)},this.addMessage=function(){let a=document.createElement("div");a.className="noresults-message",a.innerHTML=e.noResultsMsg,e.controls.$control[0].parentElement.append(a)},this.removeMessage=function(){let a=e.controls.$control[0].parentElement.querySelector(".noresults-message");a&&a.remove()},this.focusOnSearchField=function(a){e.controls.setTextboxValue(a),e.controls.focus()},this.addDefaultOption=function(){e.controls.addOption({$order:0,value:"",text:e.el.data("default")})},this.getNextPage=function(a,b){$.ajax({type:"GET",url:e.url,data:{...a,name:e.controls.lastQuery,page:e.pageCounter+1},success:function(a){e.renderNewOptions(a.data),e.controls.refreshOptions(),e.loadEnable=!0,e.pageCounter++,setTimeout(function(){e.controls.$dropdown[0].classList.remove("loading")},150),e.dropdownContent[0].scrollTop=b,a.current_page===a.last_page&&(e.lastPage=!0)},error:function(a){console.log(a)}})},this.update=function(a){d(a)},this.clear=function(){e.controls.clear()}},ajaxSelect2=function(a,b=!0,c=null,d=null){function e(a,b="",c=!1,d=!0){-1!==a&&$.ajax({type:"GET",url:f.url+"/"+a,data:{name:b},success:function(a){d&&f.controls.clearOptions(),0===a.data.length?(f.controls.$control[0].classList.add("no-results"),f.addMessage()):(f.saveOldOptions(),f.el.data("default")&&f.addDefaultOption(),f.renderNewOptions(a.data),c&&f.focusOnSearchField(b),f.removeMessage()),f.pageCounter=1,f.lastPage=a.current_page===a.last_page},error:function(a){console.log(a)}})}let f=this;this.el=a,this.multiLang=b,this.skillId=c,this.method=this.el.data("method"),this.domainName=document.location.origin,this.lang=window.Laravel.lang,this.url=this.domainName+"/"+this.lang+"/"+this.method,this.pageCounter=1,this.lastPage=!1,this.loadEnable=!0,this.select=this.el.selectize({plugins:this.el[0].hasAttribute("multiple")?["remove_button","silent_remove","stop_backspace_delete"]:null,allowEmptyOption:!0,maxOptions:1e4,maxItems:d,onInitialize:function(){e(f.skillId)}}),this.controls=this.select[0].selectize,this.dropdownContent=this.controls.$dropdown_content,this.noResultsDefaultMsg={en:"No results",ru:"\u041D\u0438\u0447\u0435\u0433\u043E \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D\u043E",kk:"\u0415\u0448\u0442\u0435\u043D\u0435 \u0442\u0430\u0431\u044B\u043B\u0433\u0430\u043D \u0436\u043E\u043A"},this.noResultsMsg=this.controls.$input[0].dataset.noresults?this.controls.$input[0].dataset.noresults:this.noResultsDefaultMsg[this.lang],this.controls.on("type",delay(function(a){e(f.skillId,a,!0)},1e3)),this.controls.on("change",function(){f.controls.$control_input[0].placeholder=f.el[0].attributes.placeholder.value,f.loadEnable=!1,setTimeout(function(){f.loadEnable=!0},150)}),this.controls.on("blur",function(){f.controls.$control[0].classList.remove("no-results"),f.removeMessage()}),this.controls.on("focus",function(){f.el[0].hasAttribute("multiple")||f.controls.clear()}),this.dropdownContent.on("scroll",function(){let a=f.parentEl?f.parentEl.val()?{professions:toArray(f.parentEl.val())}:null:null,b=f.dropdownContent[0].scrollHeight-f.dropdownContent[0].scrollTop-f.dropdownContent[0].clientHeight;if(1e3>b&&f.loadEnable&&!f.lastPage){f.loadEnable=!1,f.controls.$dropdown[0].classList.add("loading");let a=f.dropdownContent[0].scrollTop;f.getNextPage(f.skillId,a)}}),this.renderNewOptions=function(a){let b=[];a.forEach(function(a){b.push({value:a.id,text:a["name"+(f.multiLang?"_"+f.lang:"")]})}),f.controls.addOption(b)},this.saveOldOptions=function(){let a=[];Object.values(f.controls.options).forEach(b=>{a.push(b.value)}),f.controls.setValue(a)},this.addMessage=function(){let a=document.createElement("div");a.className="noresults-message",a.innerHTML=f.noResultsMsg,f.controls.$control[0].parentElement.append(a),setTimeout(function(){f.removeMessage()},3e3)},this.removeMessage=function(){let a=f.controls.$control[0].parentElement.querySelector(".noresults-message");a&&a.remove()},this.focusOnSearchField=function(a){f.controls.setTextboxValue(a),f.controls.focus()},this.addDefaultOption=function(){f.controls.addOption({$order:0,value:"",text:f.el.data("default")})},this.getNextPage=function(a,b){$.ajax({type:"GET",url:f.url+"/"+a,data:{name:f.controls.lastQuery,page:f.pageCounter+1},success:function(a){f.renderNewOptions(a.data),f.controls.refreshOptions(),f.loadEnable=!0,f.pageCounter++,setTimeout(function(){f.controls.$dropdown[0].classList.remove("loading")},150),f.dropdownContent[0].scrollTop=b,a.current_page===a.last_page&&(f.lastPage=!0)},error:function(a){console.log(a)}})},this.update=function(a){e(a)},this.clear=function(){this.controls.clear()},this.clearOptions=function(){this.controls.clearOptions()}};function delay(a,b){let c=0;return function(){let d=this,e=arguments;clearTimeout(c),c=setTimeout(function(){a.apply(d,e)},b||0)}}Selectize.define("silent_remove",function(){let a=this;this.on("item_remove",function(){this.plugin_silent_remove_in_remove=!0}),this.search=function(){let b=a.search;return function(){return"undefined"==typeof this.plugin_silent_remove_in_remove?b.apply(this,arguments):(delete this.plugin_silent_remove_in_remove,{items:{},query:[],tokens:[]})}}()}),Selectize.define("stop_backspace_delete",function(){let a=this;this.deleteSelection=function(){let b=a.deleteSelection;return function(a){return!(a&&8===a.keyCode)&&b.apply(this,arguments)}}()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
