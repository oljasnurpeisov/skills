let ajaxSelect=function(a,b=null,c=!0){function d(a){let b=[];a.forEach(function(a){b.push({value:a.id,text:a["name"+(c?"_"+l:"")]})}),r.addOption(b)}function e(){let a=[];Object.values(r.options).forEach(b=>{a.push(b.value)}),r.setValue(a)}function f(){let a=document.createElement("div");a.className="noresults-message",a.innerHTML=t,r.$control[0].parentElement.append(a)}function g(){let a=r.$control[0].parentElement.querySelector(".noresults-message");a&&a.remove()}function h(a){r.setTextboxValue(a),r.focus()}function i(){r.addOption({$order:0,value:"",text:a.data("default")})}function j(b=null,c="",j=!1,k=!0){$.ajax({type:"POST",url:m,data:{...b,name:c},success:function(b){0===b.data.length?(r.$control[0].classList.add("no-results"),f()):(k&&r.clearOptions(),e(),a.data("default")&&i(),d(b.data),j&&h(c),g()),n=1,o=b.current_page===b.last_page},error:function(a){console.log(a)}})}let k=a.data("method"),l=window.Laravel.lang,m="/"+l+"/"+k,n=1,o=!1,p=!0,q=a.selectize({plugins:a[0].hasAttribute("multiple")?["remove_button","silent_remove","stop_backspace_delete"]:null,allowEmptyOption:!0,maxOptions:1e4,onInitialize:function(){let a=b?b.val()?{professions:toArray(b.val())}:null:null;j(a)}}),r=q[0].selectize,s=r.$dropdown_content,t=r.$input[0].dataset.noresults?r.$input[0].dataset.noresults:{en:"No results",ru:"\u041D\u0438\u0447\u0435\u0433\u043E \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D\u043E",kk:"\u0415\u0448\u0442\u0435\u043D\u0435 \u0442\u0430\u0431\u044B\u043B\u0433\u0430\u043D \u0436\u043E\u043A"}[l];r.on("type",delay(function(a){let c=b?b.val()?{professions:toArray(b.val())}:null:null;j(c,a,!0)},1e3)),r.on("change",function(){r.$control_input[0].placeholder=a[0].attributes.placeholder.value,p=!1,setTimeout(function(){p=!0},150)}),r.on("blur",function(){r.$control[0].classList.remove("no-results"),g()}),s.on("scroll",function(){let a=b?b.val()?{professions:toArray(b.val())}:null:null,c=s[0].scrollHeight-s[0].scrollTop-s[0].clientHeight;if(1e3>c&&p&&!o){p=!1,r.$dropdown[0].classList.add("loading");let b=s[0].scrollTop;$.ajax({type:"POST",url:m,data:{...a,name:r.lastQuery,page:n+1},success:function(a){d(a.data),r.refreshOptions(),p=!0,n++,setTimeout(function(){r.$dropdown[0].classList.remove("loading")},150),s[0].scrollTop=b,a.current_page===a.last_page&&(o=!0)},error:function(a){console.log(a)}})}}),a[0].hasAttribute("multiple")||r.on("focus",function(){r.clear()}),this.update=function(a){j(a)},this.clear=function(){r.clear()}};function delay(a,b){let c=0;return function(){let d=this,e=arguments;clearTimeout(c),c=setTimeout(function(){a.apply(d,e)},b||0)}}Selectize.define("silent_remove",function(){let a=this;this.on("item_remove",function(){this.plugin_silent_remove_in_remove=!0}),this.search=function(){let b=a.search;return function(){return"undefined"==typeof this.plugin_silent_remove_in_remove?b.apply(this,arguments):(delete this.plugin_silent_remove_in_remove,{items:{},query:[],tokens:[]})}}()}),Selectize.define("stop_backspace_delete",function(){let a=this;this.deleteSelection=function(){let b=a.deleteSelection;return function(a){return!(a&&8===a.keyCode)&&b.apply(this,arguments)}}()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
