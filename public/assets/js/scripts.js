$(function(){chosenInit(),$(".header-dropdown__title").click(function(){let a=$(this).closest(".header-dropdown");a.hasClass("opened")?a.removeClass("opened"):($(".header-dropdown.opened").removeClass("opened"),a.addClass("opened"))}),$(document).click(function(a){!$(a.target).closest(".header-dropdown").length&&$(".header-dropdown").hasClass("opened")&&$(".header-dropdown").removeClass("opened")}),$(".mob-overlay-btn").click(function(){let a=$(this).data("target");$("#"+a).addClass("opened"),bodyUnscrollable()}),$(".mob-overlay__close").click(function(a){a.preventDefault(),$(this).closest(".mob-overlay").removeClass("opened"),bodyScrollable()}),$("[data-fancybox]").click(function(a){a.preventDefault();let b=$(this).attr("href");$.fancybox.getInstance()?($.fancybox.getInstance("close"),setTimeout(function(){$.fancybox.open({src:b,touch:!1})},380)):$.fancybox.open({src:b,touch:!1})}),$(".tabs-links a").click(function(){let a=$(this).parent(),b=$(this).closest(".tabs"),c=b.find(".tabs-contents>div").eq(a.index());if(b.find(".tabs-contents>div.active").removeClass("active"),c.addClass("active"),a.addClass("active").siblings(".active").removeClass("active"),1025>$(window).width()){let a=$(this).closest(".mobile-dropdown"),b=$(".mobile-dropdown__title",a);a.removeClass("opened"),b.hasClass("dynamic")&&b.html($(this).html())}}),document.querySelectorAll(".dropzone-multiple").forEach(a=>{let b="#"+a.id,c=a.dataset.url,d=+a.dataset.maxfiles,e=+a.dataset.maxsize,f=a.dataset.acceptedfiles,g=new CustomDropzone(b,c,d,e,f)}),document.querySelectorAll(".dropzone-avatar").forEach(a=>{let b="#"+a.id,c=a.dataset.url,d=+a.dataset.maxsize,e=a.dataset.acceptedfiles,f=new avatarDropzone(b,c,d,e)}),$(".mobile-dropdown__title").click(function(){let a=$(this).closest(".mobile-dropdown");a.hasClass("opened")?a.removeClass("opened"):($(".mobile-dropdown.opened").removeClass("opened"),a.addClass("opened"))}),$(document).click(function(a){!$(a.target).closest(".mobile-dropdown").length&&$(".mobile-dropdown").hasClass("opened")&&$(".mobile-dropdown").removeClass("opened")}),document.querySelectorAll(".single-range-slider").forEach(a=>{let b=a.parentElement,c=+a.min,d=+a.max,e=+a.step,f=+a.value,g=a.dataset.decimals?+a.dataset.decimals:0;noUiSlider.create(b,{start:f,connect:"lower",tooltips:!0,step:e,range:{min:c,max:d},format:{to:function(a){return(+a).toFixed(g)},from:function(a){return(+a).toFixed(g)}}}),b.noUiSlider.on("change",function(){a.value=b.noUiSlider.get()})}),$(".selectize-regular:not([multiple])").selectize({allowEmptyOption:!0}),$(".selectize-regular[multiple]").selectize({allowEmptyOption:!0,plugins:["remove_button","silent_remove","stop_backspace_delete"],onChange:function(){this.$control_input[0].placeholder=this.$input[0].attributes.placeholder.value}})}),$(window).scroll(function(){0<$(window).scrollTop()?$(".header").addClass("fixed"):$(".header").removeClass("fixed")});function chosenInit(){if($(".chosen").length){let a,b=document.getElementById("lang").value;a="en"==b?"No results found for":"kk"==b?"\u041D\u04D9\u0442\u0438\u0436\u0435\u043B\u0435\u0440 \u0436\u043E\u049B":"\u041D\u0438\u0447\u0435\u0433\u043E \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D\u043E \u043F\u043E \u0437\u0430\u043F\u0440\u043E\u0441\u0443",$(".chosen").chosen({search_contains:!0,no_results_text:a})}}function getScrollbarWidth(){var a=document.createElement("div");a.style.visibility="hidden",a.style.width="100px",a.style.msOverflowStyle="scrollbar",document.body.appendChild(a);var b=a.offsetWidth;a.style.overflow="scroll";var c=document.createElement("div");c.style.width="100%",a.appendChild(c);var d=c.offsetWidth;return a.parentNode.removeChild(a),b-d}function bodyUnscrollable(){if(!$("body").hasClass("no-scroll")){let a=$(window).scrollTop(),b=$("*").filter(function(){return"fixed"==$(this).css("position")});$(".main-wrapper").css("margin-top",-a),$("header").css("margin-top",a),$("body").addClass("no-scroll").css("margin-right",getScrollbarWidth()),b.css("margin-right",getScrollbarWidth())}}function bodyScrollable(){if($("body").hasClass("no-scroll")){let a=$(".main-wrapper").css("margin-top").slice(0,-2);$("header").css("margin-top",0);let b=$("*").filter(function(){return"fixed"==$(this).css("position")});$("body").removeClass("no-scroll").css("margin-right",0),b.css("margin-right",0),$(".main-wrapper").css("margin-top",0),$(window).scrollTop(-a)}}function scrollToBottom(a){let b=document.querySelector(a);b.scrollTop=b.scrollHeight}function renderAuthorStats(a){const b=a.dataset.url;am4core.ready(function(){function c(a){a.dataFields.dateX="date",a.strokeWidth=3,a.minBulletDistance=10,a.tooltip.pointerOrientation="vertical",a.tooltip.background.cornerRadius=20,a.tooltip.background.strokeOpacity=0,a.tooltip.label.minWidth=40,a.tooltip.label.minHeight=40,a.tooltip.label.textAlign="middle",a.tooltip.label.textValign="middle",a.tooltip.getFillFromObject=!1,a.tooltip.background.fill=am4core.color("#f5f5f5"),a.tooltip.autoTextColor=!1,a.tooltip.label.fill=am4core.color("#333")}am4core.useTheme(am4themes_animated);let d=am4core.create(a,am4charts.XYChart);const e=window.Laravel.lang;"ru"===e?d.language.locale=am4lang_ru_RU:"kk"===e&&(d.language.locale=am4lang_kk_KK),$.ajax({url:b,success:function(a){const b=a.color1,e=a.color2;d.data=a.data;let f=d.xAxes.push(new am4charts.DateAxis);f.renderer.minGridDistance=50;let g=d.yAxes.push(new am4charts.ValueAxis),h=d.series.push(new am4charts.LineSeries);h.dataFields.valueY="value1",h.stroke=b,h.tooltipText="{value1}",c(h);let i=d.series.push(new am4charts.LineSeries);i.dataFields.valueY="value2",i.stroke=e,i.tooltipText="{value2}",c(i),d.cursor=new am4charts.XYCursor,d.cursor.xAxis=f}})})}function toArray(a){return Array.isArray(a)?a:Array(a)}function professionsAndSkillsSelectInit(){const a=$("[name=\"speciality\"]"),b=$("[name=\"skills\"]");let c=new ajaxSelect(a,"/getProfessionsByName"),d=new ajaxSelect(b,"/getSkillsByData",a);a.change(function(){d.update($(this).val()?{professions:toArray($(this).val())}:null)})}let avatarDropzone=function(a,b,c,d){const e=document.querySelector(a),f=window.Laravel.lang,g=document.querySelector(a).querySelector(".previews-container"),h=e.querySelector(".avatar-preview").src,i=e.querySelector(".avatar-preview-template"),j=e.querySelector(".avatar-preview"),k=e.querySelector(".avatar-pick"),l=e.querySelector(".avatar-path");let m=null;"ru"===f?m=dropzoneRU:"kk"===f&&(m=dropzoneKK);new Dropzone(a,{url:b,previewTemplate:i.innerHTML,maxFilesize:c,acceptedFiles:d,lastFile:null,previewsContainer:g,clickable:[k,j],init:function(){this.on("success",function(a,b){j.src=a.dataURL,l.value=b.location}),this.on("removedfile",function(){j.src=h,l.value=""}),this.on("addedfile",function(a){this.lastFile&&this.removeFile(this.lastFile),this.lastFile=a})},...m})},CustomDropzone=function(a,b,c,d,e){const f=document.querySelector(a).querySelector(".previews-container"),g=document.querySelector(a).querySelector(".dropzone-default__link"),h=window.Laravel.lang;let i=[],j=null;"ru"===h?j=dropzoneRU:"kk"===h&&(j=dropzoneKK);new Dropzone(a,{url:b,paramName:"files[]",clickable:g,maxFiles:c,maxSize:d,acceptedFiles:e,previewsContainer:f,previewTemplate:`<div class="dz-preview dz-file-preview">
                            <div class="dz-details">
                                <div class="dz-filename"><span data-dz-name></span></div>
                                <div class="dz-size" data-dz-size></div>
                                <div class="dz-progress"><span class="dz-upload" data-dz-uploadprogress></span></div>
                            </div>
                            <div class="alert alert-danger"><span data-dz-errormessage> </span></div>
                            <a href="javascript:undefined;" title="Удалить" class="author-picture__link red" data-dz-remove>Удалить</a>
                        </div>`,init:function(){this.on("success",(a,b)=>{i.push(b.filenames+""),this.element.nextElementSibling.value=JSON.stringify(i)})},...j})};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
