let changeEvent=new Event("change");$(function(){let a=window.Laravel.lang;$(".header-dropdown__title").click(function(){let a=$(this).closest(".header-dropdown");a.hasClass("opened")?a.removeClass("opened"):($(".header-dropdown.opened").removeClass("opened"),a.addClass("opened"))}),$(document).click(function(a){!$(a.target).closest(".header-dropdown").length&&$(".header-dropdown").hasClass("opened")&&$(".header-dropdown").removeClass("opened")}),$(".mob-overlay-btn").click(function(){let a=$(this).data("target");$("#"+a).addClass("opened"),bodyUnscrollable()}),$(".mob-overlay__close").click(function(a){a.preventDefault(),$(this).closest(".mob-overlay").removeClass("opened"),bodyScrollable()}),$("[data-fancybox]").click(function(a){a.preventDefault();let b=$(this).attr("href"),c=$(this).data("options");$.fancybox.getInstance()?($.fancybox.getInstance("close"),setTimeout(function(){$.fancybox.open({src:b,touch:!1,...c})},380)):$.fancybox.open({src:b,touch:!1,...c})}),$(".tabs-links a").click(function(){let a=$(this).parent(),b=$(this).closest(".tabs"),c=b.find(".tabs-contents>div").eq(a.index());if(b.find(".tabs-contents>div.active").removeClass("active"),c.addClass("active"),a.addClass("active").siblings(".active").removeClass("active"),1025>$(window).width()){let a=$(this).closest(".mobile-dropdown"),b=$(".mobile-dropdown__title",a);a.removeClass("opened"),b.hasClass("dynamic")&&b.html($(this).html())}}),document.querySelectorAll(".dropzone-multiple").forEach(function(a){let b=a.dataset.url,c=+a.dataset.maxfiles,d=+a.dataset.maxsize,e=a.dataset.acceptedfiles,f=new CustomDropzone(a,b,c,d,e,"image/*"===e)}),document.querySelectorAll(".dropzone-avatar").forEach(function(a){let b="#"+a.id,c=a.dataset.url,d=+a.dataset.maxsize,e=a.dataset.acceptedfiles,f=new AvatarDropzone(b,c,d,e)}),$(".mobile-dropdown__title").click(function(){let a=$(this).closest(".mobile-dropdown");a.hasClass("opened")?a.removeClass("opened"):($(".mobile-dropdown.opened").removeClass("opened"),a.addClass("opened"))}),$(document).click(function(a){!$(a.target).closest(".mobile-dropdown").length&&$(".mobile-dropdown").hasClass("opened")&&$(".mobile-dropdown").removeClass("opened")}),document.querySelectorAll(".single-range-slider").forEach(function(a){let b=a.parentElement,c=+a.min,d=+a.max,e=+a.step,f=+a.value,g=a.dataset.decimals?+a.dataset.decimals:0;noUiSlider.create(b,{start:f,connect:"lower",tooltips:!0,step:e,range:{min:c,max:d},format:{to:function(a){return(+a).toFixed(g)},from:function(a){return(+a).toFixed(g)}}}),b.noUiSlider.on("change",function(){a.value=b.noUiSlider.get(),a.dispatchEvent(changeEvent)})}),document.querySelectorAll("[data-duplicate]").forEach(function(a){let b=document.querySelector("#"+a.dataset.duplicate),c=a.closest(".pull-up").previousElementSibling,d=b.cloneNode(!0);d.value="",a.addEventListener("click",function(b){b.preventDefault();let e=d.cloneNode(!0);e.removeAttribute("required"),e.removeAttribute("id");let f=document.createElement("div");f.className="btn-icon small icon-close";let g=document.createElement("div");g.className="form-group",g.innerHTML=`<div class="input-addon">

                                <div class="addon"></div>
                            </div>
      `;let h=g.querySelector(".addon");if(h.before(e),h.append(f),f.addEventListener("click",function(){g.remove(),a.style.display="inline-flex"}),c.append(g),e.classList.contains("selectize-regular")&&(e.hasAttribute("multiple")?$(`[name="${e.name}"]`).selectize(selectizeMultipleOptions):$(`[name="${e.name}"]`).selectize(selectizeSingleOptions)),e.hasAttribute("data-method")){let a=new ajaxSelect($(`[name="${e.name}"]`).not(".selectized"));a.clear()}a.dataset.maxcount&&c.children.length>=a.dataset.maxcount&&hideEl(a)})}),selectizeRegularInit(),TinyMceInit(".tinymce-here"),TinyMceInit(".tinymce-text-here",!0),$(".custom-datepicker").each(function(){let b=$(this).datepicker({language:a,autoClose:!0});$(this).val()&&b.data("datepicker").selectDate(moment($(this).val(),"DD.MM.YYYY").toDate())}),document.querySelectorAll("[data-toggle]").forEach(function(a){let b=a.dataset.toggle.split(",");a.addEventListener("change",function(){b.forEach(function(a){toggleEl(document.querySelector("#"+a))})})}),document.querySelectorAll(".topic.spoiler").forEach(function(a){let b=a.querySelector(".topic__header");b.addEventListener("click",function(){a.classList.toggle("collapsed")})}),document.querySelectorAll(".removable-items").forEach(function(a){htmlCollectionToArray(a.children).forEach(function(a){let b=a.querySelector(".icon-close");b&&b.addEventListener("click",function(){a.remove()})})}),document.querySelectorAll(".dz-stored").forEach(function(a){let b=a.querySelector(".link.red"),c=a.querySelector(".link.green"),d=a.querySelector("input");b.addEventListener("click",function(){d.setAttribute("disabled","disabled"),hideEl(b),showEl(c)}),c.addEventListener("click",function(){d.removeAttribute("disabled"),hideEl(c),showEl(b)})}),document.querySelectorAll(".accordion").forEach(function(a){let b=a.closest(".accordion-group"),c=!b.classList.contains("independent"),d=a.querySelector(".accordion__header"),e=d.nextElementSibling;d.addEventListener("click",function(){if(c&&!a.classList.contains("active")&&b.querySelector(".accordion.active")){let c=b.querySelector(".accordion.active"),d=c.querySelector(".accordion__header").nextElementSibling;c.classList.remove("active"),d.style.maxHeight=null,d.style.opacity=0,a.classList.add("active"),e.style.maxHeight=e.scrollHeight+"px",e.style.opacity=1}else a.classList.toggle("active"),e.style.maxHeight?(e.style.maxHeight=null,e.style.opacity=0):(e.style.maxHeight=e.scrollHeight+"px",e.style.opacity=1)})}),document.querySelectorAll(".extendable").forEach(function(a){let b=a.nextElementSibling,c=b.title,d=b.dataset.alternativetitle,e=b.dataset.maxheight;a.offsetHeight>+e&&(showEl(b),a.style.maxHeight=e+"px",a.classList.add("extended"),b.addEventListener("click",function(f){f.preventDefault(),a.classList.contains("opened")?(b.innerHTML=c,b.title=c,a.classList.remove("opened")):(b.innerHTML=d,b.title=d,a.classList.add("opened"))}))}),1024>window.innerWidth&&document.querySelectorAll("[data-toggle-title]").forEach(function(a){let b=document.createElement("div");b.className="toggle-link",b.innerHTML=a.getAttribute("data-toggle-title"),b.addEventListener("click",function(){toggleEl(a)}),a.before(b)}),$.bvi({bvi_target:".bvi-open",bvi_theme:"white",bvi_font:"arial",bvi_font_size:16,bvi_letter_spacing:"normal",bvi_line_height:"normal",bvi_images:!0,bvi_reload:!1,bvi_fixed:!1,bvi_tts:!1,bvi_flash_iframe:!0,bvi_hide:!1})}),$(window).scroll(function(){$(window).scrollTop()>$(".main-wrapper").offset().top?$(".header").addClass("fixed"):$(".header").removeClass("fixed")});function getScrollbarWidth(){var a=document.createElement("div");a.style.visibility="hidden",a.style.width="100px",a.style.msOverflowStyle="scrollbar",document.body.appendChild(a);var b=a.offsetWidth;a.style.overflow="scroll";var c=document.createElement("div");c.style.width="100%",a.appendChild(c);var d=c.offsetWidth;return a.parentNode.removeChild(a),b-d}function bodyUnscrollable(){if(!$("body").hasClass("no-scroll")){let a=$(window).scrollTop(),b=$("*").filter(function(){return"fixed"==$(this).css("position")});$(".main-wrapper").css("margin-top",-a),$("body").addClass("no-scroll").css("margin-right",getScrollbarWidth()),b.css("margin-right",getScrollbarWidth())}}function bodyScrollable(){if($("body").hasClass("no-scroll")){let a=$(".main-wrapper").css("margin-top").slice(0,-2),b=$("*").filter(function(){return"fixed"==$(this).css("position")});$("body").removeClass("no-scroll").css("margin-right",0),b.css("margin-right",0),$(".main-wrapper").css("margin-top",0),$(window).scrollTop(-a)}}function scrollToBottom(a){let b=document.querySelector(a);b.scrollTop=b.scrollHeight}function renderAuthorStats(a){const b=a.dataset.url;am4core.ready(function(){function c(c,d){$.ajax({url:b+"?date_from="+c+"&date_to="+d,success:function(b){e.data=b.data,a.classList.remove("preloader")}})}function d(a){a.dataFields.dateX="date",a.strokeWidth=3,a.minBulletDistance=10,a.tooltip.pointerOrientation="vertical",a.tooltip.background.cornerRadius=20,a.tooltip.background.strokeOpacity=0,a.tooltip.label.minWidth=40,a.tooltip.label.minHeight=40,a.tooltip.label.textAlign="middle",a.tooltip.label.textValign="middle",a.tooltip.getFillFromObject=!1,a.tooltip.background.fill=am4core.color("#f5f5f5"),a.tooltip.autoTextColor=!1,a.tooltip.label.fill=am4core.color("#333")}am4core.useTheme(am4themes_animated);let e=am4core.create(a,am4charts.XYChart);const f=window.Laravel.lang;"ru"===f?e.language.locale=am4lang_ru_RU:"kk"===f&&(e.language.locale=am4lang_ko_KR);let g={language:f,autoClose:!0,maxDate:new Date,onSelect:function(){a.classList.add("preloader"),c(h.el.value,i.el.value)}},h=$("[name=\"dateFrom\"]").datepicker(g).data("datepicker"),i=$("[name=\"dateTo\"]").datepicker(g).data("datepicker"),j=h.el.value?moment(h.el.value,"DD.MM.YYYY").format("YYYY-MM-DD"):"",k=i.el.value?moment(i.el.value,"DD.MM.YYYY").format("YYYY-MM-DD"):"";$.ajax({url:b+"?date_from="+j+"&date_to="+k,success:function(a){const b=a.color1,c=a.color2;e.data=a.data;let f=e.xAxes.push(new am4charts.DateAxis);f.renderer.minGridDistance=50;let g=e.yAxes.push(new am4charts.ValueAxis),h=e.series.push(new am4charts.LineSeries);h.dataFields.valueY="value1",h.stroke=b,h.tooltipText="{value1}",d(h);let i=e.series.push(new am4charts.LineSeries);i.dataFields.valueY="value2",i.stroke=c,i.tooltipText="{value2}",d(i),e.cursor=new am4charts.XYCursor,e.cursor.xAxis=f}})})}function toArray(a){return Array.isArray(a)?a:Array(a)}function htmlCollectionToArray(a){return Array.prototype.slice.call(a)}function hideAllChildren(a){Array.prototype.slice.call(a.children).forEach(function(a){a.style.display="none"})}function showEl(a){a.style.display="block"}function hideEl(a){a.style.display="none"}function toggleEl(a){a.style.display="none"===a.style.display||"none"===window.getComputedStyle(a,null).getPropertyValue("display")?"block":"none"}function returnCheckedRadio(a){return Array.prototype.slice.call(a).find(function(a){return!0===a.checked})}let AvatarDropzone=function(a,b,c,d){const e=document.querySelector(a),f=window.Laravel.lang,g=document.querySelector(a).querySelector(".previews-container"),h=e.querySelector(".avatar-preview").dataset.defaultsrc,i=e.querySelector(".avatar-preview-template"),j=e.querySelector(".avatar-preview"),k=e.querySelector(".avatar-pick"),l=e.querySelector(".avatar-path");let m=null;"ru"===f?m=dropzoneRU:"kk"===f&&(m=dropzoneKK);let n=new Dropzone(a,{url:b,previewTemplate:i.innerHTML,maxFilesize:c,acceptedFiles:d,timeout:18e4,lastFile:null,previewsContainer:g,clickable:[k,j],init:function(){this.on("success",function(a,b){j.src=a.dataURL,l.value=b.location}),this.on("removedfile",function(){j.src=h,l.value=""}),this.on("addedfile",function(a){this.lastFile&&this.removeFile(this.lastFile),this.lastFile=a})},...m});if(""!==g.innerHTML){let a=g.querySelector(".dz-preview"),b=a.querySelector(".dz-filename")?a.querySelector(".dz-filename").textContent:"",c=a.querySelector(".dz-size strong")?a.querySelector(".dz-size strong").textContent:"";g.innerHTML="",n.displayExistingFile({name:b,size:1e3*+c},l.value)}},CustomDropzone=function(a,b,c,d,e,f=!1){const g=a.querySelector(".previews-container"),h=a.querySelector(".dropzone-default__link"),i=a.querySelector("input"),j=window.Laravel.lang;let k=[],l=null,m="Remove";"ru"===j?(l=dropzoneRU,m="\u0423\u0434\u0430\u043B\u0438\u0442\u044C"):"kk"===j&&(l=dropzoneKK,m="\u0416\u043E\u044E");let n=new Dropzone(a,{url:b,paramName:"files[]",clickable:h,maxFiles:c,maxFilesize:d,acceptedFiles:e,thumbnailHeight:null,previewsContainer:g,previewTemplate:`<div class="dz-preview dz-file-preview">
                            <div class="dz-details">
                                ${f?"<img data-dz-thumbnail />":""}
                                <div class="dz-filename"><span data-dz-name></span></div>
                                <div class="dz-size" data-dz-size></div>
                                <div class="dz-progress"><span class="dz-upload" data-dz-uploadprogress></span></div>
                            </div>
                            <div class="alert alert-danger"><span data-dz-errormessage> </span></div>
                            <a href="javascript:undefined;" title="${m}" class="link red" data-dz-remove>${m}</a>
                        </div>`,init:function(){this.on("success",(a,b)=>{k.push(b.filenames+""),i.value=JSON.stringify(k)}),this.on("removedfile",a=>{if(a.xhr){let b=JSON.parse(a.xhr.response).filenames+"";k=k.filter(function(a){return a!==b})}i.value=JSON.stringify(k)})},...l});if(1===c&&""!==g.innerHTML){let a=g.querySelector(".dz-preview"),b=a.querySelector(".dz-filename")?a.querySelector(".dz-filename").textContent:"",c=a.querySelector(".dz-size strong")?a.querySelector(".dz-size strong").textContent:"";g.innerHTML="",n.displayExistingFile({name:b,size:1e3*+c},i.value)}};function TinyMceInit(a,b=!1){function c(a){d.click(),d.onchange=function(){function b(){n.abort(),d.value="",$.fancybox.close(),f.style.width=0,g.removeEventListener("click",b)}let c=new FormData,l=d.files[0];c.append("file",l);let n=$.ajax({xhr:function(){let a=new window.XMLHttpRequest;return a.upload.addEventListener("progress",function(a){if(a.lengthComputable){let b=100*(a.loaded/a.total);f.style.width=b+"%"}},!1),a},url:j+k,type:"POST",processData:!1,contentType:!1,data:c,beforeSend:function(){h.style.display="none",f.style.width=0,g.addEventListener("click",b),$.fancybox.open({src:"#"+e.id,touch:!1,smallBtn:!1,buttons:[],clickSlide:!1,clickOutside:!1})},error:function(a){console.log(a),d.value="",f.style.width=0,h.style.display="block",h.innerHTML=m[i].fail},success:function(c){a(j+c.location,{}),d.value="",parent.jQuery.fancybox.getInstance().close(),g.removeEventListener("click",b)}})}}let d,e,f,g,h,i=window.Laravel.lang,j="",k="/ajax_upload_lesson_another_file?_token="+window.Laravel.csrfToken,l="",m={en:{uploadTitle:"File upload",cancel:"Cancel",fail:"Failed to load file"},kk:{uploadTitle:"\u0424\u0430\u0439\u043B \u0436\u04AF\u043A\u0442\u0435\u0443",cancel:"\u0416\u043E\u044E",fail:"\u0424\u0430\u0439\u043B \u0436\u04AF\u043A\u0442\u0435\u043B\u043C\u0435\u0434\u0456"},ru:{uploadTitle:"\u0417\u0430\u0433\u0440\u0443\u0437\u043A\u0430 \u0444\u0430\u0439\u043B\u0430",cancel:"\u041E\u0442\u043C\u0435\u043D\u0430",fail:"\u041D\u0435 \u0443\u0434\u0430\u043B\u043E\u0441\u044C \u0437\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u044C \u0444\u0430\u0439\u043B"}},n=`<div class="text-center">
                                    <h4 class="title-primary">${m[i].uploadTitle}</h4>
                                    <div class="progress-bar"><span></span></div>
                                    <div class="plain-text gray"></div>
                                    <a href="javascript:;" title="Отмена" class="btn">${m[i].cancel}</a>
                                </div>`;b||(l="image media"),document.querySelector("#filePicker")?d=document.querySelector("#filePicker"):(d=document.createElement("input"),d.type="file",d.id="filePicker",d.style.cssText="position: fixed; top: -9999px; left: -9999px; z-index: -1",document.querySelector("body").append(d)),document.querySelector("#progressModal")?e=document.querySelector("#progressModal"):(e=document.createElement("div"),e.id="progressModal",e.innerHTML=n,e.style.display="none",document.querySelector("body").append(e)),f=e.querySelector(".progress-bar span"),g=e.querySelector(".btn"),h=e.querySelector(".plain-text"),h.style.display="none",tinymce.init({selector:a,menubar:!1,plugins:["pageembed  lists link "+l+" table paste code wordcount"],toolbar:"undo redo | formatselect | bold italic link "+l+" | alignleft aligncenter alignright alignjustify | bullist numlist | removeformat | help",images_upload_url:k,files_upload_url:k,file_picker_types:"file image media",relative_urls:!1,language:i,file_picker_callback:function(a,b,e){"file"==e.filetype&&(d.accept=".pdf, .doc, .xls, .ppt, .docx, .xlsx, .pptx, .png, .jpg, .rar, .zip, .7z, .mp3, .mp4, .avi, .mov",c(a)),"image"==e.filetype&&(d.accept=".png, .jpg, .jpeg, .gif",c(a)),"media"==e.filetype&&(d.accept=".mp4, .avi, .mov",c(a))},setup:function(a){a.on("change",function(){a.save()})}})}const selectizeSingleOptions={allowEmptyOption:!0,onChange:function(){this.$input[0].dispatchEvent(changeEvent)}},selectizeMultipleOptions={allowEmptyOption:!0,plugins:["remove_button","silent_remove","stop_backspace_delete"],onChange:function(){this.$input[0].attributes.placeholder&&(this.$control_input[0].placeholder=this.$input[0].attributes.placeholder.value),this.$input[0].dispatchEvent(changeEvent)}};function selectizeRegularInit(){$(".selectize-regular:not([multiple]):not(.selectized)").selectize(selectizeSingleOptions),$(".selectize-regular[multiple]:not(.selectized)").selectize(selectizeMultipleOptions)}$.fn.datepicker.language.en={days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],daysShort:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],daysMin:["Su","Mo","Tu","We","Th","Fr","Sa"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],monthsShort:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],today:"Today",clear:"Clear",dateFormat:"dd.mm.yyyy",timeFormat:"hh:ii aa",firstDay:0},$.fn.datepicker.language.kk={days:["\u0416\u0435\u043A\u0441\u0435\u043D\u0431\u0456","\u0414\u04AF\u0439\u0441\u0435\u043D\u0431\u0456","\u0421\u0435\u0439\u0441\u0435\u043D\u0431\u0456","\u0421\u04D9\u0440\u0441\u0435\u043D\u0431\u0456","\u0411\u0435\u0439\u0441\u0435\u043D\u0431\u0456","\u0416\u04B1\u043C\u0430","\u0421\u0435\u043D\u0431\u0456"],daysShort:["\u0416\u0435\u043A","\u0414\u04AF\u0439","\u0421\u0435\u0439","\u0421\u04D9\u0440","\u0411\u0435\u0439","\u0416\u04B1\u043C","\u0421\u0435\u043D"],daysMin:["\u0416\u0435","\u0414\u04AF","\u0421\u0435","\u0421\u04D9","\u0411\u0435","\u0416\u04B1","\u0421\u0435"],months:["\u049A\u0430\u04A3\u0442\u0430\u0440","\u0410\u049B\u043F\u0430\u043D","\u041D\u0430\u0443\u0440\u044B\u0437","\u0421\u04D9\u0443\u0456\u0440","\u041C\u0430\u043C\u044B\u0440","\u041C\u0430\u0443\u0441\u044B\u043C","\u0428\u0456\u043B\u0434\u0435","\u0422\u0430\u043C\u044B\u0437","\u049A\u044B\u0440\u043A\u04AF\u0439\u0435\u043A","\u049A\u0430\u0437\u0430\u043D","\u049A\u0430\u0440\u0430\u0448\u0430","\u0416\u0435\u043B\u0442\u043E\u049B\u0441\u0430\u043D"],monthsShort:["\u049A\u0430\u04A3","\u0410\u049B\u043F","\u041D\u0430\u0443","\u0421\u04D9\u0443","\u041C\u0430\u043C","\u041C\u0430\u0443","\u0428\u0456\u043B","\u0422\u0430\u043C","\u049A\u044B\u0440","\u049A\u0430\u0437","\u049A\u0430\u0440","\u0416\u0435\u043B"],today:"\u0411\u04AF\u0433\u0456\u043D",clear:"\u0422\u0430\u0437\u0430\u043B\u0430\u0443",dateFormat:"dd.mm.yyyy",timeFormat:"hh:ii aa",firstDay:0},$.fn.datepicker.language.ru={days:["\u0412\u043E\u0441\u043A\u0440\u0435\u0441\u0435\u043D\u044C\u0435","\u041F\u043E\u043D\u0435\u0434\u0435\u043B\u044C\u043D\u0438\u043A","\u0412\u0442\u043E\u0440\u043D\u0438\u043A","\u0421\u0440\u0435\u0434\u0430","\u0427\u0435\u0442\u0432\u0435\u0440\u0433","\u041F\u044F\u0442\u043D\u0438\u0446\u0430","\u0421\u0443\u0431\u0431\u043E\u0442\u0430"],daysShort:["\u0412\u043E\u0441","\u041F\u043E\u043D","\u0412\u0442\u043E","\u0421\u0440\u0435","\u0427\u0435\u0442","\u041F\u044F\u0442","\u0421\u0443\u0431"],daysMin:["\u0412\u0441","\u041F\u043D","\u0412\u0442","\u0421\u0440","\u0427\u0442","\u041F\u0442","\u0421\u0431"],months:["\u042F\u043D\u0432\u0430\u0440\u044C","\u0424\u0435\u0432\u0440\u0430\u043B\u044C","\u041C\u0430\u0440\u0442","\u0410\u043F\u0440\u0435\u043B\u044C","\u041C\u0430\u0439","\u0418\u044E\u043D\u044C","\u0418\u044E\u043B\u044C","\u0410\u0432\u0433\u0443\u0441\u0442","\u0421\u0435\u043D\u0442\u044F\u0431\u0440\u044C","\u041E\u043A\u0442\u044F\u0431\u0440\u044C","\u041D\u043E\u044F\u0431\u0440\u044C","\u0414\u0435\u043A\u0430\u0431\u0440\u044C"],monthsShort:["\u042F\u043D\u0432","\u0424\u0435\u0432","\u041C\u0430\u0440","\u0410\u043F\u0440","\u041C\u0430\u0439","\u0418\u044E\u043D","\u0418\u044E\u043B","\u0410\u0432\u0433","\u0421\u0435\u043D","\u041E\u043A\u0442","\u041D\u043E\u044F","\u0414\u0435\u043A"],today:"\u0421\u0435\u0433\u043E\u0434\u043D\u044F",clear:"\u041E\u0447\u0438\u0441\u0442\u0438\u0442\u044C",dateFormat:"dd.mm.yyyy",timeFormat:"hh:ii aa",firstDay:0};
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjcmlwdHMuanMiXSwibmFtZXMiOlsiY2hhbmdlRXZlbnQiLCJFdmVudCIsIiQiLCJsYW5nIiwid2luZG93IiwiTGFyYXZlbCIsImNsaWNrIiwiZHJvcGRvd25XcmFwcGVyIiwiY2xvc2VzdCIsImhhc0NsYXNzIiwicmVtb3ZlQ2xhc3MiLCJhZGRDbGFzcyIsImRvY3VtZW50IiwiZXZlbnQiLCJ0YXJnZXQiLCJsZW5ndGgiLCJpZCIsImRhdGEiLCJib2R5VW5zY3JvbGxhYmxlIiwiZSIsInByZXZlbnREZWZhdWx0IiwiYm9keVNjcm9sbGFibGUiLCJhdHRyIiwiYWRkaXRpb25hbE9wdGlvbnMiLCJmYW5jeWJveCIsImdldEluc3RhbmNlIiwic2V0VGltZW91dCIsIm9wZW4iLCJzcmMiLCJ0b3VjaCIsImxpIiwicGFyZW50Iiwid3JhcHBlciIsImNvbnRlbnQiLCJmaW5kIiwiZXEiLCJpbmRleCIsInNpYmxpbmdzIiwid2lkdGgiLCJkcm9wZG93biIsImRyb3Bkb3duVGl0bGUiLCJodG1sIiwicXVlcnlTZWxlY3RvckFsbCIsImZvckVhY2giLCJpdGVtIiwidXJsIiwiZGF0YXNldCIsIm1heEZpbGVzIiwibWF4ZmlsZXMiLCJtYXhTaXplIiwibWF4c2l6ZSIsImFjY2VwdGVkRmlsZXMiLCJhY2NlcHRlZGZpbGVzIiwiY3JlYXRlRHJvcHpvbmUiLCJDdXN0b21Ecm9wem9uZSIsImF2YXRhciIsIkF2YXRhckRyb3B6b25lIiwic2xpZGVyIiwicGFyZW50RWxlbWVudCIsIm1pbiIsIm1heCIsInN0ZXAiLCJ2YWx1ZSIsImRlY2ltYWxzIiwibm9VaVNsaWRlciIsImNyZWF0ZSIsInN0YXJ0IiwiY29ubmVjdCIsInRvb2x0aXBzIiwicmFuZ2UiLCJmb3JtYXQiLCJ0byIsInRvRml4ZWQiLCJmcm9tIiwib24iLCJnZXQiLCJkaXNwYXRjaEV2ZW50IiwiZWwiLCJjb3B5RWwiLCJxdWVyeVNlbGVjdG9yIiwiZHVwbGljYXRlIiwiZHVwbGljYXRlc0NvbnRhaW5lciIsInByZXZpb3VzRWxlbWVudFNpYmxpbmciLCJjbG9uZVRwbCIsImNsb25lTm9kZSIsImFkZEV2ZW50TGlzdGVuZXIiLCJjbG9uZSIsInJlbW92ZUF0dHJpYnV0ZSIsInJlbW92ZUJ0biIsImNyZWF0ZUVsZW1lbnQiLCJjbGFzc05hbWUiLCJuZXdJdGVtIiwiaW5uZXJIVE1MIiwiYWRkb24iLCJiZWZvcmUiLCJhcHBlbmQiLCJyZW1vdmUiLCJzdHlsZSIsImRpc3BsYXkiLCJjbGFzc0xpc3QiLCJjb250YWlucyIsImhhc0F0dHJpYnV0ZSIsIm5hbWUiLCJzZWxlY3RpemUiLCJzZWxlY3RpemVNdWx0aXBsZU9wdGlvbnMiLCJzZWxlY3RpemVTaW5nbGVPcHRpb25zIiwibmV3QWpheFNlbGVjdCIsImFqYXhTZWxlY3QiLCJub3QiLCJjbGVhciIsIm1heGNvdW50IiwiY2hpbGRyZW4iLCJoaWRlRWwiLCJzZWxlY3RpemVSZWd1bGFySW5pdCIsIlRpbnlNY2VJbml0IiwiZWFjaCIsInBpY2tlciIsImRhdGVwaWNrZXIiLCJsYW5ndWFnZSIsImF1dG9DbG9zZSIsInZhbCIsInNlbGVjdERhdGUiLCJtb21lbnQiLCJ0b0RhdGUiLCJ0YXJnZXRTZWxlY3RvcnMiLCJ0b2dnbGUiLCJzcGxpdCIsInNlbGVjdG9yIiwidG9nZ2xlRWwiLCJ0b3BpY1RpdGxlIiwiY29sbGVjdGlvbiIsImh0bWxDb2xsZWN0aW9uVG9BcnJheSIsInJlY292ZXJCdG4iLCJpbnB1dCIsInNldEF0dHJpYnV0ZSIsInNob3dFbCIsImlzRGVwZW5kZW50IiwiYWNjSGVhZGVyIiwicGFuZWwiLCJuZXh0RWxlbWVudFNpYmxpbmciLCJhY3RpdmVBY2MiLCJhY3RpdmVBY2NQYW5lbCIsIm1heEhlaWdodCIsIm9wYWNpdHkiLCJhZGQiLCJzY3JvbGxIZWlnaHQiLCJleHRlbmRhYmxlQmxvY2siLCJidG4iLCJ0aXRsZSIsImFsdGVybmF0aXZlVGl0bGUiLCJhbHRlcm5hdGl2ZXRpdGxlIiwibWF4aGVpZ2h0Iiwib2Zmc2V0SGVpZ2h0IiwiaW5uZXJXaWR0aCIsInRvZ2dsZUJ0biIsImdldEF0dHJpYnV0ZSIsImJ2aSIsImJ2aV90YXJnZXQiLCJidmlfdGhlbWUiLCJidmlfZm9udCIsImJ2aV9mb250X3NpemUiLCJidmlfbGV0dGVyX3NwYWNpbmciLCJidmlfbGluZV9oZWlnaHQiLCJidmlfaW1hZ2VzIiwiYnZpX3JlbG9hZCIsImJ2aV9maXhlZCIsImJ2aV90dHMiLCJidmlfZmxhc2hfaWZyYW1lIiwiYnZpX2hpZGUiLCJzY3JvbGwiLCJzY3JvbGxUb3AiLCJvZmZzZXQiLCJ0b3AiLCJnZXRTY3JvbGxiYXJXaWR0aCIsIm91dGVyIiwidmlzaWJpbGl0eSIsIm1zT3ZlcmZsb3dTdHlsZSIsImJvZHkiLCJhcHBlbmRDaGlsZCIsIndpZHRoTm9TY3JvbGwiLCJvZmZzZXRXaWR0aCIsIm92ZXJmbG93IiwiaW5uZXIiLCJ3aWR0aFdpdGhTY3JvbGwiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJmaWx0ZXIiLCJjc3MiLCJzbGljZSIsInNjcm9sbFRvQm90dG9tIiwiY29udGFpbmVyIiwicmVuZGVyQXV0aG9yU3RhdHMiLCJhbTRjb3JlIiwicmVhZHkiLCJ1cGRhdGVEYXRhIiwiYWpheCIsInN1Y2Nlc3MiLCJyZXNwb25zZSIsImNoYXJ0Iiwic2V0U2VyaWVzRGVmYXVsdE9wdGlvbnMiLCJzZXJpZXMiLCJkYXRhRmllbGRzIiwiZGF0ZVgiLCJzdHJva2VXaWR0aCIsIm1pbkJ1bGxldERpc3RhbmNlIiwidG9vbHRpcCIsInBvaW50ZXJPcmllbnRhdGlvbiIsImJhY2tncm91bmQiLCJjb3JuZXJSYWRpdXMiLCJzdHJva2VPcGFjaXR5IiwibGFiZWwiLCJtaW5XaWR0aCIsIm1pbkhlaWdodCIsInRleHRBbGlnbiIsInRleHRWYWxpZ24iLCJnZXRGaWxsRnJvbU9iamVjdCIsImZpbGwiLCJjb2xvciIsImF1dG9UZXh0Q29sb3IiLCJ1c2VUaGVtZSIsImFtNHRoZW1lc19hbmltYXRlZCIsImFtNGNoYXJ0cyIsIlhZQ2hhcnQiLCJsb2NhbGUiLCJhbTRsYW5nX3J1X1JVIiwiYW00bGFuZ19rb19LUiIsImRlZmF1bHREYXRlcGlja2VyT3B0aW9ucyIsIm1heERhdGUiLCJEYXRlIiwib25TZWxlY3QiLCJwaWNrZXJGcm9tIiwicGlja2VyVG8iLCJkYXRlRnJvbSIsImRhdGVUbyIsImNvbG9yMSIsImNvbG9yMiIsImRhdGVBeGlzIiwieEF4ZXMiLCJwdXNoIiwiRGF0ZUF4aXMiLCJyZW5kZXJlciIsIm1pbkdyaWREaXN0YW5jZSIsInZhbHVlQXhpcyIsInlBeGVzIiwiVmFsdWVBeGlzIiwiTGluZVNlcmllcyIsInZhbHVlWSIsInN0cm9rZSIsInRvb2x0aXBUZXh0Iiwic2VyaWVzMiIsImN1cnNvciIsIlhZQ3Vyc29yIiwieEF4aXMiLCJ0b0FycmF5Iiwic3RyIiwiQXJyYXkiLCJpc0FycmF5IiwicHJvdG90eXBlIiwiY2FsbCIsImhpZGVBbGxDaGlsZHJlbiIsImdldENvbXB1dGVkU3R5bGUiLCJnZXRQcm9wZXJ0eVZhbHVlIiwicmV0dXJuQ2hlY2tlZFJhZGlvIiwicmFkaW9Db2xsZWN0aW9uIiwiY2hlY2tlZCIsInByZXZpZXdzQ29udGFpbmVyIiwiZGVmYXVsdFByZXZpZXdVcmwiLCJkZWZhdWx0c3JjIiwicHJldmlld1RlbXBsYXRlIiwiYXZhdGFyUHJldmlldyIsImF2YXRhclBpY2siLCJhdmF0YXJQYXRoIiwibG9jYWxlT3B0aW9ucyIsImRyb3B6b25lUlUiLCJkcm9wem9uZUtLIiwibmV3RHJvcHpvbmUiLCJEcm9wem9uZSIsIm1heEZpbGVzaXplIiwidGltZW91dCIsImxhc3RGaWxlIiwiY2xpY2thYmxlIiwiaW5pdCIsImZpbGUiLCJkYXRhVVJMIiwibG9jYXRpb24iLCJyZW1vdmVGaWxlIiwiZmlsZW5hbWUiLCJ0ZXh0Q29udGVudCIsInNpemUiLCJkaXNwbGF5RXhpc3RpbmdGaWxlIiwic2hvd1RodW1ibmFpbHMiLCJmaWxlc1BhdGgiLCJmaWxlbmFtZXMiLCJyZW1vdmVUZXh0IiwicGFyYW1OYW1lIiwidGh1bWJuYWlsSGVpZ2h0IiwiZmlsZXMiLCJKU09OIiwic3RyaW5naWZ5IiwieGhyIiwicmVtb3ZlZFZhbHVlIiwicGFyc2UiLCJ0ZXh0T25seSIsInBpY2tlckNhbGxiYWNrIiwiY2FsbGJhY2siLCJvbmNoYW5nZSIsImFib3J0VXBsb2FkIiwiYWpheFVwbG9hZCIsImFib3J0IiwiY2xvc2UiLCJwcm9ncmVzc0JhciIsImNhbmNlbFVwbG9hZEJ0biIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJmZCIsIkZvcm1EYXRhIiwiWE1MSHR0cFJlcXVlc3QiLCJ1cGxvYWQiLCJldnQiLCJsZW5ndGhDb21wdXRhYmxlIiwicGVyY2VudENvbXBsZXRlIiwibG9hZGVkIiwidG90YWwiLCJiYXNlVXJsIiwibWV0aG9kIiwidHlwZSIsInByb2Nlc3NEYXRhIiwiY29udGVudFR5cGUiLCJiZWZvcmVTZW5kIiwicHJvZ3Jlc3NNc2dFbCIsInByb2dyZXNzTW9kYWwiLCJzbWFsbEJ0biIsImJ1dHRvbnMiLCJjbGlja1NsaWRlIiwiY2xpY2tPdXRzaWRlIiwiZXJyb3IiLCJjb25zb2xlIiwibG9nIiwidm9jYWJ1bGFyeSIsImZhaWwiLCJqUXVlcnkiLCJjc3JmVG9rZW4iLCJhZGRpdGlvbmFsVG9vbHMiLCJlbiIsInVwbG9hZFRpdGxlIiwiY2FuY2VsIiwia2siLCJydSIsInByb2dyZXNzTW9kYWxDb250ZW50IiwiY3NzVGV4dCIsInRpbnltY2UiLCJtZW51YmFyIiwicGx1Z2lucyIsInRvb2xiYXIiLCJpbWFnZXNfdXBsb2FkX3VybCIsImZpbGVzX3VwbG9hZF91cmwiLCJmaWxlX3BpY2tlcl90eXBlcyIsInJlbGF0aXZlX3VybHMiLCJmaWxlX3BpY2tlcl9jYWxsYmFjayIsIm1ldGEiLCJmaWxldHlwZSIsImFjY2VwdCIsInNldHVwIiwiZWRpdG9yIiwic2F2ZSIsImFsbG93RW1wdHlPcHRpb24iLCJvbkNoYW5nZSIsIiRpbnB1dCIsImF0dHJpYnV0ZXMiLCJwbGFjZWhvbGRlciIsIiRjb250cm9sX2lucHV0IiwiZm4iLCJkYXlzIiwiZGF5c1Nob3J0IiwiZGF5c01pbiIsIm1vbnRocyIsIm1vbnRoc1Nob3J0IiwidG9kYXkiLCJkYXRlRm9ybWF0IiwidGltZUZvcm1hdCIsImZpcnN0RGF5Il0sIm1hcHBpbmdzIjoiQUFBQSxHQUFJQSxDQUFBQSxXQUFXLENBQUcsR0FBSUMsQ0FBQUEsS0FBSixDQUFVLFFBQVYsQ0FBbEIsQ0FFQUMsQ0FBQyxDQUFDLFVBQVksQ0FDVixHQUFJQyxDQUFBQSxDQUFJLENBQUdDLE1BQU0sQ0FBQ0MsT0FBUCxDQUFlRixJQUExQixDQUdBRCxDQUFDLENBQUMseUJBQUQsQ0FBRCxDQUE2QkksS0FBN0IsQ0FBbUMsVUFBWSxDQUMzQyxHQUFJQyxDQUFBQSxDQUFlLENBQUdMLENBQUMsQ0FBQyxJQUFELENBQUQsQ0FBUU0sT0FBUixDQUFnQixrQkFBaEIsQ0FBdEIsQ0FDS0QsQ0FBZSxDQUFDRSxRQUFoQixDQUF5QixRQUF6QixDQUZzQyxDQU12Q0YsQ0FBZSxDQUFDRyxXQUFoQixDQUE0QixRQUE1QixDQU51QyxFQUd2Q1IsQ0FBQyxDQUFDLHlCQUFELENBQUQsQ0FBNkJRLFdBQTdCLENBQXlDLFFBQXpDLENBSHVDLENBSXZDSCxDQUFlLENBQUNJLFFBQWhCLENBQXlCLFFBQXpCLENBSnVDLENBUTlDLENBUkQsQ0FKVSxDQWFWVCxDQUFDLENBQUNVLFFBQUQsQ0FBRCxDQUFZTixLQUFaLENBQWtCLFNBQVVPLENBQVYsQ0FBaUIsQ0FFM0IsQ0FBQ1gsQ0FBQyxDQUFDVyxDQUFLLENBQUNDLE1BQVAsQ0FBRCxDQUFnQk4sT0FBaEIsQ0FBd0Isa0JBQXhCLEVBQTRDTyxNQUZsQixFQUd2QmIsQ0FBQyxDQUFDLGtCQUFELENBQUQsQ0FBc0JPLFFBQXRCLENBQStCLFFBQS9CLENBSHVCLEVBSXZCUCxDQUFDLENBQUMsa0JBQUQsQ0FBRCxDQUFzQlEsV0FBdEIsQ0FBa0MsUUFBbEMsQ0FHWCxDQVBELENBYlUsQ0F3QlZSLENBQUMsQ0FBQyxrQkFBRCxDQUFELENBQXNCSSxLQUF0QixDQUE0QixVQUFZLENBQ3BDLEdBQUlVLENBQUFBLENBQUUs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a0IsQ0FHN0JDLE9BQU8sQ0FBRSxDQUFDLGNBQUQsQ0FBTyxjQUFQLENBQWEsY0FBYixDQUFtQixjQUFuQixDQUF5QixjQUF6QixDQUErQixjQUEvQixDQUFxQyxjQUFyQyxDQUhvQixDQUk3QkMsTUFBTSxDQUFFLENBQUMsc0NBQUQsQ0FBVyw0Q0FBWCxDQUFzQiwwQkFBdEIsQ0FBOEIsc0NBQTlCLENBQXdDLG9CQUF4QyxDQUErQywwQkFBL0MsQ0FBdUQsMEJBQXZELENBQStELHNDQUEvRCxDQUF5RSxrREFBekUsQ0FBcUYsNENBQXJGLENBQWdHLHNDQUFoRyxDQUEwRyw0Q0FBMUcsQ0FKcUIsQ0FLN0JDLFdBQVcsQ0FBRSxDQUFDLG9CQUFELENBQVEsb0JBQVIsQ0FBZSxvQkFBZixDQUFzQixvQkFBdEIsQ0FBNkIsb0JBQTdCLENBQW9DLG9CQUFwQyxDQUEyQyxvQkFBM0MsQ0FBa0Qsb0JBQWxELENBQXlELG9CQUF6RCxDQUFnRSxvQkFBaEUsQ0FBdUUsb0JBQXZFLENBQThFLG9CQUE5RSxDQUxnQixDQU03QkMsS0FBSyxDQUFFLDRDQU5zQixDQU83QjNRLEtBQUssQ0FBRSxrREFQc0IsQ0FRN0I0USxVQUFVLENBQUUsWUFSaUIsQ0FTN0JDLFVBQVUsQ0FBRSxVQVRpQixDQVU3QkMsUUFBUSxDQUFFLENBVm1CLEMiLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgY2hhbmdlRXZlbnQgPSBuZXcgRXZlbnQoJ2NoYW5nZScpO1xyXG5cclxuJChmdW5jdGlvbiAoKSB7XHJcbiAgICBsZXQgbGFuZyA9IHdpbmRvdy5MYXJhdmVsLmxhbmc7XHJcblxyXG4gICAgLypIZWFkZXIgZHJvcGRvd24qL1xyXG4gICAgJCgnLmhlYWRlci1kcm9wZG93bl9fdGl0bGUnKS5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgbGV0IGRyb3Bkb3duV3JhcHBlciA9ICQodGhpcykuY2xvc2VzdCgnLmhlYWRlci1kcm9wZG93bicpO1xyXG4gICAgICAgIGlmICghZHJvcGRvd25XcmFwcGVyLmhhc0NsYXNzKCdvcGVuZWQnKSkge1xyXG4gICAgICAgICAgICAkKCcuaGVhZGVyLWRyb3Bkb3duLm9wZW5lZCcpLnJlbW92ZUNsYXNzKCdvcGVuZWQnKTtcclxuICAgICAgICAgICAgZHJvcGRvd25XcmFwcGVyLmFkZENsYXNzKCdvcGVuZWQnKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBkcm9wZG93bldyYXBwZXIucmVtb3ZlQ2xhc3MoJ29wZW5lZCcpO1xyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG4gICAgJChkb2N1bWVudCkuY2xpY2soZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICAgICAgLy9DbG9zZSBwcm9maWxlIGNvbnRleHQgbWVudSBpZiBhbnl0aGluZyBleGNlcHQgaXRzZWxmIG9yIHByb2ZpbGUgbGluayBpcyBjbGlja2VkXHJcbiAgICAgICAgaWYgKCEkKGV2ZW50LnRhcmdldCkuY2xvc2VzdCgnLmhlYWRlci1kcm9wZG93bicpLmxlbmd0aCkge1xyXG4gICAgICAgICAgICBpZiAoJCgnLmhlYWRlci1kcm9wZG93bicpLmhhc0NsYXNzKCdvcGVuZWQnKSkge1xyXG4gICAgICAgICAgICAgICAgJCgnLmhlYWRlci1kcm9wZG93bicpLnJlbW92ZUNsYXNzKCdvcGVuZWQnKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG4gICAgLyoqL1xyXG5cclxuICAgIC8qTW9iaWxlIG92ZXJsYXkgY2xvc2UgYnV0dG9uKi9cclxuICAgICQoJy5tb2Itb3ZlcmxheS1idG4nKS5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgbGV0IGlkID0gJCh0aGlzKS5kYXRhKCd0YXJnZXQnKTtcclxuICAgICAgICAkKCcjJyArIGlkKS5hZGRDbGFzcygnb3BlbmVkJyk7XHJcbiAgICAgICAgYm9keVVuc2Nyb2xsYWJsZSgpO1xyXG4gICAgfSk7XHJcbiAgICAvKiovXHJcblxyXG4gICAgJCgnLm1vYi1vdmVybGF5X19jbG9zZScpLmNsaWNrKGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgICQodGhpcykuY2xvc2VzdCgnLm1vYi1vdmVybGF5JykucmVtb3ZlQ2xhc3MoJ29wZW5lZCcpO1xyXG4gICAgICAgIGJvZHlTY3JvbGxhYmxlKCk7XHJcbiAgICB9KTtcclxuXHJcbiAgICAvKkZhbmN5Ym94IGJlaGF2aW91ciovXHJcbiAgICAkKCdbZGF0YS1mYW5jeWJveF0nKS5jbGljayhmdW5jdGlvbiAoZSkge1xyXG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICBsZXQgdGFyZ2V0ID0gJCh0aGlzKS5hdHRyKCdocmVmJyk7XHJcbiAgICAgICAgbGV0IGFkZGl0aW9uYWxPcHRpb25zID0gJCh0aGlzKS5kYXRhKCdvcHRpb25zJyk7XHJcblxyXG4gICAgICAgIGlmICgkLmZhbmN5Ym94LmdldEluc3RhbmNlKCkpIHtcclxuICAgICAgICAgICAgJC5mYW5jeWJveC5nZXRJbnN0YW5jZSgnY2xvc2UnKTtcclxuICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAkLmZhbmN5Ym94Lm9wZW4oe1xyXG4gICAgICAgICAgICAgICAgICAgIHNyYzogdGFyZ2V0LFxyXG4gICAgICAgICAgICAgICAgICAgIHRvdWNoOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgICAgICAuLi5hZGRpdGlvbmFsT3B0aW9uc1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH0sIDM4MCk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgJC5mYW5jeWJveC5vcGVuKHtcclxuICAgICAgICAgICAgICAgIHNyYzogdGFyZ2V0LFxyXG4gICAgICAgICAgICAgICAgdG91Y2g6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgLi4uYWRkaXRpb25hbE9wdGlvbnNcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcbiAgICAvKiovXHJcblxyXG4gICAgLypUYWJzKi9cclxuICAgICQoJy50YWJzLWxpbmtzIGEnKS5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgbGV0IGxpID0gJCh0aGlzKS5wYXJlbnQoKSxcclxuICAgICAgICAgICAgd3JhcHBlciA9ICQodGhpcykuY2xvc2VzdCgnLnRhYnMnKSxcclxuICAgICAgICAgICAgY29udGVudCA9IHdyYXBwZXIuZmluZCgnLnRhYnMtY29udGVudHM+ZGl2JykuZXEobGkuaW5kZXgoKSk7XHJcbiAgICAgICAgd3JhcHBlci5maW5kKCcudGFicy1jb250ZW50cz5kaXYuYWN0aXZlJykucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpO1xyXG4gICAgICAgIGNvbnRlbnQuYWRkQ2xhc3MoJ2FjdGl2ZScpO1xyXG4gICAgICAgIGxpLmFkZENsYXNzKCdhY3RpdmUnKS5zaWJsaW5ncygnLmFjdGl2ZScpLnJlbW92ZUNsYXNzKCdhY3RpdmUnKTtcclxuXHJcbiAgICAgICAgaWYgKCQod2luZG93KS53aWR0aCgpIDwgMTAyNSkge1xyXG4gICAgICAgICAgICBsZXQgZHJvcGRvd24gPSAkKHRoaXMpLmNsb3Nlc3QoJy5tb2JpbGUtZHJvcGRvd24nKSxcclxuICAgICAgICAgICAgICAgIGRyb3Bkb3duVGl0bGUgPSAkKCcubW9iaWxlLWRyb3Bkb3duX190aXRsZScsIGRyb3Bkb3duKTtcclxuICAgICAgICAgICAgZHJvcGRvd24ucmVtb3ZlQ2xhc3MoJ29wZW5lZCcpO1xyXG5cclxuICAgICAgICAgICAgaWYgKGRyb3Bkb3duVGl0bGUuaGFzQ2xhc3MoJ2R5bmFtaWMnKSkge1xyXG4gICAgICAgICAgICAgICAgZHJvcGRvd25UaXRsZS5odG1sKCQodGhpcykuaHRtbCgpKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG4gICAgLyoqL1xyXG5cclxuICAgIC8qRHJvcHpvbmUgaW5pdCovXHJcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuZHJvcHpvbmUtbXVsdGlwbGUnKS5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtKSB7XHJcbiAgICAgICAgbGV0IHVybCA9IGl0ZW0uZGF0YXNldC51cmwsXHJcbiAgICAgICAgICAgIG1heEZpbGVzID0gTnVtYmVyKGl0ZW0uZGF0YXNldC5tYXhmaWxlcyksXHJcbiAgICAgICAgICAgIG1heFNpemUgPSBOdW1iZXIoaXRlbS5kYXRhc2V0Lm1heHNpemUpLFxyXG4gICAgICAgICAgICBhY2NlcHRlZEZpbGVzID0gaXRlbS5kYXRhc2V0LmFjY2VwdGVkZmlsZXM7XHJcbiAgICAgICAgbGV0IGNyZWF0ZURyb3B6b25lID0gbmV3IEN1c3RvbURyb3B6b25lKGl0ZW0sIHVybCwgbWF4RmlsZXMsIG1heFNpemUsIGFjY2VwdGVkRmlsZXMsIGFjY2VwdGVkRmlsZXMgPT09ICdpbWFnZS8qJyk7XHJcbiAgICB9KTtcclxuXHJcbiAgICAvKkF2YXRhciBkcm9wem9uZSBpbml0Ki9cclxuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5kcm9wem9uZS1hdmF0YXInKS5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtKSB7XHJcbiAgICAgICAgbGV0IGlkID0gJyMnICsgaXRlbS5pZCxcclxuICAgICAgICAgICAgdXJsID0gaXRlbS5kYXRhc2V0LnVybCxcclxuICAgICAgICAgICAgbWF4U2l6ZSA9IE51bWJlcihpdGVtLmRhdGFzZXQubWF4c2l6ZSksXHJcbiAgICAgICAgICAgIGFjY2VwdGVkRmlsZXMgPSBpdGVtLmRhdGFzZXQuYWNjZXB0ZWRmaWxlcztcclxuICAgICAgICBsZXQgYXZhdGFyID0gbmV3IEF2YXRhckRyb3B6b25lKGlkLCB1cmwsIG1heFNpemUsIGFjY2VwdGVkRmlsZXMpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgLypNb2JpbGUgZHJvcGRvd24qL1xyXG4gICAgJCgnLm1vYmlsZS1kcm9wZG93bl9fdGl0bGUnKS5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgbGV0IGRyb3Bkb3duV3JhcHBlciA9ICQodGhpcykuY2xvc2VzdCgnLm1vYmlsZS1kcm9wZG93bicpO1xyXG4gICAgICAgIGlmICghZHJvcGRvd25XcmFwcGVyLmhhc0NsYXNzKCdvcGVuZWQnKSkge1xyXG4gICAgICAgICAgICAkKCcubW9iaWxlLWRyb3Bkb3duLm9wZW5lZCcpLnJlbW92ZUNsYXNzKCdvcGVuZWQnKTtcclxuICAgICAgICAgICAgZHJvcGRvd25XcmFwcGVyLmFkZENsYXNzKCdvcGVuZWQnKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBkcm9wZG93bldyYXBwZXIucmVtb3ZlQ2xhc3MoJ29wZW5lZCcpO1xyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG4gICAgJChkb2N1bWVudCkuY2xpY2soZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICAgICAgLy9DbG9zZSBwcm9maWxlIGNvbnRleHQgbWVudSBpZiBhbnl0aGluZyBleGNlcHQgaXRzZWxmIG9yIHByb2ZpbGUgbGluayBpcyBjbGlja2VkXHJcbiAgICAgICAgaWYgKCEkKGV2ZW50LnRhcmdldCkuY2xvc2VzdCgnLm1vYmlsZS1kcm9wZG93bicpLmxlbmd0aCkge1xyXG4gICAgICAgICAgICBpZiAoJCgnLm1vYmlsZS1kcm9wZG93bicpLmhhc0NsYXNzKCdvcGVuZWQnKSkge1xyXG4gICAgICAgICAgICAgICAgJCgnLm1vYmlsZS1kcm9wZG93bicpLnJlbW92ZUNsYXNzKCdvcGVuZWQnKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG5cclxuICAgIC8qUmFuZ2Ugc2xpZGVyIGluaXQqL1xyXG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnNpbmdsZS1yYW5nZS1zbGlkZXInKS5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtKSB7XHJcbiAgICAgICAgbGV0IHNsaWRlciA9IGl0ZW0ucGFyZW50RWxlbWVudCxcclxuICAgICAgICAgICAgbWluID0gTnVtYmVyKGl0ZW0ubWluKSxcclxuICAgICAgICAgICAgbWF4ID0gTnVtYmVyKGl0ZW0ubWF4KSxcclxuICAgICAgICAgICAgc3RlcCA9IE51bWJlcihpdGVtLnN0ZXApLFxyXG4gICAgICAgICAgICB2YWx1ZSA9IE51bWJlcihpdGVtLnZhbHVlKSxcclxuICAgICAgICAgICAgZGVjaW1hbHMgPSBpdGVtLmRhdGFzZXQuZGVjaW1hbHMgPyBOdW1iZXIoaXRlbS5kYXRhc2V0LmRlY2ltYWxzKSA6IDA7XHJcblxyXG4gICAgICAgIG5vVWlTbGlkZXIuY3JlYXRlKHNsaWRlciwge1xyXG4gICAgICAgICAgICBzdGFydDogdmFsdWUsXHJcbiAgICAgICAgICAgIGNvbm5lY3Q6ICdsb3dlcicsXHJcbiAgICAgICAgICAgIHRvb2x0aXBzOiB0cnVlLFxyXG4gICAgICAgICAgICBzdGVwOiBzdGVwLFxyXG4gICAgICAgICAgICByYW5nZToge1xyXG4gICAgICAgICAgICAgICAgJ21pbic6IG1pbixcclxuICAgICAgICAgICAgICAgICdtYXgnOiBtYXhcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgZm9ybWF0OiB7XHJcbiAgICAgICAgICAgICAgICB0bzogZnVuY3Rpb24gKHZhbHVlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIE51bWJlcih2YWx1ZSkudG9GaXhlZChkZWNpbWFscyk7XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgZnJvbTogZnVuY3Rpb24gKHZhbHVlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIE51bWJlcih2YWx1ZSkudG9GaXhlZChkZWNpbWFscyk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgc2xpZGVyLm5vVWlTbGlkZXIub24oJ2NoYW5nZScsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgaXRlbS52YWx1ZSA9IHNsaWRlci5ub1VpU2xpZGVyLmdldCgpO1xyXG4gICAgICAgICAgICBpdGVtLmRpc3BhdGNoRXZlbnQoY2hhbmdlRXZlbnQpXHJcbiAgICAgICAgfSk7XHJcbiAgICB9KTtcclxuICAgIC8qKi9cclxuXHJcbiAgICAvKkR1cGxpY2F0ZSBpdGVtcyBidG4qL1xyXG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnW2RhdGEtZHVwbGljYXRlXScpLmZvckVhY2goZnVuY3Rpb24gKGVsKSB7XHJcbiAgICAgICAgbGV0IGNvcHlFbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyMnICsgZWwuZGF0YXNldC5kdXBsaWNhdGUpLFxyXG4gICAgICAgICAgICBkdXBsaWNhdGVzQ29udGFpbmVyID0gZWwuY2xvc2VzdCgnLnB1bGwtdXAnKS5wcmV2aW91c0VsZW1lbnRTaWJsaW5nO1xyXG5cclxuICAgICAgICBsZXQgY2xvbmVUcGwgPSBjb3B5RWwuY2xvbmVOb2RlKHRydWUpO1xyXG4gICAgICAgIGNsb25lVHBsLnZhbHVlID0gJyc7XHJcblxyXG4gICAgICAgIGVsLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cclxuICAgICAgICAgICAgbGV0IGNsb25lID0gY2xvbmVUcGwuY2xvbmVOb2RlKHRydWUpO1xyXG5cclxuICAgICAgICAgICAgY2xvbmUucmVtb3ZlQXR0cmlidXRlKCdyZXF1aXJlZCcpO1xyXG4gICAgICAgICAgICBjbG9uZS5yZW1vdmVBdHRyaWJ1dGUoJ2lkJyk7XHJcblxyXG4gICAgICAgICAgICBsZXQgcmVtb3ZlQnRuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICAgICAgICAgIHJlbW92ZUJ0bi5jbGFzc05hbWUgPSAnYnRuLWljb24gc21hbGwgaWNvbi1jbG9zZSc7XHJcblxyXG4gICAgICAgICAgICBsZXQgbmV3SXRlbSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgICAgICAgICBuZXdJdGVtLmNsYXNzTmFtZSA9ICdmb3JtLWdyb3VwJztcclxuICAgICAgICAgICAgbmV3SXRlbS5pbm5lckhUTUwgPSBgPGRpdiBjbGFzcz1cImlucHV0LWFkZG9uXCI+XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJhZGRvblwiPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgIGA7XHJcblxyXG4gICAgICAgICAgICBsZXQgYWRkb24gPSBuZXdJdGVtLnF1ZXJ5U2VsZWN0b3IoJy5hZGRvbicpO1xyXG5cclxuICAgICAgICAgICAgYWRkb24uYmVmb3JlKGNsb25lKTtcclxuICAgICAgICAgICAgYWRkb24uYXBwZW5kKHJlbW92ZUJ0bik7XHJcblxyXG4gICAgICAgICAgICByZW1vdmVCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICBuZXdJdGVtLnJlbW92ZSgpO1xyXG4gICAgICAgICAgICAgICAgZWwuc3R5bGUuZGlzcGxheSA9ICdpbmxpbmUtZmxleCc7XHJcbiAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgZHVwbGljYXRlc0NvbnRhaW5lci5hcHBlbmQobmV3SXRlbSk7XHJcblxyXG4gICAgICAgICAgICBpZiAoY2xvbmUuY2xhc3NMaXN0LmNvbnRhaW5zKCdzZWxlY3RpemUtcmVndWxhcicpKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoIWNsb25lLmhhc0F0dHJpYnV0ZSgnbXVsdGlwbGUnKSkge1xyXG4gICAgICAgICAgICAgICAgICAgICQoYFtuYW1lPVwiJHtjbG9uZS5uYW1lfVwiXWApLnNlbGVjdGl6ZShzZWxlY3RpemVTaW5nbGVPcHRpb25zKTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgJChgW25hbWU9XCIke2Nsb25lLm5hbWV9XCJdYCkuc2VsZWN0aXplKHNlbGVjdGl6ZU11bHRpcGxlT3B0aW9ucyk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGlmIChjbG9uZS5oYXNBdHRyaWJ1dGUoJ2RhdGEtbWV0aG9kJykpIHtcclxuICAgICAgICAgICAgICAgIGxldCBuZXdBamF4U2VsZWN0ID0gbmV3IGFqYXhTZWxlY3QoJChgW25hbWU9XCIke2Nsb25lLm5hbWV9XCJdYCkubm90KCcuc2VsZWN0aXplZCcpKTtcclxuICAgICAgICAgICAgICAgIG5ld0FqYXhTZWxlY3QuY2xlYXIoKTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgaWYgKGVsLmRhdGFzZXQubWF4Y291bnQgJiYgZHVwbGljYXRlc0NvbnRhaW5lci5jaGlsZHJlbi5sZW5ndGggPj0gZWwuZGF0YXNldC5tYXhjb3VudCkge1xyXG4gICAgICAgICAgICAgICAgaGlkZUVsKGVsKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfSk7XHJcbiAgICAvKiovXHJcblxyXG4gICAgc2VsZWN0aXplUmVndWxhckluaXQoKTtcclxuXHJcbiAgICAvKmluaXQgVGlueW1jZSovXHJcbiAgICBUaW55TWNlSW5pdCgnLnRpbnltY2UtaGVyZScpO1xyXG5cclxuICAgIFRpbnlNY2VJbml0KCcudGlueW1jZS10ZXh0LWhlcmUnLCB0cnVlKTtcclxuICAgIC8qKi9cclxuXHJcbiAgICAvKiBEYXRlcGlja2VyIGluaXQgKi9cclxuICAgICQoJy5jdXN0b20tZGF0ZXBpY2tlcicpLmVhY2goZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGxldCBwaWNrZXIgPSAkKHRoaXMpLmRhdGVwaWNrZXIoe1xyXG4gICAgICAgICAgICBsYW5ndWFnZTogbGFuZyxcclxuICAgICAgICAgICAgYXV0b0Nsb3NlOiB0cnVlXHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIGlmICgkKHRoaXMpLnZhbCgpKSB7XHJcbiAgICAgICAgICAgIHBpY2tlci5kYXRhKCdkYXRlcGlja2VyJykuc2VsZWN0RGF0ZShtb21lbnQoJCh0aGlzKS52YWwoKSwgJ0RELk1NLllZWVknKS50b0RhdGUoKSk7XHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcbiAgICAvKiovXHJcblxyXG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnW2RhdGEtdG9nZ2xlXScpLmZvckVhY2goZnVuY3Rpb24gKGVsKSB7XHJcbiAgICAgICAgbGV0IHRhcmdldFNlbGVjdG9ycyA9IGVsLmRhdGFzZXQudG9nZ2xlLnNwbGl0KCcsJyk7XHJcbiAgICAgICAgZWwuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICAgICAgdGFyZ2V0U2VsZWN0b3JzLmZvckVhY2goZnVuY3Rpb24gKHNlbGVjdG9yKSB7XHJcbiAgICAgICAgICAgICAgICB0b2dnbGVFbChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjJyArIHNlbGVjdG9yKSk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfSk7XHJcblxyXG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnRvcGljLnNwb2lsZXInKS5mb3JFYWNoKGZ1bmN0aW9uIChlbCkge1xyXG4gICAgICAgIGxldCB0b3BpY1RpdGxlID0gZWwucXVlcnlTZWxlY3RvcignLnRvcGljX19oZWFkZXInKTtcclxuXHJcbiAgICAgICAgdG9waWNUaXRsZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgZWwuY2xhc3NMaXN0LnRvZ2dsZSgnY29sbGFwc2VkJyk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9KTtcclxuXHJcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcucmVtb3ZhYmxlLWl0ZW1zJykuZm9yRWFjaChmdW5jdGlvbiAoY29sbGVjdGlvbikge1xyXG4gICAgICAgIGh0bWxDb2xsZWN0aW9uVG9BcnJheShjb2xsZWN0aW9uLmNoaWxkcmVuKS5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtKSB7XHJcbiAgICAgICAgICAgIGxldCByZW1vdmVCdG4gPSBpdGVtLnF1ZXJ5U2VsZWN0b3IoJy5pY29uLWNsb3NlJyk7XHJcblxyXG4gICAgICAgICAgICBpZiAocmVtb3ZlQnRuKSB7XHJcbiAgICAgICAgICAgICAgICByZW1vdmVCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaXRlbS5yZW1vdmUoKTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9KTtcclxuXHJcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuZHotc3RvcmVkJykuZm9yRWFjaChmdW5jdGlvbiAoZWwpIHtcclxuICAgICAgICBsZXQgcmVtb3ZlQnRuID0gZWwucXVlcnlTZWxlY3RvcignLmxpbmsucmVkJyksXHJcbiAgICAgICAgICAgIHJlY292ZXJCdG4gPSBlbC5xdWVyeVNlbGVjdG9yKCcubGluay5ncmVlbicpLFxyXG4gICAgICAgICAgICBpbnB1dCA9IGVsLnF1ZXJ5U2VsZWN0b3IoJ2lucHV0Jyk7XHJcblxyXG4gICAgICAgIHJlbW92ZUJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgaW5wdXQuc2V0QXR0cmlidXRlKCdkaXNhYmxlZCcsICdkaXNhYmxlZCcpO1xyXG4gICAgICAgICAgICBoaWRlRWwocmVtb3ZlQnRuKTtcclxuICAgICAgICAgICAgc2hvd0VsKHJlY292ZXJCdG4pO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICByZWNvdmVyQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBpbnB1dC5yZW1vdmVBdHRyaWJ1dGUoJ2Rpc2FibGVkJyk7XHJcbiAgICAgICAgICAgIGhpZGVFbChyZWNvdmVyQnRuKTtcclxuICAgICAgICAgICAgc2hvd0VsKHJlbW92ZUJ0bik7XHJcbiAgICAgICAgfSlcclxuICAgIH0pO1xyXG5cclxuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5hY2NvcmRpb24nKS5mb3JFYWNoKGZ1bmN0aW9uIChlbCkge1xyXG4gICAgICAgIGxldCBwYXJlbnQgPSBlbC5jbG9zZXN0KCcuYWNjb3JkaW9uLWdyb3VwJyksXHJcbiAgICAgICAgICAgIGlzRGVwZW5kZW50ID0gIXBhcmVudC5jbGFzc0xpc3QuY29udGFpbnMoJ2luZGVwZW5kZW50Jyk7XHJcblxyXG4gICAgICAgIGxldCBhY2NIZWFkZXIgPSBlbC5xdWVyeVNlbGVjdG9yKCcuYWNjb3JkaW9uX19oZWFkZXInKSxcclxuICAgICAgICAgICAgcGFuZWwgPSBhY2NIZWFkZXIubmV4dEVsZW1lbnRTaWJsaW5nO1xyXG5cclxuICAgICAgICBhY2NIZWFkZXIuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGlmIChpc0RlcGVuZGVudCAmJiAhZWwuY2xhc3NMaXN0LmNvbnRhaW5zKCdhY3RpdmUnKSAmJiBwYXJlbnQucXVlcnlTZWxlY3RvcignLmFjY29yZGlvbi5hY3RpdmUnKSkge1xyXG4gICAgICAgICAgICAgICAgbGV0IGFjdGl2ZUFjYyA9IHBhcmVudC5xdWVyeVNlbGVjdG9yKCcuYWNjb3JkaW9uLmFjdGl2ZScpLFxyXG4gICAgICAgICAgICAgICAgICAgIGFjdGl2ZUFjY1BhbmVsID0gYWN0aXZlQWNjLnF1ZXJ5U2VsZWN0b3IoJy5hY2NvcmRpb25fX2hlYWRlcicpLm5leHRFbGVtZW50U2libGluZztcclxuXHJcbiAgICAgICAgICAgICAgICBhY3RpdmVBY2MuY2xhc3NMaXN0LnJlbW92ZSgnYWN0aXZlJyk7XHJcbiAgICAgICAgICAgICAgICBhY3RpdmVBY2NQYW5lbC5zdHlsZS5tYXhIZWlnaHQgPSBudWxsO1xyXG4gICAgICAgICAgICAgICAgYWN0aXZlQWNjUGFuZWwuc3R5bGUub3BhY2l0eSA9IDA7XHJcblxyXG4gICAgICAgICAgICAgICAgZWwuY2xhc3NMaXN0LmFkZCgnYWN0aXZlJyk7XHJcbiAgICAgICAgICAgICAgICBwYW5lbC5zdHlsZS5tYXhIZWlnaHQgPSBwYW5lbC5zY3JvbGxIZWlnaHQgKyBcInB4XCI7XHJcbiAgICAgICAgICAgICAgICBwYW5lbC5zdHlsZS5vcGFjaXR5ID0gMTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGVsLmNsYXNzTGlzdC50b2dnbGUoJ2FjdGl2ZScpO1xyXG4gICAgICAgICAgICAgICAgaWYgKHBhbmVsLnN0eWxlLm1heEhlaWdodCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHBhbmVsLnN0eWxlLm1heEhlaWdodCA9IG51bGw7XHJcbiAgICAgICAgICAgICAgICAgICAgcGFuZWwuc3R5bGUub3BhY2l0eSA9IDA7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIHBhbmVsLnN0eWxlLm1heEhlaWdodCA9IHBhbmVsLnNjcm9sbEhlaWdodCArIFwicHhcIjtcclxuICAgICAgICAgICAgICAgICAgICBwYW5lbC5zdHlsZS5vcGFjaXR5ID0gMTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfSk7XHJcblxyXG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmV4dGVuZGFibGUnKS5mb3JFYWNoKGZ1bmN0aW9uIChleHRlbmRhYmxlQmxvY2spIHtcclxuICAgICAgICBsZXQgYnRuID0gZXh0ZW5kYWJsZUJsb2NrLm5leHRFbGVtZW50U2libGluZyxcclxuICAgICAgICAgICAgdGl0bGUgPSBidG4udGl0bGUsXHJcbiAgICAgICAgICAgIGFsdGVybmF0aXZlVGl0bGUgPSBidG4uZGF0YXNldC5hbHRlcm5hdGl2ZXRpdGxlLFxyXG4gICAgICAgICAgICBtYXhIZWlnaHQgPSBidG4uZGF0YXNldC5tYXhoZWlnaHQ7XHJcblxyXG4gICAgICAgIGlmIChleHRlbmRhYmxlQmxvY2sub2Zmc2V0SGVpZ2h0ID4gTnVtYmVyKG1heEhlaWdodCkpIHtcclxuICAgICAgICAgICAgc2hvd0VsKGJ0bik7XHJcbiAgICAgICAgICAgIGV4dGVuZGFibGVCbG9jay5zdHlsZS5tYXhIZWlnaHQgPSBtYXhIZWlnaHQgKyAncHgnO1xyXG4gICAgICAgICAgICBleHRlbmRhYmxlQmxvY2suY2xhc3NMaXN0LmFkZCgnZXh0ZW5kZWQnKTtcclxuXHJcbiAgICAgICAgICAgIGJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgICAgICAgICBpZiAoIWV4dGVuZGFibGVCbG9jay5jbGFzc0xpc3QuY29udGFpbnMoJ29wZW5lZCcpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgYnRuLmlubmVySFRNTCA9IGFsdGVybmF0aXZlVGl0bGU7XHJcbiAgICAgICAgICAgICAgICAgICAgYnRuLnRpdGxlID0gYWx0ZXJuYXRpdmVUaXRsZTtcclxuICAgICAgICAgICAgICAgICAgICBleHRlbmRhYmxlQmxvY2suY2xhc3NMaXN0LmFkZCgnb3BlbmVkJyk7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIGJ0bi5pbm5lckhUTUwgPSB0aXRsZTtcclxuICAgICAgICAgICAgICAgICAgICBidG4udGl0bGUgPSB0aXRsZTtcclxuICAgICAgICAgICAgICAgICAgICBleHRlbmRhYmxlQmxvY2suY2xhc3NMaXN0LnJlbW92ZSgnb3BlbmVkJyk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG5cclxuICAgIGlmICh3aW5kb3cuaW5uZXJXaWR0aCA8IDEwMjQpIHtcclxuICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdbZGF0YS10b2dnbGUtdGl0bGVdJykuZm9yRWFjaChmdW5jdGlvbiAoZWwpIHtcclxuICAgICAgICAgICAgbGV0IHRvZ2dsZUJ0biA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgICAgICAgICB0b2dnbGVCdG4uY2xhc3NOYW1lID0gJ3RvZ2dsZS1saW5rJztcclxuICAgICAgICAgICAgdG9nZ2xlQnRuLmlubmVySFRNTCA9IGVsLmdldEF0dHJpYnV0ZSgnZGF0YS10b2dnbGUtdGl0bGUnKTtcclxuXHJcbiAgICAgICAgICAgIHRvZ2dsZUJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIHRvZ2dsZUVsKGVsKTtcclxuICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICBlbC5iZWZvcmUodG9nZ2xlQnRuKTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICAkLmJ2aSh7XHJcbiAgICAgICAgYnZpX3RhcmdldDogXCIuYnZpLW9wZW5cIixcclxuICAgICAgICBidmlfdGhlbWU6IFwid2hpdGVcIixcclxuICAgICAgICBidmlfZm9udDogXCJhcmlhbFwiLFxyXG4gICAgICAgIGJ2aV9mb250X3NpemU6IDE2LFxyXG4gICAgICAgIGJ2aV9sZXR0ZXJfc3BhY2luZzogXCJub3JtYWxcIixcclxuICAgICAgICBidmlfbGluZV9oZWlnaHQ6IFwibm9ybWFsXCIsXHJcbiAgICAgICAgYnZpX2ltYWdlczogdHJ1ZSxcclxuICAgICAgICBidmlfcmVsb2FkOiBmYWxzZSxcclxuICAgICAgICBidmlfZml4ZWQ6IGZhbHNlLFxyXG4gICAgICAgIGJ2aV90dHM6IGZhbHNlLFxyXG4gICAgICAgIGJ2aV9mbGFzaF9pZnJhbWU6IHRydWUsXHJcbiAgICAgICAgYnZpX2hpZGU6IGZhbHNlXHJcbiAgICB9KTtcclxufSk7XHJcblxyXG4vL0ZpeGVkIGhlYWRlclxyXG4kKHdpbmRvdykuc2Nyb2xsKGZ1bmN0aW9uICgpIHtcclxuICAgIGlmICgkKHdpbmRvdykuc2Nyb2xsVG9wKCkgPiAkKCcubWFpbi13cmFwcGVyJykub2Zmc2V0KCkudG9wKSB7XHJcbiAgICAgICAgJCgnLmhlYWRlcicpLmFkZENsYXNzKCdmaXhlZCcpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgICAkKCcuaGVhZGVyJykucmVtb3ZlQ2xhc3MoJ2ZpeGVkJyk7XHJcbiAgICB9XHJcbn0pO1xyXG5cclxuLy9HZXQgc2Nyb2xsYmFyIHdpZHRoXHJcbmZ1bmN0aW9uIGdldFNjcm9sbGJhcldpZHRoKCkge1xyXG4gICAgdmFyIG91dGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcclxuICAgIG91dGVyLnN0eWxlLnZpc2liaWxpdHkgPSBcImhpZGRlblwiO1xyXG4gICAgb3V0ZXIuc3R5bGUud2lkdGggPSBcIjEwMHB4XCI7XHJcbiAgICBvdXRlci5zdHlsZS5tc092ZXJmbG93U3R5bGUgPSBcInNjcm9sbGJhclwiOyAvLyBuZWVkZWQgZm9yIFdpbkpTIGFwcHNcclxuXHJcbiAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKG91dGVyKTtcclxuXHJcbiAgICB2YXIgd2lkdGhOb1Njcm9sbCA9IG91dGVyLm9mZnNldFdpZHRoO1xyXG4gICAgLy8gZm9yY2Ugc2Nyb2xsYmFyc1xyXG4gICAgb3V0ZXIuc3R5bGUub3ZlcmZsb3cgPSBcInNjcm9sbFwiO1xyXG5cclxuICAgIC8vIGFkZCBpbm5lcmRpdlxyXG4gICAgdmFyIGlubmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcclxuICAgIGlubmVyLnN0eWxlLndpZHRoID0gXCIxMDAlXCI7XHJcbiAgICBvdXRlci5hcHBlbmRDaGlsZChpbm5lcik7XHJcblxyXG4gICAgdmFyIHdpZHRoV2l0aFNjcm9sbCA9IGlubmVyLm9mZnNldFdpZHRoO1xyXG5cclxuICAgIC8vIHJlbW92ZSBkaXZzXHJcbiAgICBvdXRlci5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKG91dGVyKTtcclxuXHJcbiAgICByZXR1cm4gd2lkdGhOb1Njcm9sbCAtIHdpZHRoV2l0aFNjcm9sbDtcclxufVxyXG5cclxuLy9NYWtlIGJvZHkgdW5zY3JvbGxhYmxlXHJcbmZ1bmN0aW9uIGJvZHlVbnNjcm9sbGFibGUoKSB7XHJcbiAgICBpZiAoISQoJ2JvZHknKS5oYXNDbGFzcygnbm8tc2Nyb2xsJykpIHtcclxuICAgICAgICBsZXQgc2Nyb2xsVG9wID0gJCh3aW5kb3cpLnNjcm9sbFRvcCgpO1xyXG4gICAgICAgIC8vRGV0ZWN0IGFsbCBmaXhlZCBlbGVtZW50cyBvbiB0aGUgcGFnZVxyXG4gICAgICAgIGxldCBmaW5kID0gJCgnKicpLmZpbHRlcihmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiAkKHRoaXMpLmNzcygncG9zaXRpb24nKSA9PSAnZml4ZWQnO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgICQoJy5tYWluLXdyYXBwZXInKS5jc3MoJ21hcmdpbi10b3AnLCAtc2Nyb2xsVG9wKTtcclxuICAgICAgICAkKCdib2R5JykuYWRkQ2xhc3MoJ25vLXNjcm9sbCcpLmNzcygnbWFyZ2luLXJpZ2h0JywgZ2V0U2Nyb2xsYmFyV2lkdGgoKSk7XHJcbiAgICAgICAgZmluZC5jc3MoJ21hcmdpbi1yaWdodCcsIGdldFNjcm9sbGJhcldpZHRoKCkpO1xyXG4gICAgfVxyXG59XHJcblxyXG4vL01ha2UgYm9keSBzY3JvbGxhYmxlXHJcbmZ1bmN0aW9uIGJvZHlTY3JvbGxhYmxlKCkge1xyXG4gICAgaWYgKCQoJ2JvZHknKS5oYXNDbGFzcygnbm8tc2Nyb2xsJykpIHtcclxuICAgICAgICBsZXQgc2Nyb2xsVG9wID0gJCgnLm1haW4td3JhcHBlcicpLmNzcygnbWFyZ2luLXRvcCcpLnNsaWNlKDAsIC0yKTtcclxuICAgICAgICAvL0RldGVjdCBhbGwgZml4ZWQgZWxlbWVudHMgb24gdGhlIHBhZ2VcclxuICAgICAgICBsZXQgZmluZCA9ICQoJyonKS5maWx0ZXIoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICByZXR1cm4gJCh0aGlzKS5jc3MoJ3Bvc2l0aW9uJykgPT0gJ2ZpeGVkJztcclxuICAgICAgICB9KTtcclxuICAgICAgICAkKCdib2R5JykucmVtb3ZlQ2xhc3MoJ25vLXNjcm9sbCcpLmNzcygnbWFyZ2luLXJpZ2h0JywgMCk7XHJcbiAgICAgICAgZmluZC5jc3MoJ21hcmdpbi1yaWdodCcsIDApO1xyXG4gICAgICAgICQoJy5tYWluLXdyYXBwZXInKS5jc3MoJ21hcmdpbi10b3AnLCAwKTtcclxuICAgICAgICAkKHdpbmRvdykuc2Nyb2xsVG9wKC1zY3JvbGxUb3ApO1xyXG4gICAgfVxyXG59XHJcblxyXG4vL1Njcm9sbCBlbCB0byBib3R0b21cclxuZnVuY3Rpb24gc2Nyb2xsVG9Cb3R0b20oZWwpIHtcclxuICAgIGxldCBjb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGVsKTtcclxuICAgIGNvbnRhaW5lci5zY3JvbGxUb3AgPSBjb250YWluZXIuc2Nyb2xsSGVpZ2h0O1xyXG59XHJcblxyXG4vL1JlbmRlciBhdXRob3IncyBzdGF0cyBjaGFydFxyXG5mdW5jdGlvbiByZW5kZXJBdXRob3JTdGF0cyhjb250YWluZXIpIHtcclxuICAgIGNvbnN0IHVybCA9IGNvbnRhaW5lci5kYXRhc2V0LnVybDtcclxuXHJcbiAgICBhbTRjb3JlLnJlYWR5KGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAvLyBUaGVtZXMgYmVnaW5cclxuICAgICAgICBhbTRjb3JlLnVzZVRoZW1lKGFtNHRoZW1lc19hbmltYXRlZCk7XHJcbiAgICAgICAgLy8gVGhlbWVzIGVuZFxyXG5cclxuICAgICAgICAvLyBDcmVhdGUgY2hhcnQgaW5zdGFuY2VcclxuICAgICAgICBsZXQgY2hhcnQgPSBhbTRjb3JlLmNyZWF0ZShjb250YWluZXIsIGFtNGNoYXJ0cy5YWUNoYXJ0KTtcclxuICAgICAgICBjb25zdCBsYW5nID0gd2luZG93LkxhcmF2ZWwubGFuZztcclxuXHJcbiAgICAgICAgLy9TZXQgY2hhcnQgbGFuZ1xyXG4gICAgICAgIGlmIChsYW5nID09PSAncnUnKSB7XHJcbiAgICAgICAgICAgIGNoYXJ0Lmxhbmd1YWdlLmxvY2FsZSA9IGFtNGxhbmdfcnVfUlU7XHJcbiAgICAgICAgfSBlbHNlIGlmIChsYW5nID09PSAna2snKSB7XHJcbiAgICAgICAgICAgIGNoYXJ0Lmxhbmd1YWdlLmxvY2FsZSA9IGFtNGxhbmdfa29fS1I7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvLyBEYXRlcGlja2VyXHJcbiAgICAgICAgbGV0IGRlZmF1bHREYXRlcGlja2VyT3B0aW9ucyA9IHtcclxuICAgICAgICAgICAgbGFuZ3VhZ2U6IGxhbmcsXHJcbiAgICAgICAgICAgIGF1dG9DbG9zZTogdHJ1ZSxcclxuICAgICAgICAgICAgbWF4RGF0ZTogbmV3IERhdGUoKSxcclxuICAgICAgICAgICAgb25TZWxlY3Q6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIGNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKCdwcmVsb2FkZXInKTtcclxuICAgICAgICAgICAgICAgIHVwZGF0ZURhdGEocGlja2VyRnJvbS5lbC52YWx1ZSwgcGlja2VyVG8uZWwudmFsdWUpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfTtcclxuXHJcbiAgICAgICAgbGV0IHBpY2tlckZyb20gPSAkKCdbbmFtZT1cImRhdGVGcm9tXCJdJykuZGF0ZXBpY2tlcihkZWZhdWx0RGF0ZXBpY2tlck9wdGlvbnMpLmRhdGEoJ2RhdGVwaWNrZXInKSxcclxuICAgICAgICAgICAgcGlja2VyVG8gPSAkKCdbbmFtZT1cImRhdGVUb1wiXScpLmRhdGVwaWNrZXIoZGVmYXVsdERhdGVwaWNrZXJPcHRpb25zKS5kYXRhKCdkYXRlcGlja2VyJyk7XHJcblxyXG4gICAgICAgIGxldCBkYXRlRnJvbSA9IHBpY2tlckZyb20uZWwudmFsdWUgPyBtb21lbnQocGlja2VyRnJvbS5lbC52YWx1ZSwgJ0RELk1NLllZWVknKS5mb3JtYXQoJ1lZWVktTU0tREQnKSA6ICcnLFxyXG4gICAgICAgICAgICBkYXRlVG8gPSBwaWNrZXJUby5lbC52YWx1ZSA/IG1vbWVudChwaWNrZXJUby5lbC52YWx1ZSwgJ0RELk1NLllZWVknKS5mb3JtYXQoJ1lZWVktTU0tREQnKSA6ICcnO1xyXG5cclxuICAgICAgICAvLyBBZGQgaW5pdGlhbCBkYXRhXHJcbiAgICAgICAgJC5hamF4KHtcclxuICAgICAgICAgICAgdXJsOiB1cmwgKyAnP2RhdGVfZnJvbT0nICsgZGF0ZUZyb20gKyAnJmRhdGVfdG89JyArIGRhdGVUbyxcclxuICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKHJlc3BvbnNlKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBjb2xvcjEgPSByZXNwb25zZS5jb2xvcjEsXHJcbiAgICAgICAgICAgICAgICAgICAgY29sb3IyID0gcmVzcG9uc2UuY29sb3IyO1xyXG5cclxuICAgICAgICAgICAgICAgIGNoYXJ0LmRhdGEgPSByZXNwb25zZS5kYXRhO1xyXG5cclxuICAgICAgICAgICAgICAgIC8vIENyZWF0ZSBheGVzXHJcbiAgICAgICAgICAgICAgICBsZXQgZGF0ZUF4aXMgPSBjaGFydC54QXhlcy5wdXNoKG5ldyBhbTRjaGFydHMuRGF0ZUF4aXMoKSk7XHJcbiAgICAgICAgICAgICAgICBkYXRlQXhpcy5yZW5kZXJlci5taW5HcmlkRGlzdGFuY2UgPSA1MDtcclxuXHJcbiAgICAgICAgICAgICAgICBsZXQgdmFsdWVBeGlzID0gY2hhcnQueUF4ZXMucHVzaChuZXcgYW00Y2hhcnRzLlZhbHVlQXhpcygpKTtcclxuXHJcbiAgICAgICAgICAgICAgICAvLyBDcmVhdGUgc2VyaWVzXHJcbiAgICAgICAgICAgICAgICBsZXQgc2VyaWVzID0gY2hhcnQuc2VyaWVzLnB1c2gobmV3IGFtNGNoYXJ0cy5MaW5lU2VyaWVzKCkpO1xyXG4gICAgICAgICAgICAgICAgc2VyaWVzLmRhdGFGaWVsZHMudmFsdWVZID0gXCJ2YWx1ZTFcIjtcclxuICAgICAgICAgICAgICAgIHNlcmllcy5zdHJva2UgPSBjb2xvcjE7XHJcbiAgICAgICAgICAgICAgICBzZXJpZXMudG9vbHRpcFRleHQgPSBcInt2YWx1ZTF9XCI7XHJcbiAgICAgICAgICAgICAgICBzZXRTZXJpZXNEZWZhdWx0T3B0aW9ucyhzZXJpZXMpO1xyXG5cclxuICAgICAgICAgICAgICAgIC8vIENyZWF0ZSBzZXJpZXNcclxuICAgICAgICAgICAgICAgIGxldCBzZXJpZXMyID0gY2hhcnQuc2VyaWVzLnB1c2gobmV3IGFtNGNoYXJ0cy5MaW5lU2VyaWVzKCkpO1xyXG4gICAgICAgICAgICAgICAgc2VyaWVzMi5kYXRhRmllbGRzLnZhbHVlWSA9IFwidmFsdWUyXCI7XHJcbiAgICAgICAgICAgICAgICBzZXJpZXMyLnN0cm9rZSA9IGNvbG9yMjtcclxuICAgICAgICAgICAgICAgIHNlcmllczIudG9vbHRpcFRleHQgPSBcInt2YWx1ZTJ9XCI7XHJcbiAgICAgICAgICAgICAgICBzZXRTZXJpZXNEZWZhdWx0T3B0aW9ucyhzZXJpZXMyKTtcclxuXHJcbiAgICAgICAgICAgICAgICAvLyBBZGQgY3Vyc29yXHJcbiAgICAgICAgICAgICAgICBjaGFydC5jdXJzb3IgPSBuZXcgYW00Y2hhcnRzLlhZQ3Vyc29yKCk7XHJcbiAgICAgICAgICAgICAgICBjaGFydC5jdXJzb3IueEF4aXMgPSBkYXRlQXhpcztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICBmdW5jdGlvbiB1cGRhdGVEYXRhKGZyb20sIHRvKSB7XHJcbiAgICAgICAgICAgICQuYWpheCh7XHJcbiAgICAgICAgICAgICAgICB1cmw6IHVybCArICc/ZGF0ZV9mcm9tPScgKyBmcm9tICsgJyZkYXRlX3RvPScgKyB0byxcclxuICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChyZXNwb25zZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGNoYXJ0LmRhdGEgPSByZXNwb25zZS5kYXRhO1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnRhaW5lci5jbGFzc0xpc3QucmVtb3ZlKCdwcmVsb2FkZXInKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBmdW5jdGlvbiBzZXRTZXJpZXNEZWZhdWx0T3B0aW9ucyhzZXJpZXMpIHtcclxuICAgICAgICAgICAgc2VyaWVzLmRhdGFGaWVsZHMuZGF0ZVggPSBcImRhdGVcIjtcclxuICAgICAgICAgICAgc2VyaWVzLnN0cm9rZVdpZHRoID0gMztcclxuICAgICAgICAgICAgc2VyaWVzLm1pbkJ1bGxldERpc3RhbmNlID0gMTA7XHJcbiAgICAgICAgICAgIHNlcmllcy50b29sdGlwLnBvaW50ZXJPcmllbnRhdGlvbiA9IFwidmVydGljYWxcIjtcclxuICAgICAgICAgICAgc2VyaWVzLnRvb2x0aXAuYmFja2dyb3VuZC5jb3JuZXJSYWRpdXMgPSAyMDtcclxuICAgICAgICAgICAgc2VyaWVzLnRvb2x0aXAuYmFja2dyb3VuZC5zdHJva2VPcGFjaXR5ID0gMDtcclxuICAgICAgICAgICAgc2VyaWVzLnRvb2x0aXAubGFiZWwubWluV2lkdGggPSA0MDtcclxuICAgICAgICAgICAgc2VyaWVzLnRvb2x0aXAubGFiZWwubWluSGVpZ2h0ID0gNDA7XHJcbiAgICAgICAgICAgIHNlcmllcy50b29sdGlwLmxhYmVsLnRleHRBbGlnbiA9IFwibWlkZGxlXCI7XHJcbiAgICAgICAgICAgIHNlcmllcy50b29sdGlwLmxhYmVsLnRleHRWYWxpZ24gPSBcIm1pZGRsZVwiO1xyXG4gICAgICAgICAgICBzZXJpZXMudG9vbHRpcC5nZXRGaWxsRnJvbU9iamVjdCA9IGZhbHNlO1xyXG4gICAgICAgICAgICBzZXJpZXMudG9vbHRpcC5iYWNrZ3JvdW5kLmZpbGwgPSBhbTRjb3JlLmNvbG9yKFwiI2Y1ZjVmNVwiKTtcclxuICAgICAgICAgICAgc2VyaWVzLnRvb2x0aXAuYXV0b1RleHRDb2xvciA9IGZhbHNlO1xyXG4gICAgICAgICAgICBzZXJpZXMudG9vbHRpcC5sYWJlbC5maWxsID0gYW00Y29yZS5jb2xvcihcIiMzMzNcIik7XHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcbn1cclxuXHJcbi8vVG9BcnJheVxyXG5mdW5jdGlvbiB0b0FycmF5KHN0cikge1xyXG4gICAgcmV0dXJuIEFycmF5LmlzQXJyYXkoc3RyKSA/IHN0ciA6IEFycmF5KHN0cilcclxufVxyXG5cclxuZnVuY3Rpb24gaHRtbENvbGxlY3Rpb25Ub0FycmF5KGNvbGxlY3Rpb24pIHtcclxuICAgIHJldHVybiBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChjb2xsZWN0aW9uKVxyXG59XHJcblxyXG5mdW5jdGlvbiBoaWRlQWxsQ2hpbGRyZW4oZWwpIHtcclxuICAgIEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGVsLmNoaWxkcmVuKS5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtKSB7XHJcbiAgICAgICAgaXRlbS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xyXG4gICAgfSk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHNob3dFbChlbCkge1xyXG4gICAgZWwuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGhpZGVFbChlbCkge1xyXG4gICAgZWwuc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxufVxyXG5cclxuZnVuY3Rpb24gdG9nZ2xlRWwoZWwpIHtcclxuICAgIGlmIChlbC5zdHlsZS5kaXNwbGF5ID09PSBcIm5vbmVcIiB8fCB3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZShlbCwgbnVsbCkuZ2V0UHJvcGVydHlWYWx1ZShcImRpc3BsYXlcIikgPT09ICdub25lJykge1xyXG4gICAgICAgIGVsLnN0eWxlLmRpc3BsYXkgPSBcImJsb2NrXCI7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgIGVsLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcclxuICAgIH1cclxufVxyXG5cclxuZnVuY3Rpb24gcmV0dXJuQ2hlY2tlZFJhZGlvKHJhZGlvQ29sbGVjdGlvbikge1xyXG4gICAgcmV0dXJuIEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKHJhZGlvQ29sbGVjdGlvbikuZmluZChmdW5jdGlvbiAoaXRlbSkge1xyXG4gICAgICAgIHJldHVybiBpdGVtLmNoZWNrZWQgPT09IHRydWVcclxuICAgIH0pXHJcbn1cclxuXHJcbmxldCBBdmF0YXJEcm9wem9uZSA9IGZ1bmN0aW9uIChpZCwgdXJsLCBtYXhTaXplLCBhY2NlcHRlZEZpbGVzKSB7XHJcbiAgICBjb25zdCBwYXJlbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGlkKSxcclxuICAgICAgICBsYW5nID0gd2luZG93LkxhcmF2ZWwubGFuZyxcclxuICAgICAgICBwcmV2aWV3c0NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoaWQpLnF1ZXJ5U2VsZWN0b3IoJy5wcmV2aWV3cy1jb250YWluZXInKSxcclxuICAgICAgICBkZWZhdWx0UHJldmlld1VybCA9IHBhcmVudC5xdWVyeVNlbGVjdG9yKCcuYXZhdGFyLXByZXZpZXcnKS5kYXRhc2V0LmRlZmF1bHRzcmMsXHJcbiAgICAgICAgcHJldmlld1RlbXBsYXRlID0gcGFyZW50LnF1ZXJ5U2VsZWN0b3IoJy5hdmF0YXItcHJldmlldy10ZW1wbGF0ZScpLFxyXG4gICAgICAgIGF2YXRhclByZXZpZXcgPSBwYXJlbnQucXVlcnlTZWxlY3RvcignLmF2YXRhci1wcmV2aWV3JyksXHJcbiAgICAgICAgYXZhdGFyUGljayA9IHBhcmVudC5xdWVyeVNlbGVjdG9yKCcuYXZhdGFyLXBpY2snKSxcclxuICAgICAgICBhdmF0YXJQYXRoID0gcGFyZW50LnF1ZXJ5U2VsZWN0b3IoJy5hdmF0YXItcGF0aCcpO1xyXG4gICAgbGV0IGxvY2FsZU9wdGlvbnMgPSBudWxsO1xyXG5cclxuICAgIC8qQ2hlY2sgaWYgbGFuZyBpcyBub3QgZW5nKi9cclxuICAgIGlmIChsYW5nID09PSAncnUnKSB7XHJcbiAgICAgICAgbG9jYWxlT3B0aW9ucyA9IGRyb3B6b25lUlU7XHJcbiAgICB9IGVsc2UgaWYgKGxhbmcgPT09ICdraycpIHtcclxuICAgICAgICBsb2NhbGVPcHRpb25zID0gZHJvcHpvbmVLS1xyXG4gICAgfVxyXG5cclxuICAgIGxldCBuZXdEcm9wem9uZSA9IG5ldyBEcm9wem9uZShpZCwge1xyXG4gICAgICAgIHVybDogdXJsLFxyXG4gICAgICAgIHByZXZpZXdUZW1wbGF0ZTogcHJldmlld1RlbXBsYXRlLmlubmVySFRNTCxcclxuICAgICAgICBtYXhGaWxlc2l6ZTogbWF4U2l6ZSxcclxuICAgICAgICBhY2NlcHRlZEZpbGVzOiBhY2NlcHRlZEZpbGVzLFxyXG4gICAgICAgIHRpbWVvdXQ6IDE4MDAwMCxcclxuICAgICAgICBsYXN0RmlsZTogbnVsbCxcclxuICAgICAgICBwcmV2aWV3c0NvbnRhaW5lcjogcHJldmlld3NDb250YWluZXIsXHJcbiAgICAgICAgY2xpY2thYmxlOiBbYXZhdGFyUGljaywgYXZhdGFyUHJldmlld10sXHJcbiAgICAgICAgaW5pdDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB0aGlzLm9uKCdzdWNjZXNzJywgZnVuY3Rpb24gKGZpbGUsIHJlc3BvbnNlKSB7XHJcbiAgICAgICAgICAgICAgICBhdmF0YXJQcmV2aWV3LnNyYyA9IGZpbGUuZGF0YVVSTDtcclxuICAgICAgICAgICAgICAgIGF2YXRhclBhdGgudmFsdWUgPSByZXNwb25zZS5sb2NhdGlvbjtcclxuICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICB0aGlzLm9uKCdyZW1vdmVkZmlsZScsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIGF2YXRhclByZXZpZXcuc3JjID0gZGVmYXVsdFByZXZpZXdVcmw7XHJcbiAgICAgICAgICAgICAgICBhdmF0YXJQYXRoLnZhbHVlID0gJyc7XHJcbiAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgdGhpcy5vbignYWRkZWRmaWxlJywgZnVuY3Rpb24gKGZpbGUpIHtcclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLmxhc3RGaWxlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5yZW1vdmVGaWxlKHRoaXMubGFzdEZpbGUpXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB0aGlzLmxhc3RGaWxlID0gZmlsZTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICAuLi5sb2NhbGVPcHRpb25zXHJcbiAgICB9KTtcclxuXHJcbiAgICBpZiAocHJldmlld3NDb250YWluZXIuaW5uZXJIVE1MICE9PSAnJykge1xyXG4gICAgICAgIGxldCBpdGVtID0gcHJldmlld3NDb250YWluZXIucXVlcnlTZWxlY3RvcignLmR6LXByZXZpZXcnKSxcclxuICAgICAgICAgICAgZmlsZW5hbWUgPSBpdGVtLnF1ZXJ5U2VsZWN0b3IoJy5kei1maWxlbmFtZScpID8gaXRlbS5xdWVyeVNlbGVjdG9yKCcuZHotZmlsZW5hbWUnKS50ZXh0Q29udGVudCA6ICcnLFxyXG4gICAgICAgICAgICBzaXplID0gaXRlbS5xdWVyeVNlbGVjdG9yKCcuZHotc2l6ZSBzdHJvbmcnKSA/IGl0ZW0ucXVlcnlTZWxlY3RvcignLmR6LXNpemUgc3Ryb25nJykudGV4dENvbnRlbnQgOiAnJztcclxuICAgICAgICBsZXQgbW9ja0ZpbGUgPSB7bmFtZTogZmlsZW5hbWUsIHNpemU6IE51bWJlcihzaXplKSAqIDEwMDB9O1xyXG5cclxuICAgICAgICBwcmV2aWV3c0NvbnRhaW5lci5pbm5lckhUTUwgPSAnJztcclxuICAgICAgICBuZXdEcm9wem9uZS5kaXNwbGF5RXhpc3RpbmdGaWxlKG1vY2tGaWxlLCBhdmF0YXJQYXRoLnZhbHVlKTtcclxuICAgIH1cclxufTtcclxuXHJcbmxldCBDdXN0b21Ecm9wem9uZSA9IGZ1bmN0aW9uIChlbCwgdXJsLCBtYXhGaWxlcywgbWF4U2l6ZSwgYWNjZXB0ZWRGaWxlcywgc2hvd1RodW1ibmFpbHMgPSBmYWxzZSkge1xyXG4gICAgY29uc3QgcHJldmlld3NDb250YWluZXIgPSBlbC5xdWVyeVNlbGVjdG9yKCcucHJldmlld3MtY29udGFpbmVyJyksXHJcbiAgICAgICAgY2xpY2thYmxlID0gZWwucXVlcnlTZWxlY3RvcignLmRyb3B6b25lLWRlZmF1bHRfX2xpbmsnKSxcclxuICAgICAgICBmaWxlc1BhdGggPSBlbC5xdWVyeVNlbGVjdG9yKCdpbnB1dCcpLFxyXG4gICAgICAgIGxhbmcgPSB3aW5kb3cuTGFyYXZlbC5sYW5nO1xyXG4gICAgbGV0IGZpbGVuYW1lcyA9IFtdLFxyXG4gICAgICAgIGxvY2FsZU9wdGlvbnMgPSBudWxsLFxyXG4gICAgICAgIHJlbW92ZVRleHQgPSAnUmVtb3ZlJztcclxuXHJcbiAgICAvKkNoZWNrIGlmIGxhbmcgaXMgbm90IGVuZyovXHJcbiAgICBpZiAobGFuZyA9PT0gJ3J1Jykge1xyXG4gICAgICAgIGxvY2FsZU9wdGlvbnMgPSBkcm9wem9uZVJVO1xyXG4gICAgICAgIHJlbW92ZVRleHQgPSAn0KPQtNCw0LvQuNGC0YwnXHJcbiAgICB9IGVsc2UgaWYgKGxhbmcgPT09ICdraycpIHtcclxuICAgICAgICBsb2NhbGVPcHRpb25zID0gZHJvcHpvbmVLSztcclxuICAgICAgICByZW1vdmVUZXh0ID0gJ9CW0L7RjidcclxuICAgIH1cclxuXHJcbiAgICBsZXQgbmV3RHJvcHpvbmUgPSBuZXcgRHJvcHpvbmUoZWwsIHtcclxuICAgICAgICB1cmw6IHVybCxcclxuICAgICAgICBwYXJhbU5hbWU6IFwiZmlsZXNbXVwiLFxyXG4gICAgICAgIGNsaWNrYWJsZTogY2xpY2thYmxlLFxyXG4gICAgICAgIG1heEZpbGVzOiBtYXhGaWxlcyxcclxuICAgICAgICBtYXhGaWxlc2l6ZTogbWF4U2l6ZSxcclxuICAgICAgICBhY2NlcHRlZEZpbGVzOiBhY2NlcHRlZEZpbGVzLFxyXG4gICAgICAgIHRodW1ibmFpbEhlaWdodDogbnVsbCxcclxuICAgICAgICBwcmV2aWV3c0NvbnRhaW5lcjogcHJldmlld3NDb250YWluZXIsXHJcbiAgICAgICAgcHJldmlld1RlbXBsYXRlOiBgPGRpdiBjbGFzcz1cImR6LXByZXZpZXcgZHotZmlsZS1wcmV2aWV3XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZHotZGV0YWlsc1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICR7c2hvd1RodW1ibmFpbHMgPyAnPGltZyBkYXRhLWR6LXRodW1ibmFpbCAvPicgOiAnJ31cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZHotZmlsZW5hbWVcIj48c3BhbiBkYXRhLWR6LW5hbWU+PC9zcGFuPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkei1zaXplXCIgZGF0YS1kei1zaXplPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkei1wcm9ncmVzc1wiPjxzcGFuIGNsYXNzPVwiZHotdXBsb2FkXCIgZGF0YS1kei11cGxvYWRwcm9ncmVzcz48L3NwYW4+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJhbGVydCBhbGVydC1kYW5nZXJcIj48c3BhbiBkYXRhLWR6LWVycm9ybWVzc2FnZT4gPC9zcGFuPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj1cImphdmFzY3JpcHQ6dW5kZWZpbmVkO1wiIHRpdGxlPVwiJHtyZW1vdmVUZXh0fVwiIGNsYXNzPVwibGluayByZWRcIiBkYXRhLWR6LXJlbW92ZT4ke3JlbW92ZVRleHR9PC9hPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5gLFxyXG4gICAgICAgIGluaXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdGhpcy5vbignc3VjY2VzcycsIChmaWxlcywgcmVzcG9uc2UpID0+IHtcclxuICAgICAgICAgICAgICAgIGZpbGVuYW1lcy5wdXNoKFN0cmluZyhyZXNwb25zZS5maWxlbmFtZXMpKTtcclxuICAgICAgICAgICAgICAgIGZpbGVzUGF0aC52YWx1ZSA9IEpTT04uc3RyaW5naWZ5KGZpbGVuYW1lcylcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIHRoaXMub24oJ3JlbW92ZWRmaWxlJywgKGZpbGVzKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBpZiAoZmlsZXMueGhyKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IHJlbW92ZWRWYWx1ZSA9IFN0cmluZyhKU09OLnBhcnNlKGZpbGVzLnhoci5yZXNwb25zZSkuZmlsZW5hbWVzKTtcclxuICAgICAgICAgICAgICAgICAgICBmaWxlbmFtZXMgPSBmaWxlbmFtZXMuZmlsdGVyKGZ1bmN0aW9uIChpdGVtKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBpdGVtICE9PSByZW1vdmVkVmFsdWVcclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGZpbGVzUGF0aC52YWx1ZSA9IEpTT04uc3RyaW5naWZ5KGZpbGVuYW1lcyk7XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgfSxcclxuICAgICAgICAuLi5sb2NhbGVPcHRpb25zXHJcbiAgICB9KTtcclxuXHJcbiAgICBpZiAobWF4RmlsZXMgPT09IDEgJiYgcHJldmlld3NDb250YWluZXIuaW5uZXJIVE1MICE9PSAnJykge1xyXG4gICAgICAgIGxldCBpdGVtID0gcHJldmlld3NDb250YWluZXIucXVlcnlTZWxlY3RvcignLmR6LXByZXZpZXcnKSxcclxuICAgICAgICAgICAgZmlsZW5hbWUgPSBpdGVtLnF1ZXJ5U2VsZWN0b3IoJy5kei1maWxlbmFtZScpID8gaXRlbS5xdWVyeVNlbGVjdG9yKCcuZHotZmlsZW5hbWUnKS50ZXh0Q29udGVudCA6ICcnLFxyXG4gICAgICAgICAgICBzaXplID0gaXRlbS5xdWVyeVNlbGVjdG9yKCcuZHotc2l6ZSBzdHJvbmcnKSA/IGl0ZW0ucXVlcnlTZWxlY3RvcignLmR6LXNpemUgc3Ryb25nJykudGV4dENvbnRlbnQgOiAnJztcclxuICAgICAgICBsZXQgbW9ja0ZpbGUgPSB7bmFtZTogZmlsZW5hbWUsIHNpemU6IE51bWJlcihzaXplKSAqIDEwMDB9O1xyXG5cclxuICAgICAgICBwcmV2aWV3c0NvbnRhaW5lci5pbm5lckhUTUwgPSAnJztcclxuICAgICAgICBuZXdEcm9wem9uZS5kaXNwbGF5RXhpc3RpbmdGaWxlKG1vY2tGaWxlLCBmaWxlc1BhdGgudmFsdWUpO1xyXG4gICAgfVxyXG59O1xyXG5cclxuZnVuY3Rpb24gVGlueU1jZUluaXQoc2VsZWN0b3IsIHRleHRPbmx5ID0gZmFsc2UpIHtcclxuICAgIGxldCBsYW5nID0gd2luZG93LkxhcmF2ZWwubGFuZyxcclxuICAgICAgICAvLyBiYXNlVXJsID0gJ2h0dHBzOi8vZGV2My5wYW5hbWEua3onLFxyXG4gICAgICAgIGJhc2VVcmwgPSAnJyxcclxuICAgICAgICBtZXRob2QgPSBcIi9hamF4X3VwbG9hZF9sZXNzb25fYW5vdGhlcl9maWxlP190b2tlbj1cIiArIHdpbmRvdy5MYXJhdmVsLmNzcmZUb2tlbixcclxuICAgICAgICBhZGRpdGlvbmFsVG9vbHMgPSAnJywgaW5wdXQsIHByb2dyZXNzTW9kYWwsIHByb2dyZXNzQmFyLCBjYW5jZWxVcGxvYWRCdG4sIHByb2dyZXNzTXNnRWwsXHJcbiAgICAgICAgdm9jYWJ1bGFyeSA9IHtcclxuICAgICAgICAgICAgZW46IHtcclxuICAgICAgICAgICAgICAgIHVwbG9hZFRpdGxlOiAnRmlsZSB1cGxvYWQnLFxyXG4gICAgICAgICAgICAgICAgY2FuY2VsOiAnQ2FuY2VsJyxcclxuICAgICAgICAgICAgICAgIGZhaWw6ICdGYWlsZWQgdG8gbG9hZCBmaWxlJ1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBrazoge1xyXG4gICAgICAgICAgICAgICAgdXBsb2FkVGl0bGU6ICfQpNCw0LnQuyDQttKv0LrRgtC10YMnLFxyXG4gICAgICAgICAgICAgICAgY2FuY2VsOiAn0JbQvtGOJyxcclxuICAgICAgICAgICAgICAgIGZhaWw6ICfQpNCw0LnQuyDQttKv0LrRgtC10LvQvNC10LTRlidcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgcnU6IHtcclxuICAgICAgICAgICAgICAgIHVwbG9hZFRpdGxlOiAn0JfQsNCz0YDRg9C30LrQsCDRhNCw0LnQu9CwJyxcclxuICAgICAgICAgICAgICAgIGNhbmNlbDogJ9Ce0YLQvNC10L3QsCcsXHJcbiAgICAgICAgICAgICAgICBmYWlsOiAn0J3QtSDRg9C00LDQu9C+0YHRjCDQt9Cw0LPRgNGD0LfQuNGC0Ywg0YTQsNC50LsnXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG4gICAgICAgIHByb2dyZXNzTW9kYWxDb250ZW50ID0gYDxkaXYgY2xhc3M9XCJ0ZXh0LWNlbnRlclwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDQgY2xhc3M9XCJ0aXRsZS1wcmltYXJ5XCI+JHt2b2NhYnVsYXJ5W2xhbmddLnVwbG9hZFRpdGxlfTwvaDQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwcm9ncmVzcy1iYXJcIj48c3Bhbj48L3NwYW4+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwbGFpbi10ZXh0IGdyYXlcIj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj1cImphdmFzY3JpcHQ6O1wiIHRpdGxlPVwi0J7RgtC80LXQvdCwXCIgY2xhc3M9XCJidG5cIj4ke3ZvY2FidWxhcnlbbGFuZ10uY2FuY2VsfTwvYT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5gO1xyXG5cclxuICAgIGlmICghdGV4dE9ubHkpIHtcclxuICAgICAgICBhZGRpdGlvbmFsVG9vbHMgPSAnaW1hZ2UgbWVkaWEnO1xyXG4gICAgfVxyXG5cclxuICAgIGlmICghZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2ZpbGVQaWNrZXInKSkge1xyXG4gICAgICAgIGlucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTtcclxuICAgICAgICBpbnB1dC50eXBlID0gJ2ZpbGUnO1xyXG4gICAgICAgIGlucHV0LmlkID0gJ2ZpbGVQaWNrZXInO1xyXG4gICAgICAgIGlucHV0LnN0eWxlLmNzc1RleHQgPSAncG9zaXRpb246IGZpeGVkOyB0b3A6IC05OTk5cHg7IGxlZnQ6IC05OTk5cHg7IHotaW5kZXg6IC0xJztcclxuICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdib2R5JykuYXBwZW5kKGlucHV0KTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICAgaW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjZmlsZVBpY2tlcicpO1xyXG4gICAgfVxyXG5cclxuICAgIGlmICghZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3Byb2dyZXNzTW9kYWwnKSkge1xyXG4gICAgICAgIHByb2dyZXNzTW9kYWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgICAgICBwcm9ncmVzc01vZGFsLmlkID0gJ3Byb2dyZXNzTW9kYWwnO1xyXG4gICAgICAgIHByb2dyZXNzTW9kYWwuaW5uZXJIVE1MID0gcHJvZ3Jlc3NNb2RhbENvbnRlbnQ7XHJcbiAgICAgICAgcHJvZ3Jlc3NNb2RhbC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xyXG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2JvZHknKS5hcHBlbmQocHJvZ3Jlc3NNb2RhbCk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgIHByb2dyZXNzTW9kYWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjcHJvZ3Jlc3NNb2RhbCcpO1xyXG4gICAgfVxyXG5cclxuICAgIHByb2dyZXNzQmFyID0gcHJvZ3Jlc3NNb2RhbC5xdWVyeVNlbGVjdG9yKCcucHJvZ3Jlc3MtYmFyIHNwYW4nKTtcclxuICAgIGNhbmNlbFVwbG9hZEJ0biA9IHByb2dyZXNzTW9kYWwucXVlcnlTZWxlY3RvcignLmJ0bicpO1xyXG4gICAgcHJvZ3Jlc3NNc2dFbCA9IHByb2dyZXNzTW9kYWwucXVlcnlTZWxlY3RvcignLnBsYWluLXRleHQnKTtcclxuICAgIHByb2dyZXNzTXNnRWwuc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxuXHJcbiAgICB0aW55bWNlLmluaXQoe1xyXG4gICAgICAgIHNlbGVjdG9yOiBzZWxlY3RvcixcclxuICAgICAgICBtZW51YmFyOiBmYWxzZSxcclxuICAgICAgICBwbHVnaW5zOiBbXHJcbiAgICAgICAgICAgICdwYWdlZW1iZWQgIGxpc3RzIGxpbmsgJyArIGFkZGl0aW9uYWxUb29scyArICcgdGFibGUgcGFzdGUgY29kZSB3b3JkY291bnQnXHJcbiAgICAgICAgXSxcclxuICAgICAgICB0b29sYmFyOiAndW5kbyByZWRvIHwgZm9ybWF0c2VsZWN0IHwgJyArXHJcbiAgICAgICAgICAgICdib2xkIGl0YWxpYyBsaW5rICcgKyBhZGRpdGlvbmFsVG9vbHMgKyAnIHwgYWxpZ25sZWZ0IGFsaWduY2VudGVyICcgK1xyXG4gICAgICAgICAgICAnYWxpZ25yaWdodCBhbGlnbmp1c3RpZnkgfCBidWxsaXN0IG51bWxpc3QgfCAnICtcclxuICAgICAgICAgICAgJ3JlbW92ZWZvcm1hdCB8IGhlbHAnLFxyXG4gICAgICAgIGltYWdlc191cGxvYWRfdXJsOiBtZXRob2QsXHJcbiAgICAgICAgZmlsZXNfdXBsb2FkX3VybDogbWV0aG9kLFxyXG4gICAgICAgIGZpbGVfcGlja2VyX3R5cGVzOiAnZmlsZSBpbWFnZSBtZWRpYScsXHJcbiAgICAgICAgcmVsYXRpdmVfdXJsczogZmFsc2UsXHJcbiAgICAgICAgbGFuZ3VhZ2U6IGxhbmcsXHJcbiAgICAgICAgZmlsZV9waWNrZXJfY2FsbGJhY2s6IGZ1bmN0aW9uIChjYWxsYmFjaywgdmFsdWUsIG1ldGEpIHtcclxuICAgICAgICAgICAgaWYgKG1ldGEuZmlsZXR5cGUgPT0gJ2ZpbGUnKSB7XHJcbiAgICAgICAgICAgICAgICBpbnB1dC5hY2NlcHQgPSAnLnBkZiwgLmRvYywgLnhscywgLnBwdCwgLmRvY3gsIC54bHN4LCAucHB0eCwgLnBuZywgLmpwZywgLnJhciwgLnppcCwgLjd6LCAubXAzLCAubXA0LCAuYXZpLCAubW92JztcclxuICAgICAgICAgICAgICAgIHBpY2tlckNhbGxiYWNrKGNhbGxiYWNrKTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgLy8gUHJvdmlkZSBpbWFnZSBhbmQgYWx0IHRleHQgZm9yIHRoZSBpbWFnZSBkaWFsb2dcclxuICAgICAgICAgICAgaWYgKG1ldGEuZmlsZXR5cGUgPT0gJ2ltYWdlJykge1xyXG4gICAgICAgICAgICAgICAgaW5wdXQuYWNjZXB0ID0gJy5wbmcsIC5qcGcsIC5qcGVnLCAuZ2lmJztcclxuICAgICAgICAgICAgICAgIHBpY2tlckNhbGxiYWNrKGNhbGxiYWNrKTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgLy8gUHJvdmlkZSBhbHRlcm5hdGl2ZSBzb3VyY2UgYW5kIHBvc3RlZCBmb3IgdGhlIG1lZGlhIGRpYWxvZ1xyXG4gICAgICAgICAgICBpZiAobWV0YS5maWxldHlwZSA9PSAnbWVkaWEnKSB7XHJcbiAgICAgICAgICAgICAgICBpbnB1dC5hY2NlcHQgPSAnLm1wNCwgLmF2aSwgLm1vdic7XHJcbiAgICAgICAgICAgICAgICBwaWNrZXJDYWxsYmFjayhjYWxsYmFjayk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG4gICAgICAgIHNldHVwOiBmdW5jdGlvbiAoZWRpdG9yKSB7XHJcbiAgICAgICAgICAgIGVkaXRvci5vbignY2hhbmdlJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgZWRpdG9yLnNhdmUoKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcblxyXG4gICAgZnVuY3Rpb24gcGlja2VyQ2FsbGJhY2soY2FsbGJhY2spIHtcclxuICAgICAgICBpbnB1dC5jbGljaygpO1xyXG4gICAgICAgIGlucHV0Lm9uY2hhbmdlID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBsZXQgZmQgPSBuZXcgRm9ybURhdGEoKTtcclxuICAgICAgICAgICAgbGV0IGZpbGUgPSBpbnB1dC5maWxlc1swXTtcclxuICAgICAgICAgICAgZmQuYXBwZW5kKCdmaWxlJywgZmlsZSk7XHJcbiAgICAgICAgICAgIGxldCBhamF4VXBsb2FkID0gJC5hamF4KHtcclxuICAgICAgICAgICAgICAgIHhocjogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCB4aHIgPSBuZXcgd2luZG93LlhNTEh0dHBSZXF1ZXN0KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgeGhyLnVwbG9hZC5hZGRFdmVudExpc3RlbmVyKFwicHJvZ3Jlc3NcIiwgZnVuY3Rpb24gKGV2dCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoZXZ0Lmxlbmd0aENvbXB1dGFibGUpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCBwZXJjZW50Q29tcGxldGUgPSAoKGV2dC5sb2FkZWQgLyBldnQudG90YWwpICogMTAwKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByb2dyZXNzQmFyLnN0eWxlLndpZHRoID0gcGVyY2VudENvbXBsZXRlICsgJyUnO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfSwgZmFsc2UpO1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB4aHI7XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgdXJsOiBiYXNlVXJsICsgbWV0aG9kLFxyXG4gICAgICAgICAgICAgICAgdHlwZTogJ1BPU1QnLFxyXG4gICAgICAgICAgICAgICAgcHJvY2Vzc0RhdGE6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgY29udGVudFR5cGU6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgZGF0YTogZmQsXHJcbiAgICAgICAgICAgICAgICBiZWZvcmVTZW5kOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcHJvZ3Jlc3NNc2dFbC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xyXG4gICAgICAgICAgICAgICAgICAgIHByb2dyZXNzQmFyLnN0eWxlLndpZHRoID0gMDtcclxuICAgICAgICAgICAgICAgICAgICBjYW5jZWxVcGxvYWRCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBhYm9ydFVwbG9hZCk7XHJcbiAgICAgICAgICAgICAgICAgICAgJC5mYW5jeWJveC5vcGVuKHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc3JjOiAnIycgKyBwcm9ncmVzc01vZGFsLmlkLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB0b3VjaDogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNtYWxsQnRuOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgYnV0dG9uczogW10sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsaWNrU2xpZGU6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBjbGlja091dHNpZGU6IGZhbHNlXHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgZXJyb3I6IGZ1bmN0aW9uKHJlc3BvbnNlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UpO1xyXG4gICAgICAgICAgICAgICAgICAgIGlucHV0LnZhbHVlID0gJyc7XHJcbiAgICAgICAgICAgICAgICAgICAgcHJvZ3Jlc3NCYXIuc3R5bGUud2lkdGggPSAwO1xyXG4gICAgICAgICAgICAgICAgICAgIHByb2dyZXNzTXNnRWwuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XHJcbiAgICAgICAgICAgICAgICAgICAgcHJvZ3Jlc3NNc2dFbC5pbm5lckhUTUwgPSB2b2NhYnVsYXJ5W2xhbmddLmZhaWw7XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKHJlc3BvbnNlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2soYmFzZVVybCArIHJlc3BvbnNlLmxvY2F0aW9uLCB7fSk7XHJcbiAgICAgICAgICAgICAgICAgICAgaW5wdXQudmFsdWUgPSAnJztcclxuICAgICAgICAgICAgICAgICAgICBwYXJlbnQualF1ZXJ5LmZhbmN5Ym94LmdldEluc3RhbmNlKCkuY2xvc2UoKTtcclxuICAgICAgICAgICAgICAgICAgICBjYW5jZWxVcGxvYWRCdG4ucmVtb3ZlRXZlbnRMaXN0ZW5lcignY2xpY2snLCBhYm9ydFVwbG9hZCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgZnVuY3Rpb24gYWJvcnRVcGxvYWQoKSB7XHJcbiAgICAgICAgICAgICAgICBhamF4VXBsb2FkLmFib3J0KCk7XHJcbiAgICAgICAgICAgICAgICBpbnB1dC52YWx1ZSA9ICcnO1xyXG4gICAgICAgICAgICAgICAgJC5mYW5jeWJveC5jbG9zZSgpO1xyXG4gICAgICAgICAgICAgICAgcHJvZ3Jlc3NCYXIuc3R5bGUud2lkdGggPSAwO1xyXG4gICAgICAgICAgICAgICAgY2FuY2VsVXBsb2FkQnRuLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgYWJvcnRVcGxvYWQpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfTtcclxuICAgIH1cclxufVxyXG5cclxuY29uc3Qgc2VsZWN0aXplU2luZ2xlT3B0aW9ucyA9IHtcclxuICAgIGFsbG93RW1wdHlPcHRpb246IHRydWUsXHJcbiAgICBvbkNoYW5nZTogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMuJGlucHV0WzBdLmRpc3BhdGNoRXZlbnQoY2hhbmdlRXZlbnQpO1xyXG4gICAgfVxyXG59O1xyXG5jb25zdCBzZWxlY3RpemVNdWx0aXBsZU9wdGlvbnMgPSB7XHJcbiAgICBhbGxvd0VtcHR5T3B0aW9uOiB0cnVlLFxyXG4gICAgcGx1Z2luczogWydyZW1vdmVfYnV0dG9uJywgJ3NpbGVudF9yZW1vdmUnLCAnc3RvcF9iYWNrc3BhY2VfZGVsZXRlJ10sXHJcbiAgICBvbkNoYW5nZTogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGlmICh0aGlzLiRpbnB1dFswXS5hdHRyaWJ1dGVzLnBsYWNlaG9sZGVyKSB7XHJcbiAgICAgICAgICAgIHRoaXMuJGNvbnRyb2xfaW5wdXRbMF0ucGxhY2Vob2xkZXIgPSB0aGlzLiRpbnB1dFswXS5hdHRyaWJ1dGVzLnBsYWNlaG9sZGVyLnZhbHVlXHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuJGlucHV0WzBdLmRpc3BhdGNoRXZlbnQoY2hhbmdlRXZlbnQpO1xyXG4gICAgfVxyXG59O1xyXG5cclxuZnVuY3Rpb24gc2VsZWN0aXplUmVndWxhckluaXQoKSB7XHJcbiAgICAkKCcuc2VsZWN0aXplLXJlZ3VsYXI6bm90KFttdWx0aXBsZV0pOm5vdCguc2VsZWN0aXplZCknKS5zZWxlY3RpemUoc2VsZWN0aXplU2luZ2xlT3B0aW9ucyk7XHJcblxyXG4gICAgJCgnLnNlbGVjdGl6ZS1yZWd1bGFyW211bHRpcGxlXTpub3QoLnNlbGVjdGl6ZWQpJykuc2VsZWN0aXplKHNlbGVjdGl6ZU11bHRpcGxlT3B0aW9ucyk7XHJcbn07XHJcblxyXG4vL0RhdGVwaWNrZXIgc2V0dGluZ3NcclxuJC5mbi5kYXRlcGlja2VyLmxhbmd1YWdlWydlbiddID0ge1xyXG4gICAgZGF5czogWydTdW5kYXknLCAnTW9uZGF5JywgJ1R1ZXNkYXknLCAnV2VkbmVzZGF5JywgJ1RodXJzZGF5JywgJ0ZyaWRheScsICdTYXR1cmRheSddLFxyXG4gICAgZGF5c1Nob3J0OiBbJ1N1bicsICdNb24nLCAnVHVlJywgJ1dlZCcsICdUaHUnLCAnRnJpJywgJ1NhdCddLFxyXG4gICAgZGF5c01pbjogWydTdScsICdNbycsICdUdScsICdXZScsICdUaCcsICdGcicsICdTYSddLFxyXG4gICAgbW9udGhzOiBbJ0phbnVhcnknLCAnRmVicnVhcnknLCAnTWFyY2gnLCAnQXByaWwnLCAnTWF5JywgJ0p1bmUnLCAnSnVseScsICdBdWd1c3QnLCAnU2VwdGVtYmVyJywgJ09jdG9iZXInLCAnTm92ZW1iZXInLCAnRGVjZW1iZXInXSxcclxuICAgIG1vbnRoc1Nob3J0OiBbJ0phbicsICdGZWInLCAnTWFyJywgJ0FwcicsICdNYXknLCAnSnVuJywgJ0p1bCcsICdBdWcnLCAnU2VwJywgJ09jdCcsICdOb3YnLCAnRGVjJ10sXHJcbiAgICB0b2RheTogJ1RvZGF5JyxcclxuICAgIGNsZWFyOiAnQ2xlYXInLFxyXG4gICAgZGF0ZUZvcm1hdDogJ2RkLm1tLnl5eXknLFxyXG4gICAgdGltZUZvcm1hdDogJ2hoOmlpIGFhJyxcclxuICAgIGZpcnN0RGF5OiAwXHJcbn07XHJcbiQuZm4uZGF0ZXBpY2tlci5sYW5ndWFnZVsna2snXSA9IHtcclxuICAgIGRheXM6IFsn0JbQtdC60YHQtdC90LHRlicsICfQlNKv0LnRgdC10L3QsdGWJywgJ9Ch0LXQudGB0LXQvdCx0ZYnLCAn0KHTmdGA0YHQtdC90LHRlicsICfQkdC10LnRgdC10L3QsdGWJywgJ9CW0rHQvNCwJywgJ9Ch0LXQvdCx0ZYnXSxcclxuICAgIGRheXNTaG9ydDogWyfQltC10LonLCAn0JTSr9C5JywgJ9Ch0LXQuScsICfQodOZ0YAnLCAn0JHQtdC5JywgJ9CW0rHQvCcsICfQodC10L0nXSxcclxuICAgIGRheXNNaW46IFsn0JbQtScsICfQlNKvJywgJ9Ch0LUnLCAn0KHTmScsICfQkdC1JywgJ9CW0rEnLCAn0KHQtSddLFxyXG4gICAgbW9udGhzOiBbJ9Ka0LDSo9GC0LDRgCcsICfQkNKb0L/QsNC9JywgJ9Cd0LDRg9GA0YvQtycsICfQodOZ0YPRltGAJywgJ9Cc0LDQvNGL0YAnLCAn0JzQsNGD0YHRi9C8JywgJ9Co0ZbQu9C00LUnLCAn0KLQsNC80YvQtycsICfSmtGL0YDQutKv0LnQtdC6JywgJ9Ka0LDQt9Cw0L0nLCAn0prQsNGA0LDRiNCwJywgJ9CW0LXQu9GC0L7Sm9GB0LDQvSddLFxyXG4gICAgbW9udGhzU2hvcnQ6IFsn0prQsNKjJywgJ9CQ0pvQvycsICfQndCw0YMnLCAn0KHTmdGDJywgJ9Cc0LDQvCcsICfQnNCw0YMnLCAn0KjRltC7JywgJ9Ci0LDQvCcsICfSmtGL0YAnLCAn0prQsNC3JywgJ9Ka0LDRgCcsICfQltC10LsnXSxcclxuICAgIHRvZGF5OiAn0JHSr9Cz0ZbQvScsXHJcbiAgICBjbGVhcjogJ9Ci0LDQt9Cw0LvQsNGDJyxcclxuICAgIGRhdGVGb3JtYXQ6ICdkZC5tbS55eXl5JyxcclxuICAgIHRpbWVGb3JtYXQ6ICdoaDppaSBhYScsXHJcbiAgICBmaXJzdERheTogMFxyXG59O1xyXG4kLmZuLmRhdGVwaWNrZXIubGFuZ3VhZ2VbJ3J1J10gPSB7XHJcbiAgICBkYXlzOiBbJ9CS0L7RgdC60YDQtdGB0LXQvdGM0LUnLCAn0J/QvtC90LXQtNC10LvRjNC90LjQuicsICfQktGC0L7RgNC90LjQuicsICfQodGA0LXQtNCwJywgJ9Cn0LXRgtCy0LXRgNCzJywgJ9Cf0Y/RgtC90LjRhtCwJywgJ9Ch0YPQsdCx0L7RgtCwJ10sXHJcbiAgICBkYXlzU2hvcnQ6IFsn0JLQvtGBJywgJ9Cf0L7QvScsICfQktGC0L4nLCAn0KHRgNC1JywgJ9Cn0LXRgicsICfQn9GP0YInLCAn0KHRg9CxJ10sXHJcbiAgICBkYXlzTWluOiBbJ9CS0YEnLCAn0J/QvScsICfQktGCJywgJ9Ch0YAnLCAn0KfRgicsICfQn9GCJywgJ9Ch0LEnXSxcclxuICAgIG1vbnRoczogWyfQr9C90LLQsNGA0YwnLCAn0KTQtdCy0YDQsNC70YwnLCAn0JzQsNGA0YInLCAn0JDQv9GA0LXQu9GMJywgJ9Cc0LDQuScsICfQmNGO0L3RjCcsICfQmNGO0LvRjCcsICfQkNCy0LPRg9GB0YInLCAn0KHQtdC90YLRj9Cx0YDRjCcsICfQntC60YLRj9Cx0YDRjCcsICfQndC+0Y/QsdGA0YwnLCAn0JTQtdC60LDQsdGA0YwnXSxcclxuICAgIG1vbnRoc1Nob3J0OiBbJ9Cv0L3QsicsICfQpNC10LInLCAn0JzQsNGAJywgJ9CQ0L/RgCcsICfQnNCw0LknLCAn0JjRjtC9JywgJ9CY0Y7QuycsICfQkNCy0LMnLCAn0KHQtdC9JywgJ9Ce0LrRgicsICfQndC+0Y8nLCAn0JTQtdC6J10sXHJcbiAgICB0b2RheTogJ9Ch0LXQs9C+0LTQvdGPJyxcclxuICAgIGNsZWFyOiAn0J7Rh9C40YHRgtC40YLRjCcsXHJcbiAgICBkYXRlRm9ybWF0OiAnZGQubW0ueXl5eScsXHJcbiAgICB0aW1lRm9ybWF0OiAnaGg6aWkgYWEnLFxyXG4gICAgZmlyc3REYXk6IDBcclxufTtcclxuIl0sImZpbGUiOiJzY3JpcHRzLmpzIn0=
