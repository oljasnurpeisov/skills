let changeEvent=new Event("change");$(function(){let a=window.Laravel.lang;$(".header-dropdown__title").click(function(){let a=$(this).closest(".header-dropdown");a.hasClass("opened")?a.removeClass("opened"):($(".header-dropdown.opened").removeClass("opened"),a.addClass("opened"))}),$(document).click(function(a){!$(a.target).closest(".header-dropdown").length&&$(".header-dropdown").hasClass("opened")&&$(".header-dropdown").removeClass("opened")}),$(".mob-overlay-btn").click(function(){let a=$(this).data("target");$("#"+a).addClass("opened"),bodyUnscrollable()}),$(".mob-overlay__close").click(function(a){a.preventDefault(),$(this).closest(".mob-overlay").removeClass("opened"),bodyScrollable()}),$("[data-fancybox]").click(function(a){a.preventDefault();let b=$(this).attr("href"),c=$(this).data("options");$.fancybox.getInstance()?($.fancybox.getInstance("close"),setTimeout(function(){$.fancybox.open({src:b,touch:!1,...c})},380)):$.fancybox.open({src:b,touch:!1,...c})}),$(".tabs-links a").click(function(){let a=$(this).parent(),b=$(this).closest(".tabs"),c=b.find(".tabs-contents>div").eq(a.index());if(b.find(".tabs-contents>div.active").removeClass("active"),c.addClass("active"),a.addClass("active").siblings(".active").removeClass("active"),1025>$(window).width()){let a=$(this).closest(".mobile-dropdown"),b=$(".mobile-dropdown__title",a);a.removeClass("opened"),b.hasClass("dynamic")&&b.html($(this).html())}}),document.querySelectorAll(".dropzone-multiple").forEach(function(a){let b=a.dataset.url,c=+a.dataset.maxfiles,d=+a.dataset.maxsize,e=a.dataset.acceptedfiles,f=new CustomDropzone(a,b,c,d,e,"image/*"===e)}),document.querySelectorAll(".dropzone-avatar").forEach(function(a){let b="#"+a.id,c=a.dataset.url,d=+a.dataset.maxsize,e=a.dataset.acceptedfiles,f=new AvatarDropzone(b,c,d,e)}),$(".mobile-dropdown__title").click(function(){let a=$(this).closest(".mobile-dropdown");a.hasClass("opened")?a.removeClass("opened"):($(".mobile-dropdown.opened").removeClass("opened"),a.addClass("opened"))}),$(document).click(function(a){!$(a.target).closest(".mobile-dropdown").length&&$(".mobile-dropdown").hasClass("opened")&&$(".mobile-dropdown").removeClass("opened")}),document.querySelectorAll(".single-range-slider").forEach(function(a){let b=a.parentElement,c=+a.min,d=+a.max,e=+a.step,f=+a.value,g=a.dataset.decimals?+a.dataset.decimals:0;noUiSlider.create(b,{start:f,connect:"lower",tooltips:!0,step:e,range:{min:c,max:d},format:{to:function(a){return(+a).toFixed(g)},from:function(a){return(+a).toFixed(g)}}}),b.noUiSlider.on("change",function(){a.value=b.noUiSlider.get(),a.dispatchEvent(changeEvent)})}),document.querySelectorAll("[data-duplicate]").forEach(function(a){let b=document.querySelector("#"+a.dataset.duplicate),c=a.closest(".pull-up").previousElementSibling,d=b.cloneNode(!0);d.value="",a.addEventListener("click",function(b){b.preventDefault();let e=d.cloneNode(!0);e.removeAttribute("required"),e.removeAttribute("id");let f=document.createElement("div");f.className="btn-icon small icon-close";let g=document.createElement("div");g.className="form-group",g.innerHTML=`<div class="input-addon">

                                <div class="addon"></div>
                            </div>
      `;let h=g.querySelector(".addon");if(h.before(e),h.append(f),f.addEventListener("click",function(){g.remove(),a.style.display="inline-flex"}),c.append(g),e.classList.contains("selectize-regular")&&(e.hasAttribute("multiple")?$(`[name="${e.name}"]`).selectize(selectizeMultipleOptions):$(`[name="${e.name}"]`).selectize(selectizeSingleOptions)),e.hasAttribute("data-method")){let a=new ajaxSelect($(`[name="${e.name}"]`).not(".selectized"));a.clear()}a.dataset.maxcount&&c.children.length>=a.dataset.maxcount&&hideEl(a)})}),selectizeRegularInit(),TinyMceInit(".tinymce-here"),TinyMceInit(".tinymce-text-here",!0),document.querySelectorAll("[data-toggle]").forEach(function(a){let b=a.dataset.toggle.split(",");a.addEventListener("change",function(){b.forEach(function(a){toggleEl(document.querySelector("#"+a))})})}),document.querySelectorAll(".topic.spoiler").forEach(function(a){let b=a.querySelector(".topic__header");b.addEventListener("click",function(){a.classList.toggle("collapsed")})}),$(".custom-datepicker").each(function(){let b=$(this).datepicker({language:a,autoClose:!0});$(this).val()&&b.data("datepicker").selectDate(moment($(this).val(),"DD.MM.YYYY").toDate())}),document.querySelectorAll(".removable-items").forEach(function(a){htmlCollectionToArray(a.children).forEach(function(a){let b=a.querySelector(".icon-close");b&&b.addEventListener("click",function(){a.remove()})})}),document.querySelectorAll(".dz-stored").forEach(function(a){let b=a.querySelector(".link.red"),c=a.querySelector(".link.green"),d=a.querySelector("input");b.addEventListener("click",function(){d.setAttribute("disabled","disabled"),hideEl(b),showEl(c)}),c.addEventListener("click",function(){d.removeAttribute("disabled"),hideEl(c),showEl(b)})}),document.querySelectorAll(".accordion").forEach(function(a){let b=a.closest(".accordion-group"),c=!b.classList.contains("independent"),d=a.querySelector(".accordion__header"),e=d.nextElementSibling;d.addEventListener("click",function(){if(c&&!a.classList.contains("active")&&b.querySelector(".accordion.active")){let c=b.querySelector(".accordion.active"),d=c.querySelector(".accordion__header").nextElementSibling;c.classList.remove("active"),d.style.maxHeight=null,d.style.opacity=0,a.classList.add("active"),e.style.maxHeight=e.scrollHeight+"px",e.style.opacity=1}else a.classList.toggle("active"),e.style.maxHeight?(e.style.maxHeight=null,e.style.opacity=0):(e.style.maxHeight=e.scrollHeight+"px",e.style.opacity=1)})}),1024>window.innerWidth&&document.querySelectorAll("[data-toggle-title]").forEach(function(a){let b=document.createElement("div");b.className="toggle-link",b.innerHTML=a.getAttribute("data-toggle-title"),b.addEventListener("click",function(){toggleEl(a)}),a.before(b)}),$.bvi({bvi_target:".bvi-open",bvi_theme:"white",bvi_font:"arial",bvi_font_size:16,bvi_letter_spacing:"normal",bvi_line_height:"normal",bvi_images:!0,bvi_reload:!1,bvi_fixed:!1,bvi_tts:!1,bvi_flash_iframe:!0,bvi_hide:!1})}),$(window).scroll(function(){$(window).scrollTop()>$(".main-wrapper").offset().top?$(".header").addClass("fixed"):$(".header").removeClass("fixed")});function chosenInit(){if($(".chosen").length){let a,b=document.getElementById("lang").value;a="en"==b?"No results found for":"kk"==b?"\u041D\u04D9\u0442\u0438\u0436\u0435\u043B\u0435\u0440 \u0436\u043E\u049B":"\u041D\u0438\u0447\u0435\u0433\u043E \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D\u043E \u043F\u043E \u0437\u0430\u043F\u0440\u043E\u0441\u0443",$(".chosen").chosen({search_contains:!0,no_results_text:a})}}function getScrollbarWidth(){var a=document.createElement("div");a.style.visibility="hidden",a.style.width="100px",a.style.msOverflowStyle="scrollbar",document.body.appendChild(a);var b=a.offsetWidth;a.style.overflow="scroll";var c=document.createElement("div");c.style.width="100%",a.appendChild(c);var d=c.offsetWidth;return a.parentNode.removeChild(a),b-d}function bodyUnscrollable(){if(!$("body").hasClass("no-scroll")){let a=$(window).scrollTop(),b=$("*").filter(function(){return"fixed"==$(this).css("position")});$(".main-wrapper").css("margin-top",-a),$("body").addClass("no-scroll").css("margin-right",getScrollbarWidth()),b.css("margin-right",getScrollbarWidth())}}function bodyScrollable(){if($("body").hasClass("no-scroll")){let a=$(".main-wrapper").css("margin-top").slice(0,-2),b=$("*").filter(function(){return"fixed"==$(this).css("position")});$("body").removeClass("no-scroll").css("margin-right",0),b.css("margin-right",0),$(".main-wrapper").css("margin-top",0),$(window).scrollTop(-a)}}function scrollToBottom(a){let b=document.querySelector(a);b.scrollTop=b.scrollHeight}function renderAuthorStats(a){const b=a.dataset.url;am4core.ready(function(){function c(a){a.dataFields.dateX="date",a.strokeWidth=3,a.minBulletDistance=10,a.tooltip.pointerOrientation="vertical",a.tooltip.background.cornerRadius=20,a.tooltip.background.strokeOpacity=0,a.tooltip.label.minWidth=40,a.tooltip.label.minHeight=40,a.tooltip.label.textAlign="middle",a.tooltip.label.textValign="middle",a.tooltip.getFillFromObject=!1,a.tooltip.background.fill=am4core.color("#f5f5f5"),a.tooltip.autoTextColor=!1,a.tooltip.label.fill=am4core.color("#333")}am4core.useTheme(am4themes_animated);let d=am4core.create(a,am4charts.XYChart);const e=window.Laravel.lang;"ru"===e?d.language.locale=am4lang_ru_RU:"kk"===e&&(d.language.locale=am4lang_ru_RU),$.ajax({url:b,success:function(a){function b(b,c){d.data=a.data.filter(function(a){return Date.parse(a.date)>moment(b,"DD.MM.YYYY").toDate().getTime()&&Date.parse(a.date)<=moment(c,"DD.MM.YYYY").toDate().getTime()})}let f={language:e,autoClose:!0,maxDate:new Date,onSelect:function(){b(g.el.value,h.el.value)}},g=$("[name=\"dateFrom\"]").datepicker(f).data("datepicker"),h=$("[name=\"dateTo\"]").datepicker(f).data("datepicker");const i=a.color1,j=a.color2;d.data=a.data.filter(function(a){return Date.parse(a.date)>=moment(g.el.value,"DD.MM.YYYY").toDate().getTime()&&Date.parse(a.date)<=moment(h.el.value,"DD.MM.YYYY").toDate().getTime()});let k=d.xAxes.push(new am4charts.DateAxis);k.renderer.minGridDistance=50;let l=d.yAxes.push(new am4charts.ValueAxis),m=d.series.push(new am4charts.LineSeries);m.dataFields.valueY="value1",m.stroke=i,m.tooltipText="{value1}",c(m);let n=d.series.push(new am4charts.LineSeries);n.dataFields.valueY="value2",n.stroke=j,n.tooltipText="{value2}",c(n),d.cursor=new am4charts.XYCursor,d.cursor.xAxis=k}})})}function toArray(a){return Array.isArray(a)?a:Array(a)}function htmlCollectionToArray(a){return Array.prototype.slice.call(a)}function hideAllChildren(a){Array.prototype.slice.call(a.children).forEach(function(a){a.style.display="none"})}function showEl(a){a.style.display="block"}function hideEl(a){a.style.display="none"}function toggleEl(a){a.style.display="none"===a.style.display||"none"===window.getComputedStyle(a,null).getPropertyValue("display")?"block":"none"}function returnCheckedRadio(a){return Array.prototype.slice.call(a).find(function(a){return!0===a.checked})}let AvatarDropzone=function(a,b,c,d){const e=document.querySelector(a),f=window.Laravel.lang,g=document.querySelector(a).querySelector(".previews-container"),h=e.querySelector(".avatar-preview").dataset.defaultsrc,i=e.querySelector(".avatar-preview-template"),j=e.querySelector(".avatar-preview"),k=e.querySelector(".avatar-pick"),l=e.querySelector(".avatar-path");let m=null;"ru"===f?m=dropzoneRU:"kk"===f&&(m=dropzoneKK);let n=new Dropzone(a,{url:b,previewTemplate:i.innerHTML,maxFilesize:c,acceptedFiles:d,timeout:18e4,lastFile:null,previewsContainer:g,clickable:[k,j],init:function(){this.on("success",function(a,b){j.src=a.dataURL,l.value=b.location}),this.on("removedfile",function(){j.src=h,l.value=""}),this.on("addedfile",function(a){this.lastFile&&this.removeFile(this.lastFile),this.lastFile=a})},...m});if(""!==g.innerHTML){let a=g.querySelector(".dz-preview"),b=a.querySelector(".dz-filename")?a.querySelector(".dz-filename").textContent:"",c=a.querySelector(".dz-size strong")?a.querySelector(".dz-size strong").textContent:"";g.innerHTML="",n.displayExistingFile({name:b,size:1e3*+c},l.value)}},CustomDropzone=function(a,b,c,d,e,f=!1){const g=a.querySelector(".previews-container"),h=a.querySelector(".dropzone-default__link"),i=a.querySelector("input"),j=window.Laravel.lang;let k=[],l=null,m="Remove";"ru"===j?(l=dropzoneRU,m="\u0423\u0434\u0430\u043B\u0438\u0442\u044C"):"kk"===j&&(l=dropzoneKK,m="\u0416\u043E\u044E");let n=new Dropzone(a,{url:b,paramName:"files[]",clickable:h,maxFiles:c,maxFilesize:d,acceptedFiles:e,thumbnailHeight:null,previewsContainer:g,previewTemplate:`<div class="dz-preview dz-file-preview">
                            <div class="dz-details">
                                ${f?"<img data-dz-thumbnail />":""}
                                <div class="dz-filename"><span data-dz-name></span></div>
                                <div class="dz-size" data-dz-size></div>
                                <div class="dz-progress"><span class="dz-upload" data-dz-uploadprogress></span></div>
                            </div>
                            <div class="alert alert-danger"><span data-dz-errormessage> </span></div>
                            <a href="javascript:undefined;" title="${m}" class="link red" data-dz-remove>${m}</a>
                        </div>`,init:function(){this.on("success",(a,b)=>{k.push(b.filenames+""),i.value=JSON.stringify(k)}),this.on("removedfile",a=>{if(a.xhr){let b=JSON.parse(a.xhr.response).filenames+"";k=k.filter(function(a){return a!==b})}i.value=JSON.stringify(k)})},...l});if(1===c&&""!==g.innerHTML){let a=g.querySelector(".dz-preview"),b=a.querySelector(".dz-filename")?a.querySelector(".dz-filename").textContent:"",c=a.querySelector(".dz-size strong")?a.querySelector(".dz-size strong").textContent:"";g.innerHTML="",n.displayExistingFile({name:b,size:1e3*+c},i.value)}};function TinyMceInit(a,b=!1){function c(a){d.click(),d.onchange=function(){function b(){m.abort(),d.value="",$.fancybox.close(),f.style.width=0,g.removeEventListener("click",b)}let c=new FormData,k=d.files[0];c.append("file",k);let m=$.ajax({xhr:function(){let a=new window.XMLHttpRequest;return a.upload.addEventListener("progress",function(a){if(a.lengthComputable){let b=100*(a.loaded/a.total);f.style.width=b+"%"}},!1),a},url:"/ajaxUploadImageTest",type:"POST",processData:!1,contentType:!1,data:c,beforeSend:function(){h.style.display="none",f.style.width=0,g.addEventListener("click",b),$.fancybox.open({src:"#"+e.id,touch:!1,smallBtn:!1,buttons:[],clickSlide:!1,clickOutside:!1})},error:function(a){console.log(a),d.value="",f.style.width=0,h.style.display="block",h.innerHTML=l[i].fail},success:function(c){a(j+c.location,{}),d.value="",parent.jQuery.fancybox.getInstance().close(),g.removeEventListener("click",b)}})}}let d,e,f,g,h,i=window.Laravel.lang,j="",k="",l={en:{uploadTitle:"File upload",cancel:"Cancel",fail:"Failed to load file"},kk:{uploadTitle:"\u0424\u0430\u0439\u043B \u0436\u04AF\u043A\u0442\u0435\u0443",cancel:"\u0416\u043E\u044E",fail:"\u0424\u0430\u0439\u043B \u0436\u04AF\u043A\u0442\u0435\u043B\u043C\u0435\u0434\u0456"},ru:{uploadTitle:"\u0417\u0430\u0433\u0440\u0443\u0437\u043A\u0430 \u0444\u0430\u0439\u043B\u0430",cancel:"\u041E\u0442\u043C\u0435\u043D\u0430",fail:"\u041D\u0435 \u0443\u0434\u0430\u043B\u043E\u0441\u044C \u0437\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u044C \u0444\u0430\u0439\u043B"}},m=`<div class="text-center">
                                    <h4 class="title-primary">${l[i].uploadTitle}</h4>
                                    <div class="progress-bar"><span></span></div>
                                    <div class="plain-text gray"></div>
                                    <a href="javascript:;" title="Отмена" class="btn">${l[i].cancel}</a>
                                </div>`;b||(k="image media"),document.querySelector("#filePicker")?d=document.querySelector("#filePicker"):(d=document.createElement("input"),d.type="file",d.id="filePicker",d.style.cssText="position: fixed; top: -9999px; left: -9999px; z-index: -1",document.querySelector("body").append(d)),document.querySelector("#progressModal")?e=document.querySelector("#progressModal"):(e=document.createElement("div"),e.id="progressModal",e.innerHTML=m,e.style.display="none",document.querySelector("body").append(e)),f=e.querySelector(".progress-bar span"),g=e.querySelector(".btn"),h=e.querySelector(".plain-text"),h.style.display="none",tinymce.init({selector:a,menubar:!1,plugins:["pageembed  lists link "+k+" table paste code wordcount"],toolbar:"undo redo | formatselect | bold italic link "+k+" | alignleft aligncenter alignright alignjustify | bullist numlist | removeformat | help",images_upload_url:"/ajax_upload_image?_token="+window.Laravel.csrfToken,files_upload_url:"/ajax_upload_file?_token="+window.Laravel.csrfToken,file_picker_types:"file image media",relative_urls:!1,language:i,file_picker_callback:function(a,b,e){"file"==e.filetype&&(d.accept=".pdf, .doc, .xls, .ppt, .docx, .xlsx, .pptx, .png, .jpg, .rar, .zip, .7z, .mp3, .mp4, .avi, .mov",c(a)),"image"==e.filetype&&(d.accept=".png, .jpg, .jpeg, .gif",c(a)),"media"==e.filetype&&(d.accept=".mp4, .avi, .mov",c(a))},setup:function(a){a.on("change",function(){a.save()})}})}const selectizeSingleOptions={allowEmptyOption:!0,onChange:function(){this.$input[0].dispatchEvent(changeEvent)}},selectizeMultipleOptions={allowEmptyOption:!0,plugins:["remove_button","silent_remove","stop_backspace_delete"],onChange:function(){this.$input[0].attributes.placeholder&&(this.$control_input[0].placeholder=this.$input[0].attributes.placeholder.value),this.$input[0].dispatchEvent(changeEvent)}};function selectizeRegularInit(){$(".selectize-regular:not([multiple]):not(.selectized)").selectize(selectizeSingleOptions),$(".selectize-regular[multiple]:not(.selectized)").selectize(selectizeMultipleOptions)}function test(){console.log("1")}
//# sourceMappingURL=data:application/json;charset=utf8;base64,
