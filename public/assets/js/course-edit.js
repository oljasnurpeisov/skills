let courseController=function(a,b){function c(a,b){return{id:a,name:b,order:F.length,lessons:null}}function d(){y.innerHTML="";let b=0,c=0,e=F.sort(function(c,a){return c.order-a.order});e.forEach(function({id:g,name:k,order:r,lessons:s,collapsed:t}){let u=document.createElement("div");if(u.className="topic",t&&u.classList.add("collapsed"),u.innerHTML=`<div class="topic__header">
                                    <div class="title">${k}</div>
                                    <div class="duration"></div>
                                    <div class="edit-buttons">
                                        <a href="#" title="${m}" class="btn-icon small btn-icon--ghost icon-chevron-up"> </a>
                                        <a href="#" title="${o}" class="btn-icon small btn-icon--ghost icon-trash-can"> </a>
                                        <a href="#" title="${n}" class="btn-icon small btn-icon--ghost icon-chevron-down"> </a>
                                        <a href="#" title="${p}" class="btn-icon small btn-icon--ghost icon-edit"> </a>
                                        <a href="${`/${l}/my-courses/course/${a}/theme-${g}/create-lesson`}" title="${q}" class="btn-icon small icon-plus"> </a>
                                    </div>
                                </div>`,u.querySelector(".icon-chevron-up").addEventListener("click",function(a){a.preventDefault(),h(g,-1)}),u.querySelector(".icon-trash-can").addEventListener("click",function(a){a.preventDefault(),G=g,$.fancybox.open({src:A,touch:!1})}),u.querySelector(".icon-chevron-down").addEventListener("click",function(a){a.preventDefault(),h(g,1)}),u.querySelector(".icon-edit").addEventListener("click",function(a){a.preventDefault(),H=g,x.value=k,$.fancybox.open({src:z,touch:!1})}),s){let e=u.querySelector(".title"),h=u.querySelector(".duration"),k=document.createElement("div"),q=0;u.classList.add("spoiler"),k.className="topic__body";let r=s.sort(function(c,a){return c.order-a.order});r.forEach(function({id:c,name:d,order:e,duration:f}){let h=document.createElement("div");h.className="lesson",h.innerHTML=`<div class="title"><a href="${`/${l}/my-courses/course/${a}/theme-${g}/view-lesson-${c}`}" title="${d}">${d}</a></div>
                                      <div class="duration">${j(f)}</div>
                                      <div class="edit-buttons">
                                          <div class="united">
                                              <a href="#" title="${m}" class="btn-icon btn-icon--ghost icon-chevron-up"> </a>
                                              <a href="#" title="${o}" class="btn-icon btn-icon--ghost icon-trash-can"> </a>
                                              <a href="#" title="${n}" class="btn-icon btn-icon--ghost icon-chevron-down"> </a>
                                          </div>
                                          <a href="${`/${l}/my-courses/course/${a}/theme-${g}/edit-lesson-${c}`}" title="${p}" class="btn-icon btn-icon--ghost icon-edit"> </a>
                                      </div>`,h.querySelector(".icon-chevron-up").addEventListener("click",function(a){a.preventDefault(),i(g,c,r,-1)}),h.querySelector(".icon-trash-can").addEventListener("click",function(a){a.preventDefault(),I=c,G=g,$.fancybox.open({src:B,touch:!1})}),h.querySelector(".icon-chevron-down").addEventListener("click",function(a){a.preventDefault(),i(g,c,r,1)}),q+=f,k.append(h),b++}),e.addEventListener("click",function(){u.classList.toggle("collapsed");let a=f(g,F);a.collapsed=!a.collapsed,d()}),h.innerHTML=j(q),c+=q,u.append(k)}y.append(u)}),D.innerHTML=b,C.innerHTML=j(c)}function e(a,b){let c=document.querySelector(E),d=c.querySelector(".title-primary"),e=c.querySelector(".plain-text");d.innerHTML=a,e.innerHTML=b,$.fancybox.open({src:E,touch:!1})}function f(a,b){return b.find(function(b){return b.id===+a})}function g(a,b){return b.findIndex(function(b){return b.id===+a})}function h(b,c){let e=f(b,F),g=F.find(function(a){return 1==(a.order-e.order)*c});g&&r.swapTopicsOrders(a,e.id,g.id).then(function(){e.order+=c,g.order=e.order-c,d()})}function i(b,c,e,g){let h=f(c,e),i=e.find(function(a){return 1==(a.order-h.order)*g});i&&r.swapLessonsOrders(a,b,h.id,i.id).then(function(){h.order+=g,i.order=h.order-g,d()})}function j(a){let b=parseInt(a/60),c=k(b),d=k(a%60);return c+":"+d}function k(a){return 1===(a+"").length?"0"+(a+""):a+""}const l=window.Laravel.lang,{upText:m,downText:n,deleteText:o,editText:p,addText:q}=b,r=new dataService,s=document.querySelector("#addTopicBtn"),t=document.querySelector("#editTopicBtn"),u=document.querySelector("#removeTopicBtn"),v=document.querySelector("#removeLessonBtn"),w=document.querySelector("#newTopicNameInput"),x=document.querySelector("#editTopicNameInput"),y=document.querySelector("#courseDataContainer"),z="#editTopicModal",A="#removeTopicModal",B="#removeLessonModal",C=document.querySelector("#courseDuration"),D=document.querySelector("#lessonsCount"),E="#modalMsg";let F=[],G=null,H=null,I=null,J=50;this.initComponent=function(){s.addEventListener("click",function(b){b.preventDefault();let e=w.value;return e?void(w.parentElement.classList.remove("error"),r.addTopic(a,e).then(function({id:a,name:b}){F.push(c(a+J,b)),J+=1,parent.jQuery.fancybox.getInstance().close(),d()})):(w.parentElement.classList.add("error"),!1)}),t.addEventListener("click",function(b){b.preventDefault();let c=x.value;return c?void(w.parentElement.classList.remove("error"),r.editTopic(a,H,c).then(function({msgTitle:a,msgText:b}){parent.jQuery.fancybox.getInstance().close(),setTimeout(function(){e(a,b)},380);let g=f(H,F);g.name=c,d()})):(w.parentElement.classList.add("error"),!1)}),u.addEventListener("click",function(b){b.preventDefault(),r.removeTopic(a,G).then(function({msgTitle:a,msgText:b}){parent.jQuery.fancybox.getInstance().close(),setTimeout(function(){e(a,b)},380);let c=g(G,F);F.splice(c,1);for(let d=c;d<F.length;d++)F[d].order--;d()})}),v.addEventListener("click",function(b){b.preventDefault(),r.removeLesson(a,G,I).then(function({msgTitle:a,msgText:b}){parent.jQuery.fancybox.getInstance().close(),setTimeout(function(){e(a,b)},380);let c=f(G,F).lessons,h=g(I,c);c.splice(h,1);for(let d=h;d<c.length;d++)c[d].order--;d()})}),r.getCourseData(a).then(function(a){F=[...a],d()})},this.renderData=function(){d()}};
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvdXJzZS1lZGl0LmpzIl0sIm5hbWVzIjpbImNvdXJzZUNvbnRyb2xsZXIiLCJjb3Vyc2VJZCIsInRleHREYXRhIiwiYWRkVG9waWMiLCJpZCIsIm5hbWUiLCJvcmRlciIsImNvdXJzZURhdGEiLCJsZW5ndGgiLCJsZXNzb25zIiwicmVuZGVyRGF0YSIsImNvdXJzZURhdGFDb250YWluZXIiLCJpbm5lckhUTUwiLCJsZXNzb25zQ291bnQiLCJjb3Vyc2VEdXJhdGlvbiIsImNvdXJzZURhdGFTb3J0ZWQiLCJzb3J0IiwiYSIsImIiLCJmb3JFYWNoIiwidG9waWNJZCIsInRvcGljTmFtZSIsInRvcGljT3JkZXIiLCJjb2xsYXBzZWQiLCJ0b3BpY1dyYXBwZXIiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJjbGFzc05hbWUiLCJjbGFzc0xpc3QiLCJhZGQiLCJ1cFRleHQiLCJkZWxldGVUZXh0IiwiZG93blRleHQiLCJlZGl0VGV4dCIsImxhbmciLCJhZGRUZXh0IiwicXVlcnlTZWxlY3RvciIsImFkZEV2ZW50TGlzdGVuZXIiLCJlIiwicHJldmVudERlZmF1bHQiLCJzd2FwVG9waWNzIiwiY3VycmVudFJlbW92ZVRvcGljSWQiLCIkIiwiZmFuY3lib3giLCJvcGVuIiwic3JjIiwicmVtb3ZlVG9waWNNb2RhbElkIiwidG91Y2giLCJjdXJyZW50RWRpdFRvcGljSWQiLCJlZGl0VG9waWNOYW1lSW5wdXQiLCJ2YWx1ZSIsImVkaXRUb3BpY01vZGFsSWQiLCJ0b3BpY1RpdGxlIiwidG9waWNEdXJhdGlvbkVsIiwidG9waWNCb2R5IiwidG9waWNEdXJhdGlvbiIsImxlc3NvbnNTb3J0ZWQiLCJsZXNzb25JZCIsImxlc3Nvbk5hbWUiLCJsZXNzb25PcmRlciIsImR1cmF0aW9uIiwibGVzc29uRHVyYXRpb24iLCJsZXNzb25XcmFwcGVyIiwibWludXRlc1RvSG91cnMiLCJzd2FwTGVzc29ucyIsImN1cnJlbnRSZW1vdmVMZXNzb25JZCIsInJlbW92ZUxlc3Nvbk1vZGFsSWQiLCJhcHBlbmQiLCJ0b2dnbGUiLCJ0b3BpY09iaiIsImdldE9iamVjdEJ5SWQiLCJsZXNzb25zQ291bnRFbCIsImNvdXJzZUR1cmF0aW9uRWwiLCJzaG93TW9kYWxNc2ciLCJ0aXRsZSIsInRleHQiLCJtb2RhbCIsIm1vZGFsTXNnSWQiLCJtb2RhbFRpdGxlIiwibW9kYWxUZXh0IiwiZGF0YSIsImZpbmQiLCJpdGVtIiwiZ2V0SW5kZXhCeUlkIiwiZmluZEluZGV4IiwiZGlyZWN0aW9uIiwiY3VycmVudCIsInN3YXBJdGVtIiwidG1wRGF0YVNlcnZpY2UiLCJzd2FwVG9waWNzT3JkZXJzIiwidGhlbiIsInN3YXBMZXNzb25zT3JkZXJzIiwibWludXRlcyIsImhvdXJzIiwicGFyc2VJbnQiLCJmb3JtYXR0ZWRIb3VycyIsImFkZFplcm9Ub051bWJlciIsImZvcm1hdHRlZE1pbnV0ZXMiLCJudW1iZXIiLCJ3aW5kb3ciLCJMYXJhdmVsIiwiZGF0YVNlcnZpY2UiLCJhZGRUb3BpY0J0biIsImVkaXRUb3BpY0J0biIsInJlbW92ZVRvcGljQnRuIiwicmVtb3ZlTGVzc29uQnRuIiwibmV3VG9waWNOYW1lSW5wdXQiLCJpZEluY3JlbWVudCIsImluaXRDb21wb25lbnQiLCJwYXJlbnRFbGVtZW50IiwicmVtb3ZlIiwicHVzaCIsInBhcmVudCIsImpRdWVyeSIsImdldEluc3RhbmNlIiwiY2xvc2UiLCJlZGl0VG9waWMiLCJtc2dUaXRsZSIsIm1zZ1RleHQiLCJzZXRUaW1lb3V0IiwiY3VycmVudE9iaiIsInJlbW92ZVRvcGljIiwiY3VycmVudE9iakluZGV4Iiwic3BsaWNlIiwiaSIsInJlbW92ZUxlc3NvbiIsImdldENvdXJzZURhdGEiXSwibWFwcGluZ3MiOiJBQUFBLEdBQUlBLENBQUFBLGdCQUFnQixDQUFHLFNBQVVDLENBQVYsQ0FBb0JDLENBQXBCLENBQThCLENBMEJuRCxRQUFTQyxDQUFBQSxDQUFULENBQWtCQyxDQUFsQixDQUFzQkMsQ0FBdEIsQ0FBNEIsQ0FDMUIsTUFBTyxDQUNM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SCxJQUFLLEdBQUlFLENBQUFBLENBQUMsQ0FBR0YsQ0FBYixDQUE4QkUsQ0FBQyxDQUFHbkgsQ0FBTyxDQUFDRCxNQUExQyxDQUFrRG9ILENBQUMsRUFBbkQsQ0FDRW5ILENBQU8sQ0FBQ21ILENBQUQsQ0FBUCxDQUFXdEgsS0FBWCxHQUdGSSxDQUFVLEVBQ1gsQ0FsQkQsQ0FtQkQsQ0FyQkQsQ0FyRStCLENBNEYvQjhFLENBQWMsQ0FBQ3NDLGFBQWYsQ0FBNkI3SCxDQUE3QixFQUF1Q3lGLElBQXZDLENBQTRDLFNBQVVWLENBQVYsQ0FBZ0IsQ0FDMUR6RSxDQUFVLENBQUcsQ0FBQyxHQUFHeUUsQ0FBSixDQUQ2QyxDQUUxRHRFLENBQVUsRUFDWCxDQUhELENBSUQsQ0F6VmtELENBMlZuRCxLQUFLQSxVQUFMLENBQWtCLFVBQVksQ0FDNUJBLENBQVUsRUFDWCxDQUNGLENBOVZEIiwic291cmNlc0NvbnRlbnQiOlsibGV0IGNvdXJzZUNvbnRyb2xsZXIgPSBmdW5jdGlvbiAoY291cnNlSWQsIHRleHREYXRhKSB7XHJcbiAgY29uc3QgbGFuZyA9IHdpbmRvdy5MYXJhdmVsLmxhbmc7XHJcbiAgY29uc3Qge3VwVGV4dCwgZG93blRleHQsIGRlbGV0ZVRleHQsIGVkaXRUZXh0LCBhZGRUZXh0fSA9IHRleHREYXRhO1xyXG4gIGNvbnN0IHRtcERhdGFTZXJ2aWNlID0gbmV3IGRhdGFTZXJ2aWNlKCk7XHJcbiAgY29uc3QgYWRkVG9waWNCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjYWRkVG9waWNCdG4nKTtcclxuICBjb25zdCBlZGl0VG9waWNCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjZWRpdFRvcGljQnRuJyk7XHJcbiAgY29uc3QgcmVtb3ZlVG9waWNCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjcmVtb3ZlVG9waWNCdG4nKTtcclxuICBjb25zdCByZW1vdmVMZXNzb25CdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjcmVtb3ZlTGVzc29uQnRuJyk7XHJcbiAgY29uc3QgbmV3VG9waWNOYW1lSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjbmV3VG9waWNOYW1lSW5wdXQnKTtcclxuICBjb25zdCBlZGl0VG9waWNOYW1lSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjZWRpdFRvcGljTmFtZUlucHV0Jyk7XHJcbiAgY29uc3QgY291cnNlRGF0YUNvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNjb3Vyc2VEYXRhQ29udGFpbmVyJyk7XHJcbiAgY29uc3QgZWRpdFRvcGljTW9kYWxJZCA9ICcjZWRpdFRvcGljTW9kYWwnO1xyXG4gIGNvbnN0IHJlbW92ZVRvcGljTW9kYWxJZCA9ICcjcmVtb3ZlVG9waWNNb2RhbCc7XHJcbiAgY29uc3QgcmVtb3ZlTGVzc29uTW9kYWxJZCA9ICcjcmVtb3ZlTGVzc29uTW9kYWwnO1xyXG4gIGNvbnN0IGNvdXJzZUR1cmF0aW9uRWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjY291cnNlRHVyYXRpb24nKTtcclxuICBjb25zdCBsZXNzb25zQ291bnRFbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNsZXNzb25zQ291bnQnKTtcclxuICBjb25zdCBtb2RhbE1zZ0lkID0gJyNtb2RhbE1zZyc7XHJcblxyXG4gIGxldCBjb3Vyc2VEYXRhID0gW107XHJcblxyXG4gIGxldCBjdXJyZW50UmVtb3ZlVG9waWNJZCA9IG51bGw7XHJcbiAgbGV0IGN1cnJlbnRFZGl0VG9waWNJZCA9IG51bGw7XHJcbiAgbGV0IGN1cnJlbnRSZW1vdmVMZXNzb25JZCA9IG51bGw7XHJcblxyXG4gIGxldCBpZEluY3JlbWVudCA9IDUwOyAvLyByZW1vdmUgb24gcHJvZHVjdGlvblxyXG5cclxuICBmdW5jdGlvbiBhZGRUb3BpYyhpZCwgbmFtZSkge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgaWQsXHJcbiAgICAgIG5hbWUsXHJcbiAgICAgIG9yZGVyOiBjb3Vyc2VEYXRhLmxlbmd0aCxcclxuICAgICAgbGVzc29uczogbnVsbFxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gcmVuZGVyRGF0YSgpIHtcclxuICAgIGNvdXJzZURhdGFDb250YWluZXIuaW5uZXJIVE1MID0gJyc7XHJcblxyXG4gICAgbGV0IGxlc3NvbnNDb3VudCA9IDAsXHJcbiAgICAgIGNvdXJzZUR1cmF0aW9uID0gMDtcclxuXHJcbiAgICBsZXQgY291cnNlRGF0YVNvcnRlZCA9IGNvdXJzZURhdGEuc29ydChmdW5jdGlvbiAoYSwgYikge1xyXG4gICAgICByZXR1cm4gYS5vcmRlciAtIGIub3JkZXJcclxuICAgIH0pO1xyXG5cclxuICAgIGNvdXJzZURhdGFTb3J0ZWQuZm9yRWFjaChmdW5jdGlvbiAoe2lkOiB0b3BpY0lkLCBuYW1lOiB0b3BpY05hbWUsIG9yZGVyOiB0b3BpY09yZGVyLCBsZXNzb25zLCBjb2xsYXBzZWR9KSB7XHJcbiAgICAgIGxldCB0b3BpY1dyYXBwZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgICAgbGV0IGxlc3NvbkNyZWF0ZUxpbmsgPSBgLyR7bGFuZ30vbXktY291cnNlcy9jb3Vyc2UvJHtjb3Vyc2VJZH0vdGhlbWUtJHt0b3BpY0lkfS9jcmVhdGUtbGVzc29uYDtcclxuXHJcbiAgICAgIHRvcGljV3JhcHBlci5jbGFzc05hbWUgPSAndG9waWMnO1xyXG5cclxuICAgICAgaWYgKGNvbGxhcHNlZCkge1xyXG4gICAgICAgIHRvcGljV3JhcHBlci5jbGFzc0xpc3QuYWRkKCdjb2xsYXBzZWQnKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgdG9waWNXcmFwcGVyLmlubmVySFRNTCA9IGA8ZGl2IGNsYXNzPVwidG9waWNfX2hlYWRlclwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidGl0bGVcIj4ke3RvcGljTmFtZX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImR1cmF0aW9uXCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJlZGl0LWJ1dHRvbnNcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9XCIjXCIgdGl0bGU9XCIke3VwVGV4dH1cIiBjbGFzcz1cImJ0bi1pY29uIHNtYWxsIGJ0bi1pY29uLS1naG9zdCBpY29uLWNoZXZyb24tdXBcIj4gPC9hPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj1cIiNcIiB0aXRsZT1cIiR7ZGVsZXRlVGV4dH1cIiBjbGFzcz1cImJ0bi1pY29uIHNtYWxsIGJ0bi1pY29uLS1naG9zdCBpY29uLXRyYXNoLWNhblwiPiA8L2E+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPVwiI1wiIHRpdGxlPVwiJHtkb3duVGV4dH1cIiBjbGFzcz1cImJ0bi1pY29uIHNtYWxsIGJ0bi1pY29uLS1naG9zdCBpY29uLWNoZXZyb24tZG93blwiPiA8L2E+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPVwiI1wiIHRpdGxlPVwiJHtlZGl0VGV4dH1cIiBjbGFzcz1cImJ0bi1pY29uIHNtYWxsIGJ0bi1pY29uLS1naG9zdCBpY29uLWVkaXRcIj4gPC9hPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj1cIiR7bGVzc29uQ3JlYXRlTGlua31cIiB0aXRsZT1cIiR7YWRkVGV4dH1cIiBjbGFzcz1cImJ0bi1pY29uIHNtYWxsIGljb24tcGx1c1wiPiA8L2E+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PmA7XHJcblxyXG4gICAgICAvKk1vdmUgdXAqL1xyXG4gICAgICB0b3BpY1dyYXBwZXIucXVlcnlTZWxlY3RvcignLmljb24tY2hldnJvbi11cCcpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgc3dhcFRvcGljcyh0b3BpY0lkLCAtMSk7XHJcbiAgICAgIH0pO1xyXG5cclxuICAgICAgLypEZWxldGUqL1xyXG4gICAgICB0b3BpY1dyYXBwZXIucXVlcnlTZWxlY3RvcignLmljb24tdHJhc2gtY2FuJykuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoZSkge1xyXG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICBjdXJyZW50UmVtb3ZlVG9waWNJZCA9IHRvcGljSWQ7XHJcbiAgICAgICAgJC5mYW5jeWJveC5vcGVuKHtcclxuICAgICAgICAgIHNyYzogcmVtb3ZlVG9waWNNb2RhbElkLFxyXG4gICAgICAgICAgdG91Y2g6IGZhbHNlXHJcbiAgICAgICAgfSlcclxuICAgICAgfSk7XHJcblxyXG4gICAgICAvKk1vdmUgZG93biovXHJcbiAgICAgIHRvcGljV3JhcHBlci5xdWVyeVNlbGVjdG9yKCcuaWNvbi1jaGV2cm9uLWRvd24nKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgIHN3YXBUb3BpY3ModG9waWNJZCwgMSk7XHJcbiAgICAgIH0pO1xyXG5cclxuICAgICAgLypFZGl0Ki9cclxuICAgICAgdG9waWNXcmFwcGVyLnF1ZXJ5U2VsZWN0b3IoJy5pY29uLWVkaXQnKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgIGN1cnJlbnRFZGl0VG9waWNJZCA9IHRvcGljSWQ7XHJcbiAgICAgICAgZWRpdFRvcGljTmFtZUlucHV0LnZhbHVlID0gdG9waWNOYW1lO1xyXG4gICAgICAgICQuZmFuY3lib3gub3Blbih7XHJcbiAgICAgICAgICBzcmM6IGVkaXRUb3BpY01vZGFsSWQsXHJcbiAgICAgICAgICB0b3VjaDogZmFsc2VcclxuICAgICAgICB9KTtcclxuICAgICAgfSk7XHJcblxyXG4gICAgICBpZiAobGVzc29ucykge1xyXG4gICAgICAgIGxldCB0b3BpY1RpdGxlID0gdG9waWNXcmFwcGVyLnF1ZXJ5U2VsZWN0b3IoJy50aXRsZScpO1xyXG4gICAgICAgIGxldCB0b3BpY0R1cmF0aW9uRWwgPSB0b3BpY1dyYXBwZXIucXVlcnlTZWxlY3RvcignLmR1cmF0aW9uJyk7XHJcbiAgICAgICAgbGV0IHRvcGljQm9keSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgICAgIGxldCB0b3BpY0R1cmF0aW9uID0gMDtcclxuXHJcbiAgICAgICAgdG9waWNXcmFwcGVyLmNsYXNzTGlzdC5hZGQoJ3Nwb2lsZXInKTtcclxuICAgICAgICB0b3BpY0JvZHkuY2xhc3NOYW1lID0gJ3RvcGljX19ib2R5JztcclxuXHJcbiAgICAgICAgbGV0IGxlc3NvbnNTb3J0ZWQgPSBsZXNzb25zLnNvcnQoZnVuY3Rpb24gKGEsIGIpIHtcclxuICAgICAgICAgIHJldHVybiBhLm9yZGVyIC0gYi5vcmRlclxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICBsZXNzb25zU29ydGVkLmZvckVhY2goZnVuY3Rpb24gKHtpZDogbGVzc29uSWQsIG5hbWU6IGxlc3Nvbk5hbWUsIG9yZGVyOiBsZXNzb25PcmRlciwgZHVyYXRpb246IGxlc3NvbkR1cmF0aW9ufSkge1xyXG4gICAgICAgICAgbGV0IGxlc3NvbldyYXBwZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgICAgICAgIGxldCBsZXNzb25FZGl0TGluayA9IGAvJHtsYW5nfS9teS1jb3Vyc2VzL2NvdXJzZS8ke2NvdXJzZUlkfS90aGVtZS0ke3RvcGljSWR9L2VkaXQtbGVzc29uLSR7bGVzc29uSWR9YDtcclxuICAgICAgICAgIGxldCBsZXNzb25MaW5rID0gYC8ke2xhbmd9L215LWNvdXJzZXMvY291cnNlLyR7Y291cnNlSWR9L3RoZW1lLSR7dG9waWNJZH0vdmlldy1sZXNzb24tJHtsZXNzb25JZH1gO1xyXG4gICAgICAgICAgbGVzc29uV3JhcHBlci5jbGFzc05hbWUgPSAnbGVzc29uJztcclxuICAgICAgICAgIGxlc3NvbldyYXBwZXIuaW5uZXJIVE1MID0gYDxkaXYgY2xhc3M9XCJ0aXRsZVwiPjxhIGhyZWY9XCIke2xlc3Nvbkxpbmt9XCIgdGl0bGU9XCIke2xlc3Nvbk5hbWV9XCI+JHtsZXNzb25OYW1lfTwvYT48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZHVyYXRpb25cIj4ke21pbnV0ZXNUb0hvdXJzKGxlc3NvbkR1cmF0aW9uKX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZWRpdC1idXR0b25zXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ1bml0ZWRcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9XCIjXCIgdGl0bGU9XCIke3VwVGV4dH1cIiBjbGFzcz1cImJ0bi1pY29uIGJ0bi1pY29uLS1naG9zdCBpY29uLWNoZXZyb24tdXBcIj4gPC9hPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj1cIiNcIiB0aXRsZT1cIiR7ZGVsZXRlVGV4dH1cIiBjbGFzcz1cImJ0bi1pY29uIGJ0bi1pY29uLS1naG9zdCBpY29uLXRyYXNoLWNhblwiPiA8L2E+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPVwiI1wiIHRpdGxlPVwiJHtkb3duVGV4dH1cIiBjbGFzcz1cImJ0bi1pY29uIGJ0bi1pY29uLS1naG9zdCBpY29uLWNoZXZyb24tZG93blwiPiA8L2E+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPVwiJHtsZXNzb25FZGl0TGlua31cIiB0aXRsZT1cIiR7ZWRpdFRleHR9XCIgY2xhc3M9XCJidG4taWNvbiBidG4taWNvbi0tZ2hvc3QgaWNvbi1lZGl0XCI+IDwvYT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5gO1xyXG5cclxuICAgICAgICAgIC8qTW92ZSB1cCovXHJcbiAgICAgICAgICBsZXNzb25XcmFwcGVyLnF1ZXJ5U2VsZWN0b3IoJy5pY29uLWNoZXZyb24tdXAnKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICAgICAgc3dhcExlc3NvbnModG9waWNJZCwgbGVzc29uSWQsIGxlc3NvbnNTb3J0ZWQsIC0xKTtcclxuICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgIC8qRGVsZXRlKi9cclxuICAgICAgICAgIGxlc3NvbldyYXBwZXIucXVlcnlTZWxlY3RvcignLmljb24tdHJhc2gtY2FuJykuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoZSkge1xyXG4gICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgICAgIGN1cnJlbnRSZW1vdmVMZXNzb25JZCA9IGxlc3NvbklkO1xyXG4gICAgICAgICAgICBjdXJyZW50UmVtb3ZlVG9waWNJZCA9IHRvcGljSWQ7XHJcbiAgICAgICAgICAgICQuZmFuY3lib3gub3Blbih7XHJcbiAgICAgICAgICAgICAgc3JjOiByZW1vdmVMZXNzb25Nb2RhbElkLFxyXG4gICAgICAgICAgICAgIHRvdWNoOiBmYWxzZVxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgLypNb3ZlIGRvd24qL1xyXG4gICAgICAgICAgbGVzc29uV3JhcHBlci5xdWVyeVNlbGVjdG9yKCcuaWNvbi1jaGV2cm9uLWRvd24nKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICAgICAgc3dhcExlc3NvbnModG9waWNJZCwgbGVzc29uSWQsIGxlc3NvbnNTb3J0ZWQsIDEpO1xyXG4gICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgdG9waWNEdXJhdGlvbiArPSBsZXNzb25EdXJhdGlvbjtcclxuXHJcbiAgICAgICAgICB0b3BpY0JvZHkuYXBwZW5kKGxlc3NvbldyYXBwZXIpO1xyXG5cclxuICAgICAgICAgIGxlc3NvbnNDb3VudCsrO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICB0b3BpY1RpdGxlLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgdG9waWNXcmFwcGVyLmNsYXNzTGlzdC50b2dnbGUoJ2NvbGxhcHNlZCcpO1xyXG4gICAgICAgICAgbGV0IHRvcGljT2JqID0gZ2V0T2JqZWN0QnlJZCh0b3BpY0lkLCBjb3Vyc2VEYXRhKTtcclxuICAgICAgICAgIHRvcGljT2JqLmNvbGxhcHNlZCA9ICF0b3BpY09iai5jb2xsYXBzZWQ7XHJcbiAgICAgICAgICByZW5kZXJEYXRhKCk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHRvcGljRHVyYXRpb25FbC5pbm5lckhUTUwgPSBtaW51dGVzVG9Ib3Vycyh0b3BpY0R1cmF0aW9uKTtcclxuXHJcbiAgICAgICAgY291cnNlRHVyYXRpb24gKz0gdG9waWNEdXJhdGlvbjtcclxuXHJcbiAgICAgICAgdG9waWNXcmFwcGVyLmFwcGVuZCh0b3BpY0JvZHkpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAvKkFkZCBjcmVhdGVkIHRvcGljIHRvIGNvdXJzZSBjb250YWluZXIqL1xyXG4gICAgICBjb3Vyc2VEYXRhQ29udGFpbmVyLmFwcGVuZCh0b3BpY1dyYXBwZXIpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgbGVzc29uc0NvdW50RWwuaW5uZXJIVE1MID0gbGVzc29uc0NvdW50O1xyXG4gICAgY291cnNlRHVyYXRpb25FbC5pbm5lckhUTUwgPSBtaW51dGVzVG9Ib3Vycyhjb3Vyc2VEdXJhdGlvbik7XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBzaG93TW9kYWxNc2codGl0bGUsIHRleHQpIHtcclxuICAgIGxldCBtb2RhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IobW9kYWxNc2dJZCksXHJcbiAgICAgIG1vZGFsVGl0bGUgPSBtb2RhbC5xdWVyeVNlbGVjdG9yKCcudGl0bGUtcHJpbWFyeScpLFxyXG4gICAgICBtb2RhbFRleHQgPSBtb2RhbC5xdWVyeVNlbGVjdG9yKCcucGxhaW4tdGV4dCcpO1xyXG5cclxuICAgIG1vZGFsVGl0bGUuaW5uZXJIVE1MID0gdGl0bGU7XHJcbiAgICBtb2RhbFRleHQuaW5uZXJIVE1MID0gdGV4dDtcclxuXHJcbiAgICAkLmZhbmN5Ym94Lm9wZW4oe1xyXG4gICAgICBzcmM6IG1vZGFsTXNnSWQsXHJcbiAgICAgIHRvdWNoOiBmYWxzZVxyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBnZXRPYmplY3RCeUlkKGlkLCBkYXRhKSB7XHJcbiAgICByZXR1cm4gZGF0YS5maW5kKGZ1bmN0aW9uIChpdGVtKSB7XHJcbiAgICAgIHJldHVybiBpdGVtLmlkID09PSBOdW1iZXIoaWQpXHJcbiAgICB9KVxyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gZ2V0SW5kZXhCeUlkKGlkLCBkYXRhKSB7XHJcbiAgICByZXR1cm4gZGF0YS5maW5kSW5kZXgoZnVuY3Rpb24gKGl0ZW0pIHtcclxuICAgICAgcmV0dXJuIGl0ZW0uaWQgPT09IE51bWJlcihpZClcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gc3dhcFRvcGljcyh0b3BpY0lkLCBkaXJlY3Rpb24pIHtcclxuICAgIGxldCBjdXJyZW50ID0gZ2V0T2JqZWN0QnlJZCh0b3BpY0lkLCBjb3Vyc2VEYXRhKTtcclxuICAgIGxldCBzd2FwSXRlbSA9IGNvdXJzZURhdGEuZmluZChmdW5jdGlvbiAoaXRlbSkge1xyXG4gICAgICByZXR1cm4gKChpdGVtLm9yZGVyIC0gY3VycmVudC5vcmRlcikgKiBkaXJlY3Rpb24gPT09IDEpXHJcbiAgICB9KTtcclxuXHJcbiAgICBpZiAoc3dhcEl0ZW0pIHtcclxuICAgICAgdG1wRGF0YVNlcnZpY2Uuc3dhcFRvcGljc09yZGVycyhjb3Vyc2VJZCwgY3VycmVudC5pZCwgc3dhcEl0ZW0uaWQpLnRoZW4oZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGN1cnJlbnQub3JkZXIgPSBjdXJyZW50Lm9yZGVyICsgZGlyZWN0aW9uO1xyXG4gICAgICAgIHN3YXBJdGVtLm9yZGVyID0gY3VycmVudC5vcmRlciAtIGRpcmVjdGlvbjtcclxuICAgICAgICByZW5kZXJEYXRhKCk7XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gc3dhcExlc3NvbnModG9waWNJZCwgbGVzc29uSWQsIGxlc3NvbnMsIGRpcmVjdGlvbikge1xyXG4gICAgbGV0IGN1cnJlbnQgPSBnZXRPYmplY3RCeUlkKGxlc3NvbklkLCBsZXNzb25zKTtcclxuICAgIGxldCBzd2FwSXRlbSA9IGxlc3NvbnMuZmluZChmdW5jdGlvbiAoaXRlbSkge1xyXG4gICAgICByZXR1cm4gKChpdGVtLm9yZGVyIC0gY3VycmVudC5vcmRlcikgKiBkaXJlY3Rpb24gPT09IDEpXHJcbiAgICB9KTtcclxuXHJcbiAgICBpZiAoc3dhcEl0ZW0pIHtcclxuICAgICAgdG1wRGF0YVNlcnZpY2Uuc3dhcExlc3NvbnNPcmRlcnMoY291cnNlSWQsIHRvcGljSWQsIGN1cnJlbnQuaWQsIHN3YXBJdGVtLmlkKS50aGVuKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBjdXJyZW50Lm9yZGVyID0gY3VycmVudC5vcmRlciArIGRpcmVjdGlvbjtcclxuICAgICAgICBzd2FwSXRlbS5vcmRlciA9IGN1cnJlbnQub3JkZXIgLSBkaXJlY3Rpb247XHJcbiAgICAgICAgcmVuZGVyRGF0YSgpO1xyXG4gICAgICB9KTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIG1pbnV0ZXNUb0hvdXJzKG1pbnV0ZXMpIHtcclxuICAgIGxldCBob3VycyA9IHBhcnNlSW50KG1pbnV0ZXMvNjApO1xyXG4gICAgbGV0IGZvcm1hdHRlZEhvdXJzID0gYWRkWmVyb1RvTnVtYmVyKGhvdXJzKTtcclxuICAgIGxldCBmb3JtYXR0ZWRNaW51dGVzID0gYWRkWmVyb1RvTnVtYmVyKG1pbnV0ZXMlNjApO1xyXG5cclxuICAgIHJldHVybiBmb3JtYXR0ZWRIb3VycyArICc6JyArIGZvcm1hdHRlZE1pbnV0ZXNcclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIGFkZFplcm9Ub051bWJlcihudW1iZXIpIHtcclxuICAgIHJldHVybiBTdHJpbmcobnVtYmVyKS5sZW5ndGggPT09IDEgPyAnMCcgKyBTdHJpbmcobnVtYmVyKSA6IFN0cmluZyhudW1iZXIpXHJcbiAgfVxyXG5cclxuICB0aGlzLmluaXRDb21wb25lbnQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICBhZGRUb3BpY0J0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgbGV0IG5hbWUgPSBuZXdUb3BpY05hbWVJbnB1dC52YWx1ZTtcclxuXHJcbiAgICAgIC8qSWYgbmFtZSBpbnB1dCBpcyBlbXB0eSBoaWdobGlnaHQgaW5wdXQgYW5kIHN0b3AgdGhlIHNjcmlwdCovXHJcbiAgICAgIGlmICghbmFtZSkge1xyXG4gICAgICAgIG5ld1RvcGljTmFtZUlucHV0LnBhcmVudEVsZW1lbnQuY2xhc3NMaXN0LmFkZCgnZXJyb3InKTtcclxuICAgICAgICByZXR1cm4gZmFsc2VcclxuICAgICAgfVxyXG5cclxuICAgICAgLypSZW1vdmUgaW5wdXQncyByZWQgaGlnaGxpZ2h0IGFuZCBzZW5kIG5ldyB0b3BpYyB0byBzZXJ2ZXIqL1xyXG4gICAgICBuZXdUb3BpY05hbWVJbnB1dC5wYXJlbnRFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoJ2Vycm9yJyk7XHJcbiAgICAgIHRtcERhdGFTZXJ2aWNlLmFkZFRvcGljKGNvdXJzZUlkLCBuYW1lKS50aGVuKGZ1bmN0aW9uKHtpZCwgbmFtZX0pIHtcclxuICAgICAgICAvLyBjb3Vyc2VEYXRhLnB1c2goYWRkVG9waWMoaWQsIG5hbWUpKTsgLy91bmNvbW1lbnQgb24gcHJvZHVjdGlvblxyXG4gICAgICAgIGNvdXJzZURhdGEucHVzaChhZGRUb3BpYyhpZCArIGlkSW5jcmVtZW50LCBuYW1lKSk7IC8vcmVtb3ZlIG9uIHByb2R1Y3Rpb25cclxuICAgICAgICBpZEluY3JlbWVudCArPSAxOyAvL3JlbW92ZSBvbiBwcm9kdWN0aW9uXHJcbiAgICAgICAgcGFyZW50LmpRdWVyeS5mYW5jeWJveC5nZXRJbnN0YW5jZSgpLmNsb3NlKCk7XHJcbiAgICAgICAgcmVuZGVyRGF0YSgpO1xyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG5cclxuICAgIGVkaXRUb3BpY0J0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgbGV0IG5hbWUgPSBlZGl0VG9waWNOYW1lSW5wdXQudmFsdWU7XHJcblxyXG4gICAgICAvKklmIG5hbWUgaW5wdXQgaXMgZW1wdHkgaGlnaGxpZ2h0IGlucHV0IGFuZCBzdG9wIHRoZSBzY3JpcHQqL1xyXG4gICAgICBpZiAoIW5hbWUpIHtcclxuICAgICAgICBuZXdUb3BpY05hbWVJbnB1dC5wYXJlbnRFbGVtZW50LmNsYXNzTGlzdC5hZGQoJ2Vycm9yJyk7XHJcbiAgICAgICAgcmV0dXJuIGZhbHNlXHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC8qUmVtb3ZlIGlucHV0J3MgcmVkIGhpZ2hsaWdodCBhbmQgc2VuZCBuZXcgdG9waWMgbmFtZSB0byBzZXJ2ZXIqL1xyXG4gICAgICBuZXdUb3BpY05hbWVJbnB1dC5wYXJlbnRFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoJ2Vycm9yJyk7XHJcbiAgICAgIHRtcERhdGFTZXJ2aWNlLmVkaXRUb3BpYyhjb3Vyc2VJZCwgY3VycmVudEVkaXRUb3BpY0lkLCBuYW1lKS50aGVuKGZ1bmN0aW9uICh7bXNnVGl0bGUsIG1zZ1RleHR9KSB7XHJcbiAgICAgICAgcGFyZW50LmpRdWVyeS5mYW5jeWJveC5nZXRJbnN0YW5jZSgpLmNsb3NlKCk7XHJcblxyXG4gICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgc2hvd01vZGFsTXNnKG1zZ1RpdGxlLCBtc2dUZXh0KTtcclxuICAgICAgICB9LCAzODApO1xyXG5cclxuICAgICAgICBsZXQgY3VycmVudE9iaiA9IGdldE9iamVjdEJ5SWQoY3VycmVudEVkaXRUb3BpY0lkLCBjb3Vyc2VEYXRhKTtcclxuICAgICAgICBjdXJyZW50T2JqLm5hbWUgPSBuYW1lO1xyXG5cclxuICAgICAgICByZW5kZXJEYXRhKCk7XHJcbiAgICAgIH0pO1xyXG4gICAgfSk7XHJcblxyXG4gICAgcmVtb3ZlVG9waWNCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoZSkge1xyXG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgIHRtcERhdGFTZXJ2aWNlLnJlbW92ZVRvcGljKGNvdXJzZUlkLCBjdXJyZW50UmVtb3ZlVG9waWNJZCkudGhlbihmdW5jdGlvbiAoe21zZ1RpdGxlLCBtc2dUZXh0fSkge1xyXG4gICAgICAgIHBhcmVudC5qUXVlcnkuZmFuY3lib3guZ2V0SW5zdGFuY2UoKS5jbG9zZSgpO1xyXG5cclxuICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgIHNob3dNb2RhbE1zZyhtc2dUaXRsZSwgbXNnVGV4dCk7XHJcbiAgICAgICAgfSwgMzgwKTtcclxuXHJcbiAgICAgICAgbGV0IGN1cnJlbnRPYmpJbmRleCA9IGdldEluZGV4QnlJZChjdXJyZW50UmVtb3ZlVG9waWNJZCwgY291cnNlRGF0YSk7XHJcblxyXG4gICAgICAgIGNvdXJzZURhdGEuc3BsaWNlKGN1cnJlbnRPYmpJbmRleCwgMSk7XHJcblxyXG4gICAgICAgIGZvciAobGV0IGkgPSBjdXJyZW50T2JqSW5kZXg7IGkgPCBjb3Vyc2VEYXRhLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICBjb3Vyc2VEYXRhW2ldLm9yZGVyLS1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHJlbmRlckRhdGEoKTtcclxuICAgICAgfSk7XHJcbiAgICB9KTtcclxuXHJcbiAgICByZW1vdmVMZXNzb25CdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoZSkge1xyXG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgIHRtcERhdGFTZXJ2aWNlLnJlbW92ZUxlc3Nvbihjb3Vyc2VJZCwgY3VycmVudFJlbW92ZVRvcGljSWQsIGN1cnJlbnRSZW1vdmVMZXNzb25JZCkudGhlbihmdW5jdGlvbih7bXNnVGl0bGUsIG1zZ1RleHR9KSB7XHJcbiAgICAgICAgcGFyZW50LmpRdWVyeS5mYW5jeWJveC5nZXRJbnN0YW5jZSgpLmNsb3NlKCk7XHJcblxyXG4gICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgc2hvd01vZGFsTXNnKG1zZ1RpdGxlLCBtc2dUZXh0KTtcclxuICAgICAgICB9LCAzODApO1xyXG5cclxuICAgICAgICBsZXQgbGVzc29ucyA9IGdldE9iamVjdEJ5SWQoY3VycmVudFJlbW92ZVRvcGljSWQsIGNvdXJzZURhdGEpLmxlc3NvbnM7XHJcblxyXG4gICAgICAgIGxldCBjdXJyZW50T2JqSW5kZXggPSBnZXRJbmRleEJ5SWQoY3VycmVudFJlbW92ZUxlc3NvbklkLCBsZXNzb25zKTtcclxuXHJcbiAgICAgICAgbGVzc29ucy5zcGxpY2UoY3VycmVudE9iakluZGV4LCAxKTtcclxuXHJcbiAgICAgICAgZm9yIChsZXQgaSA9IGN1cnJlbnRPYmpJbmRleDsgaSA8IGxlc3NvbnMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgIGxlc3NvbnNbaV0ub3JkZXItLVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmVuZGVyRGF0YSgpO1xyXG4gICAgICB9KVxyXG4gICAgfSk7XHJcblxyXG4gICAgdG1wRGF0YVNlcnZpY2UuZ2V0Q291cnNlRGF0YShjb3Vyc2VJZCkudGhlbihmdW5jdGlvbiAoZGF0YSkge1xyXG4gICAgICBjb3Vyc2VEYXRhID0gWy4uLmRhdGFdO1xyXG4gICAgICByZW5kZXJEYXRhKCk7XHJcbiAgICB9KTtcclxuICB9O1xyXG5cclxuICB0aGlzLnJlbmRlckRhdGEgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICByZW5kZXJEYXRhKCk7XHJcbiAgfTtcclxufTsiXSwiZmlsZSI6ImNvdXJzZS1lZGl0LmpzIn0=
